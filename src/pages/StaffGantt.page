<apex:page sidebar="false" controller="StaffGanttCtrl" action="{!init}" >

<apex:stylesheet value="{!URLFOR($Resource.kendoFiles2018, 'styles/kendo.common.min.css')}"/>
<apex:stylesheet value="{!URLFOR($Resource.kendoFiles2018, 'styles/kendo.default.min.css')}"/>

<apex:includeScript value="{!URLFOR($Resource.kendoFiles2018, 'js/jquery.min.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.kendoFiles2018, 'js/kendo.all.min.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.kendoFiles2018, 'js/messages/kendo.messages.ja-JP.min.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.kendoFiles2018, 'js/cultures/kendo.culture.ja-JP.min.js')}"/>
<!-- 2020/08/31 バージョン管理。保存したらバージョン1、2と保存して後から呼び出せる機能、もしくはexcel出力 できるように。 by zy BEGIN-->
<apex:includeScript value="{!URLFOR($Resource.kendoFiles2018, 'js/jszip.min.js')}"/>
<!-- 2020/08/31 バージョン管理。保存したらバージョン1、2と保存して後から呼び出せる機能、もしくはexcel出力 できるように。 by zy END-->
<!-- 2018/11/30 日付を入力する際、開始を編集する際に終了が１ヶ月後など期間を指定できるといい by cxw BEGIN -->
<apex:includeScript value="{!URLFOR($Resource.kendoFiles2018, 'js/laydate.js')}"/>
<!-- 2018/11/30 日付を入力する際、開始を編集する際に終了が１ヶ月後など期間を指定できるといい by cxw END -->
<c:CommHeaderComp loadJsLib="false"/>
<!-- 2015/07/10 KeyDefine追加 -->
<apex:includeScript value="{!URLFOR($Resource.queryfiles, 'js/keymaster.js')}"/>
<!-- 2020/11/05 bug fixed #PC8950 BY zyz BEGIN -->
<apex:includeScript value="{!$Resource.CommJs}"/>
<!-- 2020/11/05 bug fixed #PC8950 BY zyz END -->
<style>
.buttonGroup{
	-webkit-box-shadow: 0 2px 6px rgba(0,0,0,.2), 0 2px 3px rgba(0,0,0,.05);
    box-shadow: 0 2px 6px rgba(0,0,0,.2), 0 2px 3px rgba(0,0,0,.05);
    width: 200px;
    height:25px;
    margin: 2px;
    padding: 2px;
}
.buttonGroup .k-icon{
	padding:5px;
	cursor: pointer;
	float:left;
}
.k-icon:hover{
	background:#ebebeb;
}
.selectRow{
	position: relative;
	height: 30px;
}
#warpBox{
	/* 2020/09/30 画面スクロール時にヘッダーの固定、ブラウザ側スクロールが不要 by zy BEGIN */
	height: 100%;
	/* 2020/09/30 画面スクロール時にヘッダーの固定、ブラウザ側スクロールが不要 by zy END */
}
span.dateFormat,#selectPanel .requiredBlock,#selectPanel select{
	display:none;
}
#selectPanel input[type=text]{
	width: 185px;
}
.selectRow{
	background: red;
}
div.k-floatwrap.k-header.k-gantt-toolbar button{
	display: none;
}
#floatPanel{
	width:46px;
	border-radius: 4px;
	background: #ebebeb;
	vertical-align: middle;
    text-align: center;
    line-height: 100px;
    position: absolute;
    right:5px;
    top:35%;
    display: none;
}
.k-gantt-toolbar>ul>li {
    border-width: 1px 1px 1px 1px;
}
#toolbarRows div{
	float:left;
}
.warningClass{
	width: 16px;
    height: 16px;
    display: block;
    margin-left: 4px;
    text-align: center;
    background-repeat:no-repeat;
	background-image: url("/img/msg_icons/warning16.png");
}
.errorClass{
	width: 16px;
    height: 16px;
    display: block;
    margin-left: 4px;
    text-align: center;
    background-repeat:no-repeat;
	background-image: url("/img/msg_icons/error16.png");
}
.easyClass{
	width: 16px;
    height: 16px;
    display: block;
    margin-left: 4px;
    text-align: center;
    background-repeat:no-repeat;
	background-image: url("/img/msg_icons/confirm16.png");
}
.noShowClass{
	display: none;
}
#toobarVertical{
	background-color: #e9e9e9;
    border-width: 0 1px;
    background-repeat: repeat-y;
    position: absolute;
    bottom: 0px;
    border-style: solid;
}
.disableClass{
    color: darkgray !important;
    background: lightgray !important;
    border-color: lightgray !important;
}
#dragWindow{
	background: transparent;
	position: absolute;
	display: none;
	z-index:3;
}
.classMarQuee{
	background-color: #f35800;
    border-color: #f85a00;
    position: absolute;
    z-index:1000;
    opacity: .6;
}
#wrapTooBar{
	width: 100%;
	height:35px;
	position: relative;
}
#rightBar{
	position: absolute;
	right:0;
}
#leftBar{
	position: absolute;
	left:0;
	width:80%;
}
#leftBar span.messageClass{
	font-size: 20px;
}
.btnSpan{
	font-size: 20px;
	border:1px solid #d5d5d5;
	width: 25px;
	height: 25px;
	cursor: pointer;
	float:left;
}
#rightBar span.k-widget.k-dropdown{
	width: auto;
	min-width:150px;
}
span.helpClass{
	position: relative;
    top: -1px;
}
#projectWindow{
	display: block;
    padding-bottom: 1em;
    font-weight: bold;
    color: #444;
}
.projectEditoPanel{
	overflow: auto;
	max-height: 500px;
	padding:5px;
	box-shadow: 0 1px 2px 1px rgba(0,0,0,.08), 0 3px 6px rgba(0,0,0,.08);
	margin-bottom: 10px;
	line-height: 25px;
}
.panelToolBar{
	width: 100%;
	margin-top:5px;
	background: border-style: solid;
	border-width: 1px; 
	border-collapse: separate;
	border-spacing: 4px;
	border-color: #c5c5c5;
}
#projectWindow .k-icon.k-i-calendar{
	top: 5px;
}
.cusRepuiredClass{
    background-color: #c00;
    position: absolute;
    width: 3px;
    top: 1px;
    bottom: 1px;
}
.requiredClass{
	border: 1px solid red !important;
}
::-webkit-input-placeholder { /* WebKit browsers */
    color:    red;
}
:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
    color:    red;
}
::-moz-placeholder { /* Mozilla Firefox 19+ */
    color:    red;
}
:-ms-input-placeholder { /* Internet Explorer 10+ */
    color:    red;
}
.toobarProject{
	margin-right: 5px;
    padding-right: 5px;
    border-right: 1px solid #d5d5d5;
}
.k-floatwrap.k-header.k-gantt-toolbar:last-child {
	display:none;
	height:0px;
	padding: 0;
	margin:0;
}
.k-gantt-views>li.k-state-default{
	margin-left: 0px;
}
/* 2018/08/08 メモ追加　by　zy BEGIN */
/*
#gantt30 table>tbody>tr>td:nth-child(8) span{
	white-space: pre-line;
}*/
#memoArea{
	display: none;
}
.memoAreaClass{
	position: absolute;
}
/* 2018/08/08 メモ追加　by　zy END */
/* 2018/11/15 8.予定と実績を表示させる、させないの切り替え by zy BEGIN */
.j-task-wrap{
	position: absolute;
    padding: 0 23px 5px;
    margin: -1px -23px 0;
    z-index: 2;
}
.j-task{
	background: gray;
	border-radius: 3px;
	position: relative;
	height: 13px;
    top: 15px;
}
table.k-gantt-tasks tr:hover .j-task-wrap{
	z-index:0;
}
.winScan{
	position: fixed;
    width: 100%;
    height: 100%;
    background: rgba(0,0,0,.1);
    top: 0px;
    left: 0px;
    z-index: 2;
}
.confirmWrap{
	width: 600px;
    position: absolute;
    background: #ececec;
    top: 150px;
    left: calc(100%/2 - 250px);
    border-radius: 9px;
}
.confirmWrap .title{
	font-weight: bold;
	margin: 15px;
}
div.confirmMsg{
    margin-left: 15px;
}
div.inputClass{
	margin: 15px;
}
#baseName{
	width: 83%;
    margin-left: 10px;
}
.footBtn{
	margin: 15px;
	text-align: right;
}
#projectPlanName{
	overflow: hidden;
    max-width: 200px;
}
#projectPlanName + .k-icon{
	cursor: pointer;
    position: relative;
    top: 6px;
}
/* 2018/11/15 8.予定と実績を表示させる、させないの切り替え by zy END */
/* 2018/11/30 関連書類の紐付け by cxw BEGIN*/
#attachmentTips{width: 460px;}
#attachmentTips table{border-collapse:collapse;border-spacing:0;width:100%;background-color:#fff;color:#666;width:100%;}
#attachmentTips thead tr{background-color:#f2f2f2}
#attachmentTips td{width: 80px; position: relative;}
#attachmentTips tbody td{padding:5px;}
#attachmentTips a{text-decoration:none}
#attachmentTips .loading{padding: 10px; border: solid #e6e6e6 1px;}
#attachmentTips .attachment-thumb-img-wrap{position: relative;height:80px;line-height:55px;vertical-align:middle;border:1px solid #eee;display:block;text-align:center;width:80px}
#attachmentTips .attachment-thumb-title{display:block;color:#666;font-size:12px;text-align:center;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;margin-top:5px;width:80px}
#attachmentTips .modal-row-label{color:#888;font-weight:400;font-size: 13px;}
#attachmentTips .file-panel,#attachmentTips .operation-panel{position:absolute;line-height:normal;bottom:0;left:0;width:100%;height:18px;border-top:solid 1px #eee}
#attachmentTips .file-panel{top:5px;border:0}
#attachmentTips .file-size{font-size:30px;color:#a2a2a2}
#attachmentTips .operation-panel span{color:#aaa;vertical-align:unset;margin-right:10px}
#attachmentTips .operation-panel span:last-child{margin-right:0}
#attachmentTips .operation-panel span:hover{color: black;cursor: pointer;}
/* 2018/11/30 関連書類の紐付け by cxw END*/
body.small .k-icon.k-i-none{
	font-size:inherit;
}
body.small .k-filter-row th, .k-grid-header th.k-header{
	padding: 0px;
}
body.small .k-block, .k-widget{
	line-height: 1em;
}
body.small .k-grid-header th.k-header>.k-link{
	min-height: 1em;
	line-height:1em;
}
body.small #gantt30 .k-grid-content .k-icon{
	font-size: inherit;
}
body.small .warningClass,body.small .errorClass,body.small .easyClass{
	width: 1em;
	height:1em;
	background-repeat: round;
}
body.small .k-task-summary{
	height:.5em;
}
body.small .k-task-summary:after,body.small .k-task-summary:before{
	border-width:.5em;
}
body.small .k-task-milestone{
	width: 1em;
    height: 1em;
}
body.small .j-task{
	height: 1em;
    top: 1em;
}
body.small .k-gantt-dependencies{
	display: none;
}
/*2019/03/15 変更履歴機能追加 by cxw BEGIN*/
.record {
	margin: 0 2px;
	cursor: pointer;
}
.console-nodata {
  width: 100%; 
  height: 100%; 
  display: inline-block; 
  line-height: 200px; 
  text-align: center; 
  font-size: 50px; 
  color: #e4e4e4;
}
.console-item {
  border-bottom: 1px solid #DDD;
  padding: 5px 10px;
  height: 2em;
  line-height: 2em; 
  vertical-align: middle;
  position: relative;
}
.console, .console-content-title {
  background-color:#ffffff; 
  color:#333; 
  font-family: Consolas, Monaco, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace; 
  margin:0; 
  overflow-x:hidden; 
  text-align:left; 
  height:200px; 
  border:1px solid rgba(20,53,80,0.1); 
  text-indent:0;
}
.console-title {
  margin: 0; 
  display: inline-block; 
  margin-bottom: 1em; 
  line-height: 1em; 
  font-weight: bold; 
  text-transform: uppercase;
}
.console-content-title {
	border-bottom: 0;
	height: auto;
	padding: .5em 10px;
	background-color: #e3e3e3;
	background-image: url(textures/highlight.png);
    background-image: none,-webkit-linear-gradient(top,rgba(255,255,255,.6) 0,rgba(255,255,255,.0) 100%);
    background-image: none,-moz-linear-gradient(top,rgba(255,255,255,.6) 0,rgba(255,255,255,.0) 100%);
    background-image: none,-o-linear-gradient(top,rgba(255,255,255,.6) 0,rgba(255,255,255,.0) 100%);
    background-image: none,linear-gradient(to bottom,rgba(255,255,255,.6) 0,rgba(255,255,255,.0) 100%);
    background-position: 50% 50%;
    background-color: #e3e3e3;
}

.console, .console-title, .console-content-title {
	font-size: 12px;
}

@media only screen and (max-width: 992px)  {
	.console, .console-title, .console-content-title {
		font-size: 15px;
	}
}

.console, .console-title {
	max-width: 60em;
}
.console-item {
	display: flex;
    align-items: baseline;
    height: auto;
    overflow: hidden;
    background-color:#e6e6fa!important;
}
.console {
	height: auto;
	min-height: 200px;
	max-height: 18em;
}
.el-item {
	width: auto; 
	line-height: normal;
	display: inline-block;
	overflow: hidden;
}
.el-item:not(:last-child) {
	flex-shrink: 0;
	line-height: inherit;
}
span.date {
	width: 12em;
}
span.who {
	width: 150px;
}
.colla {
	transition: transform 0.2s ease-in-out; 
	position: absolute;
    top: calc(50% - 8px);
}
.expanded {
	max-height: none;
}
/*2019/03/15 変更履歴機能追加 by cxw END*/
/* 2019/03/15 マルチタスクの表示を切り替える by cxw BEGIN */
.selected {
    color: #f4631c;
    background: #ebebeb;
}
/* 2019/03/15 マルチタスクの表示を切り替える by cxw END */
/* 2019/07/15 プロジェクト明細のURLをプロジェクト管理画面から出力できるように陣屋コネクトとしての改善要望です。 by zy BEGIN */
.k-i-chatter{
	background-image: url('/img/icon/chatterC32.png');
	background-size: 1.2em 1.2em;
    display: inline-block;
    width: 1.2em;
    height: 1.2em;
    position: relative;
    vertical-align: middle;
    cursor: pointer;
}
.gray{
	-webkit-filter: grayscale(100%);
    -moz-filter: grayscale(100%);
    -ms-filter: grayscale(100%);
    -o-filter: grayscale(100%);
    filter: grayscale(100%);
    filter: gray;
    opacity:0.7;
}
/* 2019/07/15 プロジェクト明細のURLをプロジェクト管理画面から出力できるように陣屋コネクトとしての改善要望です。 by zy END */
/* 2019/08/15 プロジェクト管理画面からプロジェクト明細のページに簡単に遷移できるようにしたいです。 by zy BEGIN */
.titleSpan{
	text-decoration:underline;
	cursor: pointer;
}
/* 2019/08/15 プロジェクト管理画面からプロジェクト明細のページに簡単に遷移できるようにしたいです。 by zy END */
/* 2019/12/30 タスクがカレンダーに表示させるか、表示させない切替対応 by zy BEGIN */
/*
#gantt30 div.k-treelist div.k-grid-header-wrap thead th{
	white-space: normal;
}*/
/* 2019/12/30 タスクがカレンダーに表示させるか、表示させない切替対応 by zy END */
/* 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように  by zy BEGIN */
.k-list-container{
	width:auto !important;
	min-width:170px;
}
.k-list-container .k-list-scroller{
	white-space: nowrap;
}
/* 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように  by zy END */
/* 2020/10/31 担当者を複数設定できるように by zy BEGIN */
.userMultiSel{
	position : absolute;
}
.userMultiSel li.k-button{
	margin-top: unset!important;
	margin-bottom: unset!important;
}
/* 2020/10/31 担当者を複数設定できるように by zy END */
/* 2020/10/30 2.14.特定日のマーキング機能、スケジュールのなかでポイントをうち、右の表示マークをつける機能 by zy BEGIN*/
.k-task-tip{ 
	position: absolute; 
	width: 0px;                
	height: 0px;
	color: red;
	z-index: 3;
	cursor: pointer;
}
/* 2020/10/30 2.14.特定日のマーキング機能、スケジュールのなかでポイントをうち、右の表示マークをつける機能 by zy END*/
/* 2020/10/30 8700 bug fixed by zy BEGIN*/
.layui-laydate-range{
	width:550px;
}
/* 2020/10/30 8700 bug fixed by zy END*/
.k-task-wrap{
    padding-bottom: 2px;
}
.k-task-template{
    line-height: 1.3em;
}
</style>
<!-- 2020/11/20 倍率と文字サイズがどの組み合わせであれ、ズレないように修正 by zy BEGIN -->
<style id="sf1CssInfo"></style>
<!-- 2020/11/20 倍率と文字サイズがどの組み合わせであれ、ズレないように修正 by zy END -->
<!-- 2019/1/15 プロジェックト機能のPriority(重要度）列を追加 by cxw BEGIN -->
<input type="hidden" id="importanceJson" value="{}"/>
<input type="hidden" id="importanceLstJson" value="{!importanceLstJson}"/>
<!-- 2019/1/15 プロジェックト機能のPriority(重要度）列を追加 by cxw END -->
<!-- 2019/12/30 タスクがカレンダーに表示させるか、表示させない切替対応 by zy BEGIN-->
<input type="hidden" id="hidCalendarJson" value="{!calendarJson}"/>
<!-- 2019/12/30 タスクがカレンダーに表示させるか、表示させない切替対応 by zy END-->
<apex:form >
<apex:pageBlock id="dblock">
<script id="template" type="text/x-kendo-template">
	<div id="toolbarRows"></div>
</script>
<script>
beenFocused = true;
// 初期化
$ = jQuery.noConflict();
/*2019/03/15 変更履歴機能追加 by cxw BEGIN*/
$.fn.extend({
	console: function(title, contentTitle){
		this.data('CConsole', new CConsole(this, title, contentTitle));
		return this;
	}
});
/*2019/03/15 変更履歴機能追加 by cxw END*/
var PageInfo = {};
var gridsDs,orgDataItem,minHeight,maxHeight;
// 2020/09/30 8151 bug fixed by zy BEGIN
var CUS_LABEL = {
	filterAlert : "フィルターを外してから再度試してください。"
	,blankTxt : "　"
	,markTxt:"マーキング"
	,Assign:'assign'
	,CurAssign:'curAssign'
	,Manager:'manager'
	,TRUE:'true'
	,MARK_LIMIT:'登録件数上限(30)を超えました。'
	,MARK_DELETE:"{!JSENCODE($Label.MSG_9103)}"
	,USER_ASSIN_NO:'担当者登録してください'
	,ROLE_EDIT:'edit' // 明細編集権限
	,ROLE_TASK:'taskRole' // タスクの権限設定
	,ROLE_READ:'read' // 明細参照権限
	,ERROR:[{key:'OP_WITH_INVALID_USER_TYPE_EXCEPTION',message:'該当ユーザーを担当者に追加することができません。'}]
	
}
// 2020/09/30 8151 bug fixed by zy END
var FUNTYPE = {
	UP:'UP',
	DOWN:'DOWN',
	LEFT:'LEFT',
	RIGHT:'RIGHT',
	DEPREAD:'DEPREAD',
	DEPCREATE:'DEPCREATE',
	DEPUPDATE:'DEPUPDATE',
	READ:'READ',
	DTUPDATE:'DTUPDATE',
	DTCREATE:'DTCREATE',
	DTDESTORY:'DTDESTORY',
	CREATEPROJECT:'CREATEPROJECT',
	TASKTOPROJECT:'TASKTOPROJECT',
	GETPROJECT:'GETPROJECT',
	GETTASK:'GETTASK',
	GETMANAGER:'GETMANAGER',
	GETPJASSIGN:'GETPJASSIGN',
	GETPJBYUSER:'GETPJBYUSER',
	SAVECOOKIEPJ:'SAVECOOKIEPJ',
	// 2018/11/15 顾客最后操作的内容，自动记录 by zy BEGIN
	DEPDESTORY:'DEPDESTORY'
	,SAVECOOKIEFD:'SAVECOOKIEFD'
	,SAVECOOKIELY:'SAVECOOKIELY'
	,SAVECOOKIESORT:'SAVECOOKIESORT'
	,SAVECOOKIEPT:'SAVECOOKIEPT'
	,SAVECOOKIEVIEW:'SAVECOOKIEVIEW'
	,SAVECOOKIEUSER:'SAVECOOKIEUSER'
	// 2018/11/30 関連書類の紐付け by cxw BEGIN
	,ATTACHMENT:'ATTACHMENT'
	,ATTACHMENT_DELETE:'ATTACHMENT_DELETE'
	// 2018/11/30 関連書類の紐付け by cxw END
	// 2018/11/30 行動を範囲選択してコピーできるといい。 by cxw BEGIN
	,DTUPDATE_ALL: 'DTUPDATE_All'
	// 2018/11/30 行動を範囲選択してコピーできるといい。 by cxw END
	};
	// 2018/11/15 顾客最后操作的内容，自动记录 by zy END
kendo.culture("ja-JP");
// 画面load
$(document).ready(function(){
	// 2019/1/15 プロジェックト機能のPriority(重要度）列を追加 by cxw BEGIN
    var importanceLstJson = $.parseJSON($("#importanceLstJson").val() || "[]");
    var result = {};
    for(var i = 0; i < importanceLstJson.length; i++) result[importanceLstJson[i]['value']] = importanceLstJson[i]['label'];
    $("#importanceJson").val(JSON.stringify(result));
    // 2019/1/15 プロジェックト機能のPriority(重要度）列を追加 by cxw END
	// 2020/09/30 画面スクロール時にヘッダーの固定、ブラウザ側スクロールが不要 by zy BEGIN
	// bindSplit();
	setContentHt();
	// 2020/09/30 画面スクロール時にヘッダーの固定、ブラウザ側スクロールが不要 by zy END
	bindGatt('month');
	bindGrid();
	bindButtonGroup();
    bindDropDown();
    bindKendoDatepicker();
    bindKendoProjectWin();
    bindKeyDown();
	// 2020/09/30 画面スクロール時にヘッダーの固定、ブラウザ側スクロールが不要 by zy BEGIN
	bindSplit();
	delete window.errorAlert;
	// 2020/09/30 画面スクロール時にヘッダーの固定、ブラウザ側スクロールが不要 by zy END
});
function bindKeyDown(){
	$(document).on("keydown",function(event){
		if (event.keyCode == '46' ||event.keyCode == '8') {
			var selectLine = $(".k-line.k-state-selected");
			if (selectLine.length > 0) {
				var uid = selectLine.attr("data-uid");
				var gantt = $("#gantt30").data("kendoGantt");
				var selectTask = gantt.dependencies.getByUid(uid);
				var curUserId = $("#hidUserId").val();
				var isManager = $("#hidManager").val();
				if (isManager != "true") {
					var isAssign = $("#hidAssign").val();
					var userid = selectTask.userid;
					if (isAssign == "true" && userid != curUserId) {
						return false;
					}
				}
				gantt.removeDependency(selectTask);
			}
		// 2018/11/30 行動を範囲選択してコピーできるといい。 by cxw BEGIN
		}else if(event.keyCode == "16"){
			PageInfo.processType = 'SHIFT';
		}else if(event.keyCode == "27"){
			if($("#attachmentTips").length){
				AttachmentUtil.Tips.closeTips();
				return;
			}
			// 2019/03/15 変更履歴機能追加 by cxw BEGIN
			if ($('#console').length > 0) {
				$('#console').remove();
				return;
			}
			// 2019/03/15 変更履歴機能追加 by cxw END
			// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
			// var gantt = $("#gantt30").data("kendoGantt");
			var gantt = getActionGantt();
			// 2020/09/31 画面スクロールを２分割したい by zy END
			gantt.clearSelection();
			deleteSelected();
			delete PageInfo.selDataId;
			delete PageInfo.processType;
		}
	}).on("keyup", function(event){
		if(event.keyCode == "16"){
			delete PageInfo.processType;
		}
	// 2018/11/30 行動を範囲選択してコピーできるといい。 by cxw END
	});
	/* Window:F5 / Ctrl+R  Mac:Command+R 対応[2015/12/10 ADD] */
	var $key = key.noConflict();
	$key.filter = function(event){
		// 全画面から画面更新可能
		if((event.code == "KeyV" || event.code == "KeyC") && (event.ctrlKey || event.metaKey)){
			var tagName = (event.target || event.srcElement).tagName;
	  		return !(tagName == 'INPUT' || tagName == 'TEXTAREA');
		}
		return true;
	}
	$key('command+r, ctrl+r, f5', function(e){ 
		refreshAllPage();
		e.preventDefault();
		return false;
	});
	// 2018/11/30 行動を範囲選択してコピーできるといい。 by cxw BEGIN
	$key('command+c, ctrl+c', function(e){ 
		// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
		// var gantt = $("#gantt30").data("kendoGantt");
		var gantt = getActionGantt();
		// 2020/09/31 画面スクロールを２分割したい by zy END
		if($(event.target).parents("div.k-grid-content").length > 0){
			copySelect(); 
			return false;
		}
	});
	$key('command+v, ctrl+v', function(e){ 
		// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
		// var gantt = $("#gantt30").data("kendoGantt");
		var gantt = getActionGantt();
		// 2020/09/31 画面スクロールを２分割したい by zy END
		if(!gantt.list.editable) {
			pasteSelect();
			return false;
		}
	});
	// 2018/11/30 行動を範囲選択してコピーできるといい。 by cxw END
}
// 新規プロジェックト画面
function bindKendoProjectWin(){
	$("#projectWindow").kendoWindow({
			// 2019/03/15 マルチタスクの表示を切り替える by cxw BEGIN
            width: "750px",
            // 2019/03/15 マルチタスクの表示を切り替える by cxw END
            height: "auto",
            actions: ["Close"],
            visible: false,
            close:function(e){
            	deleteSelected();
            }
        }).data("kendoWindow").center();
}
// 日付作成
function bindKendoDatepicker(){
	$("#projectStartDt,#projectEndDt").kendoDatePicker({format:JINYACONNECT.DateFormat});
	$("input[id$=contactInput],input[id$=ownerInput],#taskName").addClass("k-textbox");
}
// グループボタン作成
function bindButtonGroup(){
	$("#align").kendoButtonGroup({
        selection: "single"
    });
}
// 選択リスト作成
function bindDropDown(){
	// 担当者作成
	$("[id$=userDropDown]").kendoDropDownList({
          dataTextField: "UserName",
          width:100,
          dataValueField: "UserId",
          dataSource:{
          	transport: {
	    		read: function (options) {
	    			var projectId = $("#hidMainProjectId").val();
	    			taskDataSource(options,FUNTYPE.GETPJASSIGN,projectId,false,userProjectFilter);
	    		}
	    	},
          },
          change: function(e) {
		    var value = this.value();
		    var gantt = $("#gantt30").data("kendoGantt");
		    if (value == "")  gantt.dataSource.filter({});
		    // 2020/11/15 8997 bug fixed by zy BEGIN
		    else {
		    	gantt.dataSource.filter({
		    		logic: "or",
		    		filters:[
		    			{field:"userid",operator:"eq",value:value},
		    			{field:"userids",operator:"contains",value:value},
		    		]
		    	});
		    }
		    // 2020/11/15 8997 bug fixed by zy END
		    $("#hidTaskUser").val(value);
		    taskDataSource(false,FUNTYPE.SAVECOOKIEUSER,value);
		  }
     });
     // 取引先選択リスト作成
     $("[id$=manegerDropdown]").kendoComboBox({
          dataTextField: "UserName",
          width:100,
          dataValueField: "UserId",
          placeholder: "",
     });
     // プロジェックト選択リスト作成
   	 var userDropProjects = $("[id$=userDropProjects]").kendoDropDownList({
   	 	dataTextField: "text",
        dataValueField: "value",
		// 2020/09/30 右上のタスク選択リストに自分が関連するタスクのみ表示機能と検索機能運用が始まると200以上のタスクが作られることが想定されるため探しやすくするため by zy BEGIN
		filter: "contains",
		// 2020/09/30 右上のタスク選択リストに自分が関連するタスクのみ表示機能と検索機能運用が始まると200以上のタスクが作られることが想定されるため探しやすくするため by zy END
        dataSource:{
         	transport: {
	    		read: function (options) {
	    			var projectId = $("#hidMainProjectId").val();
	    			// 2019/03/15 マルチタスクの表示を切り替える by cxw BEGIN
	    			// taskDataSource(options,FUNTYPE.GETPJBYUSER,projectId,false,roleCheck);
	    			var finishMode = $("#cFinishMode").attr('mode') == 'true';
					// 2020/09/30 右上のタスク選択リストに自分が関連するタスクのみ表示機能と検索機能運用が始まると200以上のタスクが作られることが想定されるため探しやすくするため by zy BEGIN
					var publicMode = $("#publicMode").hasClass("selected");
					// 2020/09/30 右上のタスク選択リストに自分が関連するタスクのみ表示機能と検索機能運用が始まると200以上のタスクが作られることが想定されるため探しやすくするため by zy END
					// 2020/10/31 プロジェクトオブジェクトのレコードにプロジェクトコードを作成し by zy BEGIN
					var record = getRecordName();
					// 2020/10/31 プロジェクトオブジェクトのレコードにプロジェクトコードを作成し by zy END
	    			taskDataSource({success: function(result){
	    				options.success(result[0].data);
					// 2020/09/30 右上のタスク選択リストに自分が関連するタスクのみ表示機能と検索機能運用が始まると200以上のタスクが作られることが想定されるため探しやすくするため by zy BEGIN
					// 2020/10/31 プロジェクトオブジェクトのレコードにプロジェクトコードを作成し by zy BEGIN
	    			}},FUNTYPE.GETPJBYUSER,{projectId, finishMode,publicMode,record},false,roleCheck);
	    			// 2020/10/31 プロジェクトオブジェクトのレコードにプロジェクトコードを作成し by zy END
					// 2020/09/30 右上のタスク選択リストに自分が関連するタスクのみ表示機能と検索機能運用が始まると200以上のタスクが作られることが想定されるため探しやすくするため by zy END
	    			// 2019/03/15 マルチタスクの表示を切り替える by cxw END
	    		}
    		},
        },
		// 2020/09/30 右上のタスク選択リストに自分が関連するタスクのみ表示機能と検索機能運用が始まると200以上のタスクが作られることが想定されるため探しやすくするため by zy BEGIN
		/*
        dataBinding:function(e){
          	var maxWidth = 150;
          	var datas = e.sender.dataSource.data();
          	$("body").append("<div id='textcheck' style='display:inline-block;font-size: 14.5px;'/>");
			for (var i = 0 ; i < datas.length ; i++) {
				var item = datas[i];
				$("#textcheck").text(item.text);
				var eachWidth = $("#textcheck").width();
				if (eachWidth > maxWidth) maxWidth = eachWidth;
			}
			$("#textcheck").remove();
			// padding、border
			maxWidth += 20;
			e.sender.wrapper.width(maxWidth);
			e.sender.list.width(maxWidth);
        },*/
		// 2020/09/30 右上のタスク選択リストに自分が関連するタスクのみ表示機能と検索機能運用が始まると200以上のタスクが作られることが想定されるため探しやすくするため by zy END
   		change:function(e){
   			// プロジェックト変更
   			var value = this.value();
   			// 2018/11/15 8.予定と実績を表示させる、させないの切り替え by zy BEGIN
   			// 保存cookie
   			$("input[id$=hidProjectId]").val(value);
   			changeProject();
   			/*
   			$("#hidMainProjectId").val(value);
   			$("#projectTitle").text(this.text());
   			roleCheck(e.sender.dataSource.data());
   			// refresh gantt
   			reloadGantt();
   			// 保存cookie
   			saveCookieProjectId();
   			// 刷新分配人员
   			reloadAssign();
   			*/
   			// 2018/11/15 8.予定と実績を表示させる、させないの切り替え by zy END
   		},
		noDataTemplate:'データが見つかりません。'
   	 });
     $("#toolbarRows").append($("#toobalTemplate").children());
     // 新規プロジェックト画面に担当者選択リスト
     $("select[id$=dropdowntree]").kendoMultiSelect({
        placeholder: "",
        filter: "contains",
        height: 300,
        autoClose: false,
        autoBind: false,
        dataTextField: "text",
        dataValueField: "value",
        select:function(e){
        	if (this.value().length > 500) {
        		alert("選択できる要員の上限を超えています");
        		e.preventDefault();
        	}
        }
     });
     $("select[id$=managerTree]").kendoMultiSelect({
        placeholder: "",
        filter: "contains",
        height: 300,
        autoClose: false,
        autoBind: false,
        dataTextField: "text",
        dataValueField: "value",
        select:function(e){
        	this.wrapper.removeClass("requiredClass");
        	this.input.attr("placeholder","");
        	if (this.value().length > 500) {
        		alert("選択できる要員の上限を超えています");
        		e.preventDefault();
        	}
        }
     });
}
// 画面分割
function bindSplit(){
	// 2018/11/15 顾客最后操作的内容，自动记录 by zy BEGIN
	var cookie = getCookieInfo();
	// 2018/11/15 顾客最后操作的内容，自动记录 by zy END
	// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
	$("#splitVertical").kendoSplitter({
		orientation: "vertical",
		panes: [
			{ collapsible: false ,size:"100%"},
			{ collapsible: false, size:0}
		],resize:newGanttPosition
	});
	$("#splitVertical .k-splitbar.k-splitbar-draggable-vertical,#ganttNew").hide();
	// 2020/09/31 画面スクロールを２分割したい by zy END
	$("#warpBox").kendoSplitter({
        orientation: "horizontal",
        panes: [
        	// 2018/11/15 顾客最后操作的内容，自动记录 by zy BEGIN
        	// { collapsible: true, size: "400px" },
            { collapsible: true, size: cookie.tWd },
            // 2018/11/15 顾客最后操作的内容，自动记录 by zy END
            { collapsible: false, resizable: true,size:"100%" }
        ]
        // 2018/11/15 顾客最后操作的内容，自动记录 by zy BEGIN
		// 2020/09/30 画面スクロール時にヘッダーの固定、ブラウザ側スクロールが不要 by zy BEGIN
        ,resize:resizeSplit
		// 2020/09/30 画面スクロール時にヘッダーの固定、ブラウザ側スクロールが不要 by zy END
        // 2018/11/15 顾客最后操作的内容，自动记录 by zy END
    });
}
// 検索画面初期化
function bindGrid(){
	gridsDs = new kendo.data.DataSource({
    	transport: {
    		read: function (options) {
    			// 2018/12/30 プロジェックトTIMEOUT 修正 by zy BEGIN
    			if (!PageInfo.GridLoad) return options.success([]);
    			PageInfo.GridLoad = false;
    			// 2018/12/30 プロジェックトTIMEOUT 修正 by zy END
    			var ownerId = $("input[id$=ownerInput_lkid]").val();
				var startDt = $("input[id$=startDt]").val();
				var endDt = $("input[id$=endDt]").val();
				var selectType = $("input[name=selectType]:checked").val();
				var whoId = $("input[id$=contactInput_lkid]").val();
				if (ownerId == "000000000000000" ) ownerId = "";
				if (whoId == "000000000000000") whoId = "";
				var taskName = $("#taskName").val();
				var req = {
					userid:ownerId,
					start:startDt,
					end:endDt,
					type:selectType,
					contactid:whoId,
					taskname:taskName,
				};
    			var eq = $("#sibear");
    			kendo.ui.progress(eq, true);
    			taskDataSource(options,FUNTYPE.GETTASK,req,eq);
    		}
    	},
    	batch: true,
    });
	$("#sibear").kendoGrid({
		height: 700,
		selectable: "multiple",
		dataSource:gridsDs,
		sortable: true,
		columns: [
		{
            field: "name",
            title: "件名",
        }, {
            field: "startDate",
            title: "開始日付"
        }, {
            field: "endDate",
            title: "終了日付"
        }, {
            field: "CreateBy",
            title: "担当者"
        }, {
            field: "DoBy",
            title: "取引先"
        }],
        resizable: true,
        change: onChange,
	});
}
// 
function bindGatt(type){
	// 2020/11/20 倍率と文字サイズがどの組み合わせであれ、ズレないように修正 by zy BEGIN
	if (isSf1()){
		$("#sf1CssInfo").html(".k-grid td{padding:0px}.k-task-wrap{padding-top: 2px;}");
	}
	// 2020/11/20 倍率と文字サイズがどの組み合わせであれ、ズレないように修正 by zy END
	// 2018/11/30 日付を入力する際、開始を編集する際に終了が１ヶ月後など期間を指定できるといい by cxw BEGIN
	var endDateCompare = function(e){
		var t, n, i, o, r, s, m = kendo;
		if (e.filter("[name=dueEnd]").length) {
                for (t = e.attr("name"),
                n = m.widgetInstance(e, m.ui),
                i = {},
                o = e; o !== window && !r; )
                    o = o.parent(),
                    r = o.data("kendoEditable");
                return !(s = r ? r.options.model : null) || (i.dueStart = s.dueStart,
                i.dueEnd = s.dueEnd,
                i[t] = n ? n.value() : m.parseDate(e.value()),
                i[t] ? i.dueStart <= i.dueEnd : false)
            }
            return true;
	};
	var startDateCompare = function(e){
		return e.val() && kendo.parseDate(e.val(), getDateFormat());
	}
	// 2018/11/30 日付を入力する際、開始を編集する際に終了が１ヶ月後など期間を指定できるといい by cxw END
    var tasksDataSource = new kendo.data.GanttDataSource({
		// 2020/09/30 7581 bug fixed by zy BEGIN
		change:function(e){
			// 2020/09/30 8159 bug fixed by zy BEGIN
			if (("action" in e) && e.field == "expanded") {
				e.sender.filter(this.filter());
				e.items = e.sender.view();
				return;
			} else {
				// 2020/09/30 8159 bug fixed by zy END
				// フィルターあり
				var dataFilter = this.filter();
				if (dataFilter) {
					var hadParentItem = {};
					var dataSource = this;
					dataSource._view.forEach(function(item){
						hadParentItem[item.id] = 1;
					});
					function getParentItem(arr,ds,item){
						par = ds.taskParent(item);
						if (par != null && !(par.id in hadParentItem)) {
							arr.push(par);
							hadParentItem[par.id] = 1;
							getParentItem(arr,ds,par);
						}
					}
					var items = e.items;
					// 2020/11/15 9107 bug fixed by zy BEGIN
					var assignFilter = dataFilter.filters;
					// 「担当者」含む，过滤条件覆盖全部内容，新作一个datasouce进行过滤，再把结果覆盖回当前结果中
					if (assignFilter.length > 0 && dataFilter.logic == "and"){
						// 内部filter集合
						var datas = [],orgDataMap = {};
						// 新規データ集合
						this._data.forEach(function(data){
							var d = {
								dataid:data.dataid,
								assigned:data.assigned,
								userid:data.userid,
								userids:data.userids,
								depart:data.depart
							};
							if (data.assigneds != "") d.assigned += "," + data.assigneds;
							orgDataMap[d.dataid] = data;
							datas.push(d);
						});
						var dd = new kendo.data.DataSource({
						  data: datas
						});
						// 複数担当者SQL取得
						dd._query({
		                    filter: dataFilter,
		                    page: 1
		                })
		                var arrView = dd.view();
		                var arr = [];
		                arrView.forEach(function(d){
		                	if (d.dataid in orgDataMap) arr.push(orgDataMap[d.dataid]);
		                });
		                var dataSource = this;
		                dataSource._view = arr;
		                items = arr;
					}
					// 2020/11/15 9107 bug fixed by zy END
					if (items.length > 0) {
						items.forEach(function(item){
							getParentItem(dataSource._view,dataSource,item);
						});
					}
					// 如果filter有效，移动失效
					disableButton();
				}
			}
		},
		// 2020/09/30 7581 bug fixed by zy END
        transport: {
            read: function(options){
				var reqObj = {};
				reqObj.projectid = $("#hidMainProjectId").val();
				if (reqObj.projectid != undefined && reqObj.projectid != "") {
	            	var startElement = $("input[id$=filterStartDt]");
	            	var endElement = $("input[id$=filterEndDt]");
	            	if (startElement.hasClass("dateChange") || endElement.hasClass("dateChange")) {
						reqObj.startDt = startElement.val();
						reqObj.endDt = endElement.val();
	            	}
	            	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy BEGIN
	                taskDataSource(false,FUNTYPE.READ,reqObj,false,afterTaskRead.bind({options}));
	                // 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy END
                } else {
                	kendo.ui.progress($("#gantt30"), false);
                	options.error();
                }
            },
            update:function(options){
            	var task = options.data;
            	//var commentJson = encodeStr(task.comment);
            	var curTaskObj = {
			  		Title:task.Title,
					userid:task.userid,
					OrderID:task.OrderID,
					dataid:task.dataid,
					Summary:task.Summary,
					// 2018/08/08 メモ追加　by　zy BEGIN
					comment:task.comment,
					// 2018/08/08 メモ追加　by　zy END
					PercentComplete:task.PercentComplete
					// 2018/11/15 17.プロジェクト管理を開いたときにタスクが開いた状態から始まる by zy BEGIN
					,Expanded:task.Expanded
					// 2018/11/15 17.プロジェクト管理を開いたときにタスクが開いた状態から始まる by zy END
					// 2019/1/15 プロジェックト機能のPriority(重要度）列を追加 by cxw BEGIN
					,importance:task.importance
					// 2019/1/15 プロジェックト機能のPriority(重要度）列を追加 by cxw END
					// 2019/12/30 タスクがカレンダーに表示させるか、表示させない切替対応 by zy BEGIN
					,calendarFlg : task.calendarFlg
					// 2019/12/30 タスクがカレンダーに表示させるか、表示させない切替対応 by zy END
					// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy BEGIN
					,depart:task.depart
					// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy END
					// 2020/10/31 担当者を複数設定できるように by zy BEGIN
					,userids:task.userids
					// 2020/10/31 担当者を複数設定できるように by zy END
					// 2020/10/31 2.07.取引先の紐付け by zy BEGIN
					,accid:task.account
					// 2020/10/31 2.07.取引先の紐付け by zy END
					// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy BEGIN
					,assign:task.assign
					,manager:task.manager
					// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy END
			  	};
			  	// 2020/10/30 2.14.特定日のマーキング機能、スケジュールのなかでポイントをうち、右の表示マークをつける機能 by zy BEGIN
				if (task.marks != "") curTaskObj.marks = task.marks; // .replaceAll("\"","").replaceAll("'","")
				// 2020/10/30 2.14.特定日のマーキング機能、スケジュールのなかでポイントをうち、右の表示マークをつける機能 by zy END
			  	// 精度重新计算
			  	var endDt = kendo.toString(task.End,JINYACONNECT.DateTmFormat);
            	if (endDt != null) curTaskObj.EndDt = kendo.parseDate(endDt,JINYACONNECT.DateTmFormat).getTime();
            	var startDt = kendo.toString(task.Start,JINYACONNECT.DateTmFormat);
            	if (startDt != null) curTaskObj.StartDt = kendo.parseDate(startDt,JINYACONNECT.DateTmFormat).getTime();
            	// 2018/11/15 8.予定と実績を表示させる、させないの切り替え by zy BEGIN
            	if (PageInfo.processType == 'duechange') {
            		var dueEndDt = kendo.toString(task.dueEnd,JINYACONNECT.DateTmFormat);
            		if (dueEndDt != null) curTaskObj.dueEnd = kendo.parseDate(dueEndDt,JINYACONNECT.DateTmFormat).getTime();
            		var dueStartDt = kendo.toString(task.dueStart,JINYACONNECT.DateTmFormat);
            		if (dueStartDt != null) curTaskObj.dueStart = kendo.parseDate(dueStartDt,JINYACONNECT.DateTmFormat).getTime();
            		delete PageInfo.processType;
            	}
				// 2018/11/15 8.予定と実績を表示させる、させないの切り替え by zy END
			  	var parentDataId = null;
			  	// 2019/04/15 JINYABUG-1563 bug fix by zy BEGIN
			  	//  int 0 等于 空
			  	var parentId = kendo.parseInt(task.ParentID);
			  	//if (task.ParentID != undefined && task.ParentID != "" && task.ParentID != null) {
			  		//var item = filterSameId(task.ParentID,'id');
			  	if (parentId != null) {
			  		var item = filterSameId(parentId,'id');
			  	// 2019/04/15 JINYABUG-1563 bug fix by zy END	
			  		if (item != null) {
			  			parentDataId = item.dataid;
			  		}
			  	}
			  	curTaskObj.parentDataId = parentDataId;
			  	// 2019/03/15 変更履歴機能追加 by cxw BEGIN
			  	// taskDataSource(options,FUNTYPE.DTUPDATE,curTaskObj);
			  	taskDataSource(options,FUNTYPE.DTUPDATE,curTaskObj, false, updateAfter.bind({history: task.history, dataid: task.dataid}));
			  	// 2019/03/15 変更履歴機能追加 by cxw END
            },
            destroy: function(options){
            	var task = options.data;
            	var gantt = $("#gantt30").data("kendoGantt");
				var taskArr = [task.dataid];
				if (task.ID != undefined && task.ID != "" && task.ID != null) {
			  		var item = filterSameId(task.ID,'id');
			  		if (item != null) {
			  			var childTasks = gantt.dataSource.taskAllChildren(item);
			  			for (var i = 0 ; i < childTasks.length ; i++) {
				        	var task = childTasks[i];
				        	taskArr.push(task.dataid);
				        }
			  		}
			  	}
		        var proejctId = $("#hidMainProjectId").val();
		        var projectMain = {
		        	tasks:taskArr,
		        	projectid:proejctId,
		        };
			// 2019/04/15 JINYABUG-1564 bug fix by zy BEGIN
			// 回归元组件调用模式，不需要重新刷新，因为会存在多选删除的问题
		    // taskDataSource(options,FUNTYPE.DTDESTORY,projectMain,false,afterTaskDelete);
			taskDataSource(options,FUNTYPE.DTDESTORY,projectMain,false);
			// 2019/04/15 JINYABUG-1564 bug fix by zy END
       	 	},
            parameterMap: function(options, operation) {
                if (operation !== "read") {
                    return { models: kendo.stringify(options.models || [options]) };
                }
            }
        },
        schema: {
            model: {
                id: "id",
                fields: {
                    id: { from: "ID"},
                    orderId: { from: "OrderID", type: "number", validation: { required: true } },
                    parentId: { from: "ParentID", type: "number", defaultValue: null, validation: { required: true } },
                    // 2018/11/30 日付を入力する際、開始を編集する際に終了が１ヶ月後など期間を指定できるといい by cxw BEGIN
                    start: { from: "Start", type: "date", validation: {message:"開始に有効な日付の値を入力してください。", dateCompare: startDateCompare, required: true}},
                    // 2018/11/30 日付を入力する際、開始を編集する際に終了が１ヶ月後など期間を指定できるといい by cxw END
                    end: { from: "End", type: "date" },
                    title: { from: "Title", defaultValue: "", type: "string"},
                    percentComplete: { from: "PercentComplete", type: "number" ,step: "10", min:"0",validation:{
                    	step: function (input) {
                    		return true;
                    	},
                    	max:function(input){
                    		return true;
                    	}
                    }},
                    summary: { from: "Summary", type: "boolean" },
                    expanded: { from: "Expanded", type: "boolean", defaultValue: true },
                    // 2018/11/30 日付を入力する際、開始を編集する際に終了が１ヶ月後など期間を指定できるといい by cxw BEGIN
                    dueEnd: {type: "date", validation: {message:"終了日は開始日以降にする必要があります。", dateCompare: endDateCompare, required: true}},
                    dueStart: {type: "date", validation: {message:"開始に有効な日付の値を入力してください。", dateCompare: startDateCompare, required: true}}
                	// 2018/11/30 日付を入力する際、開始を編集する際に終了が１ヶ月後など期間を指定できるといい by cxw END
                }
            }
        }
        // 2018/11/15 14.タスクの移動がドラッグでできるが、望むところに移動せず、動かすつもりのないタスクも動 by zy BEGIN
		,sync:function(){
			// タスクの移動
			moveCurrentTask();
			// タスク並べ替え刷新
			// 2018/12/15 順序復旧機能廃止 by zy BEGIN
			//refreshOrder();
			// 2018/12/15 順序復旧機能廃止 by zy END
		}
		// 2018/11/15 14.タスクの移動がドラッグでできるが、望むところに移動せず、動かすつもりのないタスクも動 by zy END
    });
    var dependenciesDataSource = new kendo.data.GanttDependencyDataSource({
        transport: {
            read : function(options){
                taskDataSource(options,FUNTYPE.DEPREAD);
            },
            update : function(options){
                taskDataSource(options,FUNTYPE.DEPREAD,false,reloadDependencies);
            },
            destroy : function(options){
            	var task = options.data;
				var proejctId = $("#hidMainProjectId").val();
		        var projectMain = {
		        	dataid:task.dataid,
		        	projectid:proejctId,
		        };
		        taskDataSource(options,FUNTYPE.DEPDESTORY,projectMain,false,reloadDependencies);
            },
            create: function(options){
            	options.data.projectid = $("#hidMainProjectId").val();
                taskDataSource(options,FUNTYPE.DEPCREATE,options.data,false,reloadDependencies);
            },
            parameterMap: function(options, operation) {
                if (operation !== "read") {
                    return { models: kendo.stringify(options.models || [options]) };
                }
            }
        },
        schema: {
            model: {
                id: "id",
                fields: {
                    id: { from: "ID" },
                    predecessorId: { from: "PredecessorID", type: "number" },
                    successorId: { from: "SuccessorID", type: "number" },
                    type: { from: "Type", type: "number" }
                }
            }
        }
    });
    var viws = ["day","week",{type:"month",slotSize: 300,selected: true},"year"];
	var gantt = $("#gantt30").data("kendoGantt");
	$("#gantt30").show();
	if (gantt == undefined) {
		
		// 2018/11/15 顾客最后操作的内容，自动记录 by zy BEGIN
		var cloumns = getColumns();
		var cookie = getCookieInfo();
		// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
		// 端末区分
		_isMobileOS = kendo.support.mobileOS,
			listWidth = _isMobileOS ? $(window).width() * 0.8 : cookie.dWd;
		// 2020/09/31 画面スクロールを２分割したい by zy END
		// 該当タイプ変更
		changeGanttType(viws);
		// 2018/11/15 顾客最后操作的内容，自动记录 by zy END
    	gantt = $("#gantt30").kendoGantt({
			dataSource: tasksDataSource,
			dependencies: dependenciesDataSource,
			views: viws,
			toolbar: [
				{template: kendo.template($("#template").html())},
			],
			// 2018/11/15 顾客最后操作的内容，自动记录 by zy BEGIN
			columns:cloumns,
			/*
			columns: [
				{ field: "wbs", title: "番号", width: 50  },
				{ field: "title", title: "件名",  width: 120 , editable: true, sortable: true },
				{ field: "userid", title: "担当者", width: 100, editable: true,editor:userEditor,sortable: true},
				{ field: "percentComplete", title: "進捗", editable: true,width: 80, format:"{0:p0}",sortable: true},
				{ field: "warning", title: "状態",width: 46,sortable: true},
				{ field: "start", title: "開始", format: "{0:yyyy/MM/dd HH:mm}", width: 140, editable: true, sortable: true },
				{ field: "end", title: "終了", format: "{0:yyyy/MM/dd HH:mm}", width: 140, editable: true, sortable: true },
				// 2018/08/08 メモ追加　by　zy BEGIN
				{ field: "comment" , title: "進捗メモ",  width:200,editable: true,sortable: true },
				// 2018/08/08 メモ追加　by　zy END
			],*/
			// 2018/11/15 顾客最后操作的内容，自动记录 by zy END
			messages:{
				deleteTaskConfirmation:'タスクを削除します。よろしいですか?',
				deleteDependencyConfirmation:'依赖関係を削除します。よろしいですか？',
				editor: {
				// 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy BEGIN
				percentComplete:"進捗"
				,title:'件名'
				,start:'開始'
				,end:"終了"
				// 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy END
				}
			},
			// 2020/09/30 画面スクロール時にヘッダーの固定、ブラウザ側スクロールが不要 by zy BEGIN
			height: "calc(100% - 5px)",
			// 2020/09/30 画面スクロール時にヘッダーの固定、ブラウザ側スクロールが不要 by zy END
			showWorkHours: false,
			showWorkDays: false,
			resizable: true,
			dataBinding:onDataBinding,
			change:sectionSelect,
			dataBound:TaskDataBound,
			save: onTaskSave,
			edit:onTaskEdit,
			snap: false,
			// 2018/11/15 顾客最后操作的内容，自动记录 by zy BEGIN
			// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
			columnResize:function(e){
				this.options.columns.forEach(function(col){
					if (col.field == e.column.field) col.width = e.newWidth;
				});
			},
			// 2020/09/31 画面スクロールを２分割したい by zy END
			// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
			// 明細横幅
			listWidth:listWidth,
			// 2020/09/31 画面スクロールを２分割したい by zy END
			navigate: onNavigate
			// 2018/11/15 顾客最后操作的内容，自动记录 by zy END
			// 2020/10/30 2.14.特定日のマーキング機能、スケジュールのなかでポイントをうち、右の表示マークをつける機能 by zy BEGIN
			,readMessage:readGanttMessage　// マーク内容表示
			// 2020/10/30 2.14.特定日のマーキング機能、スケジュールのなかでポイントをうち、右の表示マークをつける機能 by zy END
        }).data("kendoGantt");
        // 2018/11/30 行動を範囲選択してコピー by cxw BEGIN
		if (getCookieSplitStatus()) gantt.needChangeSplit = true;
        replaceGanttFun(gantt);
        // 2018/11/30 行動を範囲選択してコピー by cxw END
        var sort = $("[id$=hidSortSet]").val();
       	var fieldSort = [];
       	if (sort != "") {
       		fieldSort = JSON.parse(sort);
       		// 並べ替えあり
       		if (fieldSort != undefined && fieldSort.length > 0) {
       			// 並べ替えフィールドあり
       			var fiedTitle = $("th.k-header[data-field='" + fieldSort[0].field + "']");
       			if (fiedTitle.length > 0) {
					var gantt = $("#gantt30").data("kendoGantt");
	   				gantt.dataSource.sort(fieldSort);
	   			}
	   		}
	   	}
	} else {
		$(".k-view-" + type).click();
	}
}
// 画面初期化前
function onDataBinding(e) {
	orgDataItem = e.sender.dataSource.taskTree();
	// 2019/1/15 プロジェックト機能の番号保持 by cxw BEGIN
	designationKeep(orgDataItem);
	// 2019/1/15 プロジェックト機能の番号保持 by cxw END
    // new treeMenu(orgDataItem).init(null);
    // 2018/08/08 メモ追加　by　zy BEGIN
    var datas = e.sender.dataSource.data();
    for (var i = 0 ; i < datas.length ; i++) {
    	var item = datas[i];
    	// 2019/03/15 変更履歴機能追加 by cxw BEGIN
    	item.icon = '';
    	// 2019/03/15 変更履歴機能追加 by cxw END
    	changeText(item);
    	// 2018/11/15 8.予定と実績を表示させる、させないの切り替え by zy BEGIN
		item.dueEnd = kendo.parseDate(item.dueEnd);
		item.dueStart = kendo.parseDate(item.dueStart);
		// 2018/11/15 8.予定と実績を表示させる、させないの切り替え by zy END
		// 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy BEGIN
		if (dateFormatChange()) {
			toClientDate(item,'start','end');
        	toClientDate(item,'dueStart','dueEnd');
        }
        // 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy END
    }
    // 2018/08/08 メモ追加　by　zy END
}
// タスク保存
function onTaskSave(e){
	var curUserId = $("#hidUserId").val();
	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy BEGIN
	if (!checkCurrentRole(CUS_LABEL.ROLE_EDIT,curUserId,e.task)){
		stopTaskEdit(e);
		return;
	}
	/*
    var isAssign = $("#hidAssign").val();
    var isManager = $("#hidManager").val();
    if (isManager != "true") {
	    if (isAssign == 'true' && curUserId != e.task.userid) {
	    	e.sender.dataSource.cancelChanges(e.task);
	    	e.preventDefault();
	    }
    }
    */
    // 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy END
    if ( e.values != undefined && ("percentComplete" in e.values) && e.values.percentComplete > 1) 
        e.values.percentComplete = kendo.parseFloat(e.values.percentComplete/100);
    // 2018/11/15 8.予定と実績を表示させる、させないの切り替え by zy BEGIN
    // 予定開始時間変更の場合
    if (e.values != undefined && e.values.hasOwnProperty("dueStart")){
    	var durTimeLong = e.task.dueEnd.getTime() - e.task.dueStart.getTime();
    	var curDueStart = e.values.dueStart;
    	
    	e.task.dueEnd = new Date(curDueStart.getTime() + durTimeLong);
    }
    // 2018/11/15 8.予定と実績を表示させる、させないの切り替え by zy END
	// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy BEGIN 
	// 2020/10/31 担当者を複数設定できるように  by zy BEGIN
	if (e.values && e.values.hasOwnProperty("userid")){
		var newUserId,newUserIds;
		if ( typeof(e.values.userid) != "string" && e.values.userid.length) {
			newUserId = e.values.userid[0];
			newUserIds = e.values.userid.slice(1).join(',');
			e.values.userid = newUserId;
			if (newUserIds != e.task.userids) {
				e.task.dirty = true;
				e.task.userids = newUserIds;
			}
			if (e.task.userid != newUserId) {
				e.task.dirty = true;
				e.task.depart = getDepart(newUserId,e.task.depart);
				e.task.userid = newUserId;
			}
		}
    	// 2020/10/31 担当者を複数設定できるように  by zy END
    }
	// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy END 
    // 2018/11/15 14.タスクの移動がドラッグでできるが、望むところに移動せず、動かすつもりのないタスクも動 by zy BEGIN
    processSaveType(e.values,[e.task.dataid]);
    // 2018/11/15 14.タスクの移動がドラッグでできるが、望むところに移動せず、動かすつもりのないタスクも動 by zy END
}
var needPrevent = false;
function onTaskEdit(e){
	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy BEGIN
	var curUserId = $("#hidUserId").val();
	if (!checkCurrentRole(CUS_LABEL.ROLE_EDIT,curUserId,e.task)){
		stopTaskEdit(e);
		return;
	}
	var fieldName = e.sender.options.columns[e.container.index()].field;
	if (fieldName == "account") {
		stopTaskEdit(e);
		return;
	}
	/*
	// 权限控制
	var isManager = $("#hidManager").val();
    if (isManager != "true") {
		var curUserId = $("#hidUserId").val();
	    var isAssign = $("#hidAssign").val();
	    if (isAssign == 'true' && curUserId != e.task.userid) {
	    	e.sender.dataSource.cancelChanges(e.task);
	    	e.preventDefault();
	    }
	    if (needPrevent) {
	    	e.preventDefault();
	    	needPrevent = false;
	    }
	}
	*/
	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy END
	// 進捗編集の場合
    var inputDrop = $('input[name="percentComplete"]');
    if (inputDrop.length > 0) {
        var textBox = inputDrop.data("kendoNumericTextBox");
        var editOptions = textBox.options;
        var chgOptions = {
        	min: 0,
	        max: 100,
	        step: 10
        };
        editOptions = $.extend(editOptions,chgOptions);
        var orgValue = textBox.value() * 100;
        var oldPercent = textBox.element.prev().val();
        textBox.setOptions(editOptions);
        textBox.value(orgValue);
        textBox.element.prev().val(oldPercent);
        inputDrop.on("blur",function(){
            var per = $(this).val(); 
            per = kendo.parseFloat(per/100); 
            if (per > 1) per = 1;
            $(this).val(per);
            var textBox = $(this).data("kendoNumericTextBox");
            textBox.value(per);
        });
        inputDrop.on("focus",function(){
            var per = $(this).val(); 
            if(per < 1) {
                per = kendo.parseFloat(per*100); 
                var textBox = $(this).data("kendoNumericTextBox");
           	 	textBox.value(per);
            }
        });
        // 去掉cell編集中のvalidate
        if (e.container.hasClass("k-edit-cell")) {
        	$(".k-invalid-msg",e.container).remove();
        }
    }
    // 件名最大限追加
    var titleInput = $('input[name="title"]');
    if (titleInput.length > 0) {
    	titleInput.attr("maxlength",255);
    	// 2018/11/15 件名欄を記入する際、Enterで記入枠が閉じてしまい保存されるので文章を書く際に何度も開く必要がある by zy BEGIN
    	var cont = titleInput.closest("div.k-grid-content").get(0);
    	if (cont){
	    	let capture = {capture : true};
	    	cont.addEventListener( 'keydown',prevKeyEvent,capture);
	    	cont.addEventListener( 'keyup',prevKeyEvent,capture);
	    	cont.addEventListener( 'mousewheel',prevScrollEvent,capture);
	    }
    	// 2018/11/15 件名欄を記入する際、Enterで記入枠が閉じてしまい保存されるので文章を書く際に何度も開く必要がある by zy END
    	// 2019/01/15 SCROLLエラー修正　by zy BEGIN
    	titleInput.bind("blur",function(){
    		var cont = $(this).closest("div.k-grid-content").get(0);
    		// 2019/03/15 JINYABUG-1499 by cxw BEGIN
    		if(cont){
    		// 2019/03/15 JINYABUG-1499 by cxw END
    			let capture = {capture : true};
				cont.removeEventListener( 'keydown',prevKeyEvent,capture);
				cont.removeEventListener( 'keyup',prevKeyEvent,capture);
				cont.removeEventListener( 'mousewheel',prevScrollEvent,capture);
			// 2019/03/15 JINYABUG-1499 by cxw BEGIN
			}
			// 2019/03/15 JINYABUG-1499 by cxw END
    	});
    	// 2019/01/15 SCROLLエラー修正　by zy END
    }
    // 開始と終了日時不正メーセッジ
    var endInput = $('input[name="end"]');
    if (endInput.length > 0) {
    	//End date should be after or equal to the start date
    	endInput.attr("data-datecompare-msg","開始日時以降の終了日付を入力してください。");
    }
    // 2018/08/08 メモ追加　by　zy BEGIN
    // メモ
   	var memoInput = $("input[name='comment']");
    if (memoInput.length > 0) {
    	// 2019/02/28 プロジェクト改善文字放大缩小 by cxw BEGIN
    	// memoEditor(e.container,e.task.comment);
    	memoEditor.call(e.sender, e.container,e.task);
    	// 2019/02/28 プロジェクト改善文字放大缩小 by cxw END
    	e.preventDefault();
    }
    // 2018/08/08 メモ追加　by　zy END
    // 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy BEGIN
    if (dateFormatChange()) {
	    if (e.container.hasClass("k-popup-edit-form")){
	    	var datePicker = $("input[name=start]").data("kendoDateTimePicker");
	    	var format = getDateFormat();
	    	var element = datePicker.element;
	    	var wrapWidth = datePicker.wrapper.width();
	    	element.attr("data-role","datepicker");
	    	var container = datePicker.wrapper.closest('[data-container-for]');
	    	datePicker.destroy();
	    	datePicker.wrapper.remove();
	    	container.append(element);
	    	var $element = element.kendoDatePicker({format:format}).data("kendoDatePicker");
	    	$element.wrapper.width(wrapWidth); 
	    	datePicker = $("input[name=end]").data("kendoDateTimePicker");
	    	element = datePicker.element;
	    	element.attr("data-role","datepicker");
	    	container = datePicker.wrapper.closest('[data-container-for]');
	    	datePicker.destroy();
	    	datePicker.wrapper.remove();
	    	container.append(element);
	    	element.kendoDatePicker({format:format});
	    	$element = element.kendoDatePicker({format:format}).data("kendoDatePicker");
	    	$element.wrapper.width(wrapWidth); 
	    }
    }
    // 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy END
    // 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように  by zy BEGIN
    inputDrop = $('input[name="depart"]');
	if (inputDrop.length > 0) {
		inputDrop = inputDrop.getKendoDropDownList();
		if (e.task.depart != null && e.task.depart != "") inputDrop.value(e.task.depart);
		else inputDrop.select(0);
	}
    // 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように  by zy END
    // 2020/10/31 担当者を複数設定できるように  by zy BEGIN
	inputDrop = $('input[name="userid"]');
	if (inputDrop.length > 0) {
		var userArr = [e.task.userid];
		inputDrop = inputDrop.getKendoMultiSelect();
		if (e.task.userids != undefined && e.task.userids != "") {
			userArr = userArr.concat(e.task.userids.split(','));
		}
		this.list.content.off("focusout.kendoGanttList");
		inputDrop.value(userArr);
		inputDrop.open();
		inputDrop.focus();
	}
	// 2020/10/31 担当者を複数設定できるように  by zy END
}
function getAllParentArr(task,ds){
	var parIds = [];
	var taskLevel = ds.taskLevel(task);
	var parTask = null;
	for (var i = 0 ; i < taskLevel ; i++) {
		if (parTask == null) parTask = ds.taskParent(task);
		else parTask = ds.taskParent(parTask);
		parIds.push(parTask.dataid);
	}
	return parIds;
}
function safeValue(val){
	if (val == undefined) val = null;
	return val;
}
var dragSelction = '<div id="selectWindow" class="classMarQuee"></div>';
// タスク状態アイコン
function TaskDataBound(e){
	// 2020/09/30 7731 bug fixed by zy BEGIN
	// $("th[data-field='wbs']").html('<span class="k-link">番号</span>');
	this.list.header.find("th[data-field]:not(:has('.k-link'))").each(function(){
		var txt = $(this).text().trim();
		if (txt != "") $(this).html('<span class="k-link">' + $(this).text() + '</span>');
	});
	// 2020/09/30 7731 bug fixed by zy END
	// 2019/1/15 プロジェックト機能のPriority(重要度）列を追加 by cxw BEGIN
	var startDt,endDt, oImportance = $.parseJSON($("#importanceJson").val()|| "{}");
	// 2019/1/15 プロジェックト機能のPriority(重要度）列を追加 by cxw END
	// 2019/07/15 プロジェクト明細のURLをプロジェクト管理画面から出力できるように by zy BEGIN
	//var userIdx = $("th[data-field='userid']").index();
	//var memoIdx = $("th[data-field='comment']").index();
	//var statusIdx = $("th[data-field='warning']").index();
	var fieldMap = getFieldIndexMap.call(this),userIdx = fieldMap['userid'],memoIdx = fieldMap['comment'],statusIdx = fieldMap['warning'],titleIdx = fieldMap['title']
		// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
		,departIdx = fieldMap['depart'],iconIdx= fieldMap['icon']
		// 2020/10/31 2.07.取引先の紐付け by zy BEGIN
		,accIdx = fieldMap['account'];
		// 2020/10/31 2.07.取引先の紐付け by zy END
		// 2020/09/31 画面スクロールを２分割したい by zy END
	// 2019/07/15 プロジェクト明細のURLをプロジェクト管理画面から出力できるように by zy END
	// 2019/1/15 プロジェックト機能のPriority(重要度）列を追加 by cxw BEGIN
	var importanceIdx = $("th[data-field='importance']").index();
	// 2019/1/15 プロジェックト機能のPriority(重要度）列を追加 by cxw END
	// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy BEGIN 
	window.J_DEPATY_MAP = {};
	var curUserId = $("#hidUserId").val();
	// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy END 
   	for (var i = 0 ; i < orgDataItem.length; i++) {
   		var item = orgDataItem[i];
   		var curRow = $("tr[data-uid='" + item.uid + "']");
   		if (curRow.length > 0) {
   			if (statusIdx > 0) {
	   			// 番号
	   			// sort状態
	   			//var curSpan = $("td:eq(4)>span",curRow);
	   			var curSpan = $("td:eq(" + statusIdx + ")>span",curRow);
	   			
	   			curSpan.text("");
	   			curSpan.removeClass("easyClass warningClass errorClass");
	   			if (item.warning == '1') {
	   				curSpan.addClass("easyClass");
	   			} else if (item.warning == '2') {
	   				curSpan.addClass("warningClass");
	   			} else if (item.warning == '3') {
	   				curSpan.addClass("errorClass");
	   			}
   			}
   			if (userIdx > 0) {
   				//var userSpan = $("td:eq(2)>span",curRow);
   				var userSpan = $("td:eq(" + userIdx + ")>span",curRow);
   				// 2020/10/31 担当者を複数設定できるように  by zy BEGIN
				userSpan.text(item.assigned + (item.assigneds != "" ?  ("," + item.assigneds) : ""));	
				// 2020/10/31 担当者を複数設定できるように  by zy END
   			}
			// 2020/10/31 2.07.取引先の紐付け by zy BEGIN
   			if (accIdx > 0) {
   				var userSpan = $("td:eq(" + accIdx + ")>span",curRow);
   				userSpan.text(item.accname);	
   			}
			// 2020/10/31 2.07.取引先の紐付け by zy END
   			if (memoIdx > 0) {
	   			//var commentSpan = $("td:eq(7)>span",curRow);
	   			var commentSpan = $("td:eq(" + memoIdx + ")>span",curRow);
	   			if (item.comment != "") {
	   				commentSpan.attr("title",item.comment);
	   			}
   			}
   			// 2018/11/30 関連書類の紐付け by cxw BEGIN
   			$("span[attachment=true]", curRow).remove();
   			if(item["isExistAtt"] == true) setAttachmentIcon(curRow, item.eventid);
   			// 2018/11/30 関連書類の紐付け by cxw END
   			// 2019/1/15 プロジェックト機能のPriority(重要度）列を追加 by cxw BEGIN
   			item["importance"] = item["importance"] || "{!NULLVALUE(defaultValue, '')}";
   			$("td:eq(" + importanceIdx + ")>span",curRow).text(oImportance[item["importance"]] || "");
   			// 2019/1/15 プロジェックト機能のPriority(重要度）列を追加 by cxw END
   			// 2019/03/15 変更履歴機能追加 by cxw BEGIN
   			// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
			$('td:eq(' + iconIdx + ')>span>.record', curRow).remove();
   			if(item['history'] == true) $('<i class="k-icon k-i-track-changes record"></i>').prependTo(curRow.find('td:eq(' + iconIdx + ')>span'));
			// 2020/09/31 画面スクロールを２分割したい by zy END
   			// 2019/03/15 変更履歴機能追加 by cxw END
			// 2019/07/15 プロジェクト明細のURLをプロジェクト管理画面から出力できるように陣屋コネクトとしての改善要望です。 by zy BEGIN
   			// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
			setChatterIcon(curRow,iconIdx,item["chatter"]);
			// 2020/09/31 画面スクロールを２分割したい by zy END
			// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy BEGIN
			$('td:eq(' + iconIdx + ')>span>.k-i-cog', curRow).remove();
			if (isDetailRole() && checkCurrentRole(CUS_LABEL.ROLE_TASK,curUserId,item))
				$('<i class="k-icon k-i-cog" onclick="openDetailSetting()"></i>').appendTo(curRow.find('td:eq(' + iconIdx + ')>span'));
			// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy END
			// 2019/07/15 プロジェクト明細のURLをプロジェクト管理画面から出力できるように陣屋コネクトとしての改善要望です。 by zy END
   		}
		
   		var start = kendo.parseDate(item.start);
		var end = kendo.parseDate(item.end);
		if (startDt == undefined || startDt > start) startDt = start;
		if (endDt == undefined || endDt < end) endDt = end;
		// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy BEGIN 
		if (curUserId == item.userid && item.depart != "") {
			if (!(item.depart in J_DEPATY_MAP)) J_DEPATY_MAP[item.depart] = 1;
			else J_DEPATY_MAP[item.depart] = J_DEPATY_MAP[item.depart] + 1;
		}
		// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy END 
   	}
	// 2019/08/15 プロジェクト管理画面からプロジェクト明細のページに簡単に遷移できるようにしたいです。 by zy BEGIN
   	titleUrlOpenSetting.call(this,titleIdx);
	// 2019/08/15 プロジェクト管理画面からプロジェクト明細のページに簡単に遷移できるようにしたいです。 by zy END
	var range = {};
	//  プロジェックト明細間隔
	var diffDay = (endDt - startDt)/(24 * 60 * 60 * 1000);
	var maxDay = 30;
	var mode = e.sender.view().name;
	// $(".k-gantt-views .k-state-selected").attr("data-name");
	if (mode == "week") maxDay = 7;
	else if (mode == "year") maxDay = 0;
	if (maxDay != 0 && diffDay <= maxDay) {
		endDt = new Date(startDt.getTime() + 60 * 60 * 1000 * 24 * maxDay);
		range.end = endDt;
	}
	if (mode != "day") {
		range.start = startDt;
		e.sender.range(range);
	}
	// 2019/03/15 変更履歴機能追加 by cxw BEGIN
	e.sender.list.element.off('click', 'i.record').on('click', 'i.record', e.sender, record);
	// 2019/03/15 変更履歴機能追加 by cxw END
   	roleValidate();
   	// 2018/11/15 17.プロジェクト管理を開いたときにタスクが開いた状態から始まる by zy BEGIN
   	// 2020/10/30 8289 bug fixed by zy BEGIN
	initLastSetting(this);
	// 2020/10/30 8289 bug fixed by zy END
	// 2018/11/15 17.プロジェクト管理を開いたときにタスクが開いた状態から始まる by zy END
	// 2020/09/30 任意行を非表示にする。もしくはフィルター機能。 by zy BEGIN
	var gantt = this;
	// 2020/09/30 ヘッダーを予定表のようにカスタマイズできるように by zy BEGIN
	function changeWidth(gantt,e) {
		var columnIdx = getFieldIndexMap.call(gantt)[e.field];
		$("colgroup col",gantt.list.header).eq(columnIdx).css("width",e.width);
		$("colgroup col",gantt.list.content).eq(columnIdx).css("width",e.width);
		if (e.hidden) {
			$("th",gantt.list.header).eq(columnIdx).find(".k-link").hide();
		} else {
			$("th",gantt.list.header).eq(columnIdx).find(".k-link").show();
		}
		var s = e.field;
		field = $.grep(gantt.options.columns,function(e){
			return e.field == s;
		})[0];
		field.hidden = e.hidden;
		field.width = e.width;
	}
	function changeColumn(e,nochange) {
		if (e.field != 'userid') {
			if (e.hidden == true) {
				e.width = e.orgWidth == undefined ? 150 : e.orgWidth;
				delete e.orgWidth;
				e.hidden = false;
			} else {
				e.orgWidth = e.width;
				e.width = 0;
				e.hidden = true;
			}
			changeWidth(this,e);
			var ganttNew = $("#ganttNew").getKendoGantt();
			if (ganttNew) changeWidth(ganttNew,e);
		}
	}
	// 2020/09/30 ヘッダーを予定表のようにカスタマイズできるように by zy END
	
	var notShowField = ['userid','title','start','end'];
	gantt.columns = gantt.options.columns.filter(function(col){
		return $.inArray(col.field ,notShowField) < 0;
	}); 
	// 2020/09/30 ヘッダーを予定表のようにカスタマイズできるように by zy BEGIN
	if (!("hideColumn" in gantt)) gantt.hideColumn = changeColumn;
	if (!("showColumn" in gantt)) gantt.showColumn = changeColumn;	
	// 2020/09/30 ヘッダーを予定表のようにカスタマイズできるように by zy END
	// 2020/09/30 ヘッダーを予定表のようにカスタマイズできるように by zy BEGIN
	gantt.columns.forEach(function(col){
		if (col.hidden == true) {
			changeWidth(gantt,col);
		}
	});
	// 2020/09/30 ヘッダーを予定表のようにカスタマイズできるように by zy END
	var n = {
		dataSource: gantt.dataSource,
		owner: gantt,
		// 2020/09/30 ヘッダーを予定表のようにカスタマイズできるように by zy BEGIN
		open:function(e){
			if (this.menu.owner == undefined) {
				this.menu.options.select = function(e){
					var gantt = $("#gantt30").getKendoGantt() , chk = $(":checkbox",e.item);
					if (chk.length > 0) {
						var s = chk.attr(kendo.attr("field"));
						field = $.grep(gantt.columns,function(e){
							return e.field == s;
						})[0];
						chk.prop("checked",!field.hidden);
					}
				}
				this.menu.owner = this;
				this.menu.options.open = function(e){
					var fields = $(e.item).find("input[data-field]"),owner = e.sender.owner;
					if (fields.length > 0) {
						fields.each(function(idx){
							var f = this,fieldName = $(this).attr("data-field");
							var field = $.grep(owner.owner.columns,function(e){
								return e.field == fieldName;
							})[0];
							$(this).prop("checked",!field.hidden); 
							$(this).prop("disabled",false);
						});
					}
				}
				this.menu.setOptions(this.menu.options);
			}
		},
		// 2020/09/30 ヘッダーを予定表のようにカスタマイズできるように by zy END
		sortable:false,
		filterable: {
			operators: {
				number: {
					// 指定の値に等しい
					eq: "{!$Label.MSG_041_0033}",
					// 指定の値に等しくない
					neq: "{!$Label.MSG_041_0034}",
					// 指定の値より以上
					gte: "{!$Label.MSG_041_0043}",
					// 指定の値より大きい
					gt: "{!$Label.MSG_041_0044}",
					// 指定の値より以下
					lte: "{!$Label.MSG_041_0045}",
					// 指定の値より小さい
					lt: "{!$Label.MSG_041_0046}",
				},
				string: {
					// 指定の値に等しい
					eq: "{!$Label.MSG_041_0033}",
					// 指定の値に等しくない
					neq: "{!$Label.MSG_041_0034}",
					// 指定の値で始まる
					startswith: "{!$Label.MSG_041_0035}",
					// 指定の値を含む
					Contains: "{!$Label.MSG_041_0036}",
					// 指定の値を含まない
					doesnotcontain: "{!$Label.MSG_041_0037}",
					// 指定の値で終わる
					endswith: "{!$Label.MSG_041_0038}",
				}
			},
			messages: {
				// 2020/09/30 7580 bug fixed by zy BEGIN
				title:'',
				logic:"",
				operator:"",
				additionalOperator:"",
				// 2020/09/30 7580 bug fixed by zy END
				// フィルター:
				info: "{!$Label.MSG_041_0032}",
				// および
				and: "{!$Label.MSG_041_0039}",
				// または
				or: "{!$Label.MSG_041_0040}",
				// フィルター
				filter: "{!$Label.MSG_041_0041}",
				// クリア
				clear: "{!$Label.MSG_041_0042}",
			}
		},
	};
	gantt.options.columns.forEach(function(col,idx){
		var $header = gantt.list.header.find("th.k-header").eq(idx);
		if ($header.getKendoColumnMenu() == undefined){
			if (departIdx && departIdx == idx && $header.getKendoColumnMenu() == undefined) {
				var userColumn = $header.kendoColumnMenu(n).getKendoColumnMenu();
				userColumn.link.css({"margin-right":"0"});
			} else
			if (userIdx && userIdx == idx && $header.getKendoColumnMenu() == undefined) {
				var userColumn = $header.kendoColumnMenu(n).getKendoColumnMenu();
				userColumn.field = "assigned";
				userColumn.link.css({"margin-right":"0"});
			} else {
				var options = $.extend({},n);
				options.filterable = false;
				var userColumn = $header.kendoColumnMenu(options).getKendoColumnMenu();
				userColumn.link.css({"margin-right":"0"});
			}
		}
	});
	
	// 2020/09/30 任意行を非表示にする。もしくはフィルター機能。 by zy END
	// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
	syncGanttScroll(gantt);
	if (gantt.needReadSplit != undefined) {
		delete gantt.needReadSplit;
		setTimeout(splitNewGantt,400);
	// 2020/12/31 9520 bug fixed by zy BEGIN
	} else {
		window.setTimeout(function(){
		let ganttNew = $('#ganttNew').data('kendoGantt');
		if (ganttNew) {
			let gantt = $("#gantt30").data('kendoGantt');
			var cols = ganttNew.list.content.find("col");
			if (cols.length > 0) {
				gantt.list.content.find("col").each(function(idx){
					cols[idx].style.width = this.style.width;
				});
			}
		}}, 1);
	}
	// 2020/12/31 9520 bug fixed by zy END
	// 2020/09/31 画面スクロールを２分割したい by zy END
	// 2020/10/30 2.14.特定日のマーキング機能、スケジュールのなかでポイントをうち、右の表示マークをつける機能 by zy BEGIN
	bindTimeLineMark(this);
	// 2020/10/30 2.14.特定日のマーキング機能、スケジュールのなかでポイントをうち、右の表示マークをつける機能 by zy END
}
// 窗口内的行
jQuery.expr.filters.onscreen = function(el) {
  var rect = el.getBoundingClientRect();
  return (rect.top + rect.height) > minHeight && (rect.top + rect.height) < maxHeight 
  			//|| minHeight < rect.top && (rect.top + rect.height) > minHeight
  			|| maxHeight > rect.top && (rect.top + rect.height) > maxHeight;
};
function sectionSelect(e) {
    var gantt = e.sender;
    var selection = gantt.select();
	// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
	if (selection.length > 0) {
		$("#gantt30,#ganttNew").removeClass("selectAction");
		gantt.element.addClass("selectAction");
		clearOtherGanttSelect();
	}
	// 2020/09/31 画面スクロールを２分割したい by zy END
    // 2018/11/30 行動を範囲選択してコピー by cxw BEGIN
    if (PageInfo.processType == 'SHIFT') {
    	var selectedTask = gantt.dataItem(selection);
		// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
		if (selectedTask == undefined) return;
		// 2020/09/31 画面スクロールを２分割したい by zy END
    	var nextTaskId = selectedTask.dataid;
    	if (PageInfo.selDataId == undefined) PageInfo.selDataId = selectedTask.dataid;
		// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
    	else return muliteSelect.call(gantt,PageInfo.selDataId,nextTaskId);
		// 2020/09/31 画面スクロールを２分割したい by zy END
    }
    // 2018/11/30 行動を範囲選択してコピー by cxw END
    $("#dragWindow").hide();
    if (selection.length) {
    	// 2018/11/30 行動を範囲選択してコピー by cxw BEGIN
    	var selectedTask = gantt.dataItem(selection);
    	PageInfo.processType || (PageInfo.selDataId = selectedTask.dataid);
    	// 2018/11/30 行動を範囲選択してコピー by cxw END
    	roleValidate(selectedTask.userid,selection);
    	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy BEGIN
    	if (!checkCurrentRole(CUS_LABEL.ROLE_EDIT,$("#hidUserId").val(),selectedTask)){
			disableButton(selection);
		}
		// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy END
    }
}
function disableButton(selection){
	$(".noSelClass").addClass("disableClass");
	if (selection) {
		//$("#dragWindow").show();
		var otherWidth = document.body.clientWidth - selection.offset().left;
		$("#dragWindow").offset(selection.offset());
		$("#dragWindow").css({width:otherWidth,height:selection.height()});
	}
}
// 未分配のタスクリアル
function noAssignTasks(){
	// 2018/12/30 プロジェックトTIMEOUT 修正 by zy BEGIN
	PageInfo.GridLoad = true;
	// 2018/12/30 プロジェックトTIMEOUT 修正 by zy END
	gridsDs.read();
}
// remoteデータ取得
function taskDataSource(options,type,req,eq,callback){
	if (req == undefined || !req) req = {};
	// 2018/09/05 新規の展開保持状態　by zy BEGIN
	if (type == FUNTYPE.GETTASK || type == FUNTYPE.READ　|| type == FUNTYPE.DTUPDATE
        			|| type == FUNTYPE.DTCREATE　|| type == FUNTYPE.DTDESTORY) beforeSave();
    // 2018/09/05 新規の展開保持状態　by zy END
	// 2020/09/30 右上のタスク選択リストに自分が関連するタスクのみ表示機能と検索機能運用が始まると200以上のタスクが作られることが想定されるため探しやすくするため  by zy BEGIN
	var errorAlrtFlg = ("errorAlert" in window);
	// 2020/09/30 右上のタスク選択リストに自分が関連するタスクのみ表示機能と検索機能運用が始まると200以上のタスクが作られることが想定されるため探しやすくするため  by zy END
	// 既に定義する売価はプランカラ取得、画面に設定する
    Visualforce.remoting.Manager.invokeAction(
    "{!$RemoteAction.StaffGanttCtrl.taskFunction}", type,JSON.stringify(req), function(result, event){
        if(event.type == 'exception') {
        	console.log("-------error-------");
			// 2020/09/30 右上のタスク選択リストに自分が関連するタスクのみ表示機能と検索機能運用が始まると200以上のタスクが作られることが想定されるため探しやすくするため  by zy BEGIN
            if (!errorAlrtFlg) alert(errorMsgFormat(event.message));
			// 2020/09/30 右上のタスク選択リストに自分が関連するタスクのみ表示機能と検索機能運用が始まると200以上のタスクが作られることが想定されるため探しやすくするため  by zy END
            if (options) options.error();
            errorToReLoad(type);
        } else if(result != null){
        	// html encode
        	try{
        		// 左侧検索画面とタスクリスト画面
        		if (type == FUNTYPE.GETTASK || type == FUNTYPE.READ　|| type == FUNTYPE.DTUPDATE
        			|| type == FUNTYPE.DTCREATE　|| type == FUNTYPE.DTDESTORY) {
		        	var res = JSON.stringify(result);
		        	if (res.indexOf('&') >= 0) {
		        		var curDiv = $("<div/>");
		        		curDiv.html(res);
		        		var content = curDiv.get(0).textContent;
		        		result = JSON.parse(content);
		        	}
		        	// 2018/11/15 17.プロジェクト管理を開いたときにタスクが開いた状態から始まる by zy BEGIN
		        	/*
		        	// 2018/09/05 新規の展開保持状態　by zy BEGIN
		        	var expandSet = PageInfo.expandArr;
					for (var i = 0 ; i < result.length ;i++) {
						var data = result[i];
						if (("Expanded" in data) && expandSet != undefined && expandSet.length > 0)
							data.Expanded = $.inArray(data.dataid,PageInfo.expandArr) < 0;
					}
					// 2018/09/05 新規の展開保持状態　by zy END
					*/
					// 2018/11/15 17.プロジェクト管理を開いたときにタスクが開いた状態から始まる by zy END
	        	}
        	} catch(e){}
        	if (options) {
        		options.success(result);
        	}
        }
        if (eq) kendo.ui.progress(eq, false);
        if (callback != undefined) callback(result);
    });
}
// 2019/1/15 プロジェックト機能のPriority(重要度）列を追加 by cxw BEGIN
function importanceEditor(container, options){
	var curUserId = $("#hidUserId").val();
	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy BEGIN
	if (!checkCurrentRole(CUS_LABEL.ROLE_EDIT,curUserId,options.model)){
		return;
	}
	/*
	var isManager = $("#hidManager").val();
    var isAssign = $("#hidAssign").val();
    if (isManager != "true") {
		var curUserId = $("#hidUserId").val();
	    var isAssign = $("#hidAssign").val();
	    if (isAssign == 'true' && curUserId != options.model.userid) {
	    	return;
	    }
	}*/
	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy END
	var importance = JSON.parse($("#importanceLstJson").val() || "[]");
	if(!importance || importance.length == 1) return;
	var inputDrop = $('<input name="' + options.field + '" style="width: 100%"/>')
      .appendTo(container)
      .kendoDropDownList({
      	  width:"auto",
          dataTextField: "label",
          dataValueField: "value",
          dataSource: {
          	data: importance
          }
    }).data("kendoDropDownList");
    inputDrop.list
    inputDrop.open();
}
// 2019/1/15 プロジェックト機能のPriority(重要度）列を追加 by cxw END

// 担当者選択リスト
function userEditor(container, options) {
	var curUserId = $("#hidUserId").val();
	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy BEGIN
	if (!checkCurrentRole(CUS_LABEL.ROLE_EDIT,curUserId,options.model)){
		return;
	}
	/*
	var isManager = $("#hidManager").val();
    var isAssign = $("#hidAssign").val();
    if (isManager != "true") {
		var curUserId = $("#hidUserId").val();
	    var isAssign = $("#hidAssign").val();
	    if (isAssign == 'true' && curUserId != options.model.userid) {
	    	return;
	    }
	}
	*/
	var wrap = $("#userEditorWrap");
	wrap.show();
	wrap.css({width:container.width(),height:container.height(),position:"absolute","z-index": 2});
	wrap.offset(container.offset());
	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy END
	var userDropDown = $("[id$=userDropDown]").data("kendoDropDownList");
	var datas = userDropDown.dataSource.data();
	var maxWidth = 0;
	var curUserid = options.model.userid;
    $("body").append("<div id='userTextCheck' style='display:inline-block;font-size: 15.5px;'/>");
	var hadIdFlag = false;
	var dataItems = [];
	for (var i = 0 ; i < datas.length ; i++) {
		var item = datas[i];
		if (item.UserId == curUserid) hadIdFlag = true;
		$("#userTextCheck").text(item.UserName);
		var eachWidth = $("#userTextCheck").width();
		if (eachWidth > maxWidth) maxWidth = eachWidth;
		dataItems.push({UserName:item.UserName,UserId:item.UserId});
	}
	if (!hadIdFlag) {
		dataItems[0].UserName = options.model.assigned;
		dataItems[0].UserId = curUserid;
	} else dataItems = dataItems.slice(1);
	// リスト表示All-》空
	var dataSource = new kendo.data.DataSource({
	  data: dataItems
	});
	$("#userTextCheck").remove();
	// 2020/10/31 担当者を複数設定できるように  by zy BEGIN
	var inputDrop;
	if (options.field == "userid") {		
		var inputElement = $('<input name="' + options.field  + '"/>');
		// 選択なし
		function multiSelectValida(val){
			return val.length == 0;
		}
		// 複数選択チェック
		function refreshMultiStatus(flg,input){
			// 複数選択なし
			if (flg) {
				input.attr("placeholder",CUS_LABEL.USER_ASSIN_NO);
				input.width(200);
			// 複数選択あり
			} else {
				input.removeAttr("placeholder");
				input.width(25);
			}
		}
		inputDrop = inputElement
			.appendTo(wrap)
			.kendoMultiSelect({
				width:"auto",
				dataTextField: "UserName",
				dataValueField: "UserId",
				dataSource: dataSource,
				autoClose:false,
				noDataTemplate:'データが見つかりません。',
				dataBound:function(e){
					var sender = this;
					// クリックの場合、focusout保存無効
					sender._innerWrapper.on("mouseenter",function(){
        				sender.input.off("focusout.kendoMultiSelect");
					});
					// focusout保存有効
					sender._innerWrapper.on("mouseout",function(){
						var selArr = sender.value();
						if (selArr.legnth > 0) sender.input.on("focusout.kendoMultiSelect");
					});
					// focusout保存有効
					sender._innerWrapper.on("keyup",function(event){
						if (event.keyCode == 13) {
							sender.close();
						}
					});
					sender.input.on("focus",function(){
						// 選択なし
						refreshMultiStatus(multiSelectValida(sender.value()),sender.input);
					});
				},
				change:function(){
					// 選択なし
					refreshMultiStatus(multiSelectValida(this.value()),this.input);
				},
				// 閉じる
				close:function(e){
					var arr = this.value();
					// 保存対応
					var model = container.data("modelCopy");
					var gantt = getActionGantt();
					// 選択なし
					if (multiSelectValida(this.value())) {
						e.preventDefault();
						// ESC対応
						if (event.keyCode = 27) {
							this.destroy();
							gantt.dataSource.cancelChanges(model);
						}
					}  else {
						if (model) model.userid = arr;
					}
					var t = gantt.list;
					var s = function(){
						var e = t.editable;
                    	e && (e.end() ? t._closeCell() : e.trigger("validate"));
					}
					s();
                   	t.content.on("focusout.kendoGanttList",function(){
                   		t.timer = setTimeout(s, 1);
                   	});
                    $("#userEditorWrap").children().remove();
					$("#userEditorWrap").hide();
				}
		}).getKendoMultiSelect();
		inputDrop.wrapper.addClass("userMultiSel");
	}
	inputDrop.wrapper.width(container.width());
    // 2020/10/31 担当者を複数設定できるように  by zy END
}
// 2018/11/15 14.タスクの移動がドラッグでできるが、望むところに移動せず、動かすつもりのないタスクも動 by zy BEGIN
function filterSameId(itemValue,prop,ds){
	// 2018/12/15 既存バグ対応、閉じるのタスク変更不正　by　cxw　BEGIN
	var gantt = $("#gantt30").data("kendoGantt");
	var useDs = ds != undefined ? ds : gantt.dataSource.data();
	// 2018/12/15 既存バグ対応、閉じるのタスク変更不正　by　cxw　END
	var itemArr = useDs.filter(function(cur){
// 2018/11/15 14.タスクの移動がドラッグでできるが、望むところに移動せず、動かすつもりのないタスクも動 by zy END
		return cur[prop] == itemValue;
	});
	if (itemArr.length > 0) return itemArr[0];
	return null;
}
function onChange(arg){
	var selected = $.map(this.select(), function(item) {
        return $(item);
    });
    if (selected.length > 0) floatPanelShow();
}
// タスク→プロジェックト
function taskChange(){
	var taskArr = [];
	var selProject = $("#hidMainProjectId").val();
	if(selProject == "") return;
	var grid = $("#sibear").data("kendoGrid");
	var dropDown = $("[id$=userDropDown]").data("kendoDropDownList");
	// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy BEGIN 
	var departMap = {};
	// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy END 
	var userMap = {};
	if (dropDown != undefined) {
		var items = dropDown.dataSource.data();
		for (var i = 0 ; i < items.length ; i++) {
			var item = items[i];
			userMap[item.UserId] = item.UserName;
			// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy BEGIN 
			var depart = getDepart(item.UserId);
			if (depart != "") departMap[item.UserId] = depart;
			// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy END 
		}
	}
	var noAssignArr = [];
	var noAssignMap = {};
	var noAssignTaskArr = [];
	$("#sibear tr.k-state-selected").each(function(){
		var uid = $(this).data("uid");
		var item = grid.dataSource.getByUid(uid);
		if (!(item.userid in userMap) && !(item.userid in noAssignMap)) {
			noAssignMap[item.userid] = "";
			noAssignArr.push(item.CreateBy);
			noAssignTaskArr.push(item.id);
		// JINYABUG-733 修正 by zy BEGIN
		} else if (item.userid in noAssignMap) {
			noAssignTaskArr.push(item.id);
		} else if (!(item.userid in noAssignMap)) taskArr.push(item.id);
		// JINYABUG-733 修正 by zy END
	});
	var changeUserFlag = false;
	if (noAssignArr.length > 0) {
		changeUserFlag = confirm('選択したタスクの担当者「' + noAssignArr.join('、') + '」は該当プロジェクト作業要員に含めておりません、それはよろしいですか')
	}
	if (changeUserFlag) taskArr = taskArr.concat(noAssignTaskArr);
	var selectType = $("input[name=selectType]:checked").val();
	var taskObj = {projectid:selProject,tasks:taskArr,seltype:selectType};
	// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy BEGIN 
	taskObj.depart = departMap;
	// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy END 
	// データ入力する
	if (taskArr.length > 0) {
		kendo.ui.progress($("#gantt30"), true);
		taskDataSource(false,FUNTYPE.TASKTOPROJECT,taskObj,$("#gantt30"),afterTaskChange);
	}
	floatPanelHide();
}
// プロジェックト明細の表示時間範囲
function dateChange(){
	var dateEvent = event.target;
	$(dateEvent).addClass("dateChange");
	var date = $(dateEvent).val();
	var gantt = $("#gantt30").data("kendoGantt");
	var filter = gantt.dataSource.filter();
	var filters = [];
	if (filter != undefined) filters = filter.filters;
	var filterArr = [];
	if (dateEvent.id.indexOf("StartDt") >= 0){
		for (var i = 0 ; i < filters.length ; i++) {
			var eachFilter = filters[i];
			if (eachFilter.field == "start" && eachFilter.operator == "gte") continue;
			filterArr.push(eachFilter);
		}
		if (date != "") filterArr.push({field:"start",operator:"gte",value:new Date(date)});
		gantt.dataSource.filter(filterArr);
	} else {
		for (var i = 0 ; i < filters.length ; i++) {
			var eachFilter = filters[i];
			if (eachFilter.field == "start" && eachFilter.operator == "lte") continue;
			filterArr.push(eachFilter);
		}
		if (date != "") filterArr.push({field:"start",operator:"lte",value:new Date(date + ' 23:59')});
		gantt.dataSource.filter(filterArr);
	}
}
// タスク変更機能画面表示
function floatPanelShow(){
	// ロールチェック
	if (roleValidate()) $("#floatPanel").show();
}
// タスク変更機能画面閉じる
function floatPanelHide(){
	$("#floatPanel").hide();
	$("tr.k-state-selected").removeClass("k-state-selected");
}
// 新規タスク
function addTask(){
	// disable check
	if(checkDisable(event.target)) return;
	// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
	// var gantt = $("#gantt30").data("kendoGantt");
	var gantt = getActionGantt();
	// 2020/09/31 画面スクロールを２分割したい by zy END
	var selectedTask = gantt.dataItem(gantt.select().last());
	kendo.ui.progress($("#gantt30"), true);
	if (selectedTask == undefined) selectedTask = new kendo.data.GanttTask();
	var taskObj = {
		projectid:$("#hidMainProjectId").val(),
		dataid:selectedTask.dataid,
		view:getGanttType()
	};
	// 2019/12/30 タスクがカレンダーに表示させるか、表示させない切替対応 by zy BEGIN
	taskObj.calendarFlg = $("input[id$=hidCalendarFlg]").val();
	// 2019/12/30 タスクがカレンダーに表示させるか、表示させない切替対応 by zy END
	// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy BEGIN 
	taskObj.depart = getDepart();
	// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy END 
	// 2018/11/30 行動を範囲選択してコピー by cxw BEGIN
	PageInfo.selDataId = null;
	// 2018/11/30 行動を範囲選択してコピー by cxw END
	taskDataSource(false,FUNTYPE.DTCREATE,taskObj,false,afterTaskCreate);
}
// 根据方向要求获取task
function getForwardTask(task,gantt,type){
	var curRow = $("tr[data-uid='" + task.uid + "']");
	var nextRow;
	if (type == 'next') {
		// get sibling
		return getBrother(task,gantt,true);
	} else {
		nextRow = curRow.prev();
	if (nextRow != undefined && nextRow.length > 0) {
		var uid = nextRow.attr("data-uid");
		var nextTask = gantt.dataSource.getByUid(uid);
			if (nextTask.orderId == 1) {
				var parRow = nextRow.prev();
				if (parRow.length == 0) nextTask.orderId = 0;
			}
		return nextTask;
		}
	}
	return null;
}
function getBrother(task,gantt,isSibling){
	var sameLevelDatas = null;
	var parTask = gantt.dataSource.taskParent(task);
	sameLevelDatas = gantt.dataSource.taskChildren(parTask);
	if (sameLevelDatas.length > 0) {
		var selectSelf = false;
		var nextTask = null;
		var bortherTask = null;
		for (var i = 0 ; i < sameLevelDatas.length ;i++) {
			var eachData = sameLevelDatas[i];
			if (selectSelf) {
				nextTask = eachData;
				break;
			}
			if (eachData.dataid == task.dataid) selectSelf = true;
			if (!selectSelf) bortherTask = eachData;
		}
		if (isSibling) return nextTask;
		else return bortherTask;
	}
}
// タスク前進
function moveTopTask(){
	// disable check
	if(checkDisable(event.target)) return;
	// 2020/09/30 8151 bug fixed by zy BEGIN
	if(checkSelects()) {
		alert(CUS_LABEL.filterAlert);
		return;
	}
	// 2020/09/30 8151 bug fixed by zy END
	// deleteSelected();
	
	// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
	// var gantt = $("#gantt30").data("kendoGantt");
	var gantt = getActionGantt();
	// 2020/09/31 画面スクロールを２分割したい by zy END
	var selectedTask = gantt.dataItem(gantt.select());
	if (selectedTask) {
		var curLevel = gantt.dataSource.taskLevel(selectedTask); 
		if (curLevel == 0 && selectedTask.orderId == 0) return;
		var nextTask = getForwardTask(selectedTask,gantt,'top');
		if (nextTask != null) {
			//refreshCurrentOrder(selectedTask,gantt.dataSource);
			var updateValues = {orderId:nextTask.orderId};
			if (nextTask.parentId != selectedTask.parentId) updateValues.parentId = nextTask.parentId;
			// 2018/11/15 14.タスクの移動がドラッグでできるが、望むところに移動せず、動かすつもりのないタスクも動 by zy BEGIN
		    // 2018/11/30 行動を範囲選択してコピー by cxw BEGIN
		    // processSaveType(updateValues,selectedTask.dataid);
		    processSaveType(updateValues);
		    // 2018/11/30 行動を範囲選択してコピー by cxw END
		    // 2018/11/15 14.タスクの移動がドラッグでできるが、望むところに移動せず、動かすつもりのないタスクも動 by zy END
			gantt.dataSource.update(selectedTask,updateValues);
			gantt.dataSource.sync();
		}
	}
}
// 刷新当前以及兄弟之间排序关系
function refreshCurrentOrder(task,ds){
	var items = ds.taskChildren(ds.taskParent(task));
	for (var i = 0 ; i < items.length ; i++) {
		items[i].orderId = i;
	}
}
// タスク後退
function moveNextTask(){
	// disable check
	if(checkDisable(event.target)) return;
	// 2020/09/30 8151 bug fixed by zy BEGIN
	if(checkSelects()) {
		alert(CUS_LABEL.filterAlert);
		return;
	}
	// 2020/09/30 8151 bug fixed by zy END
	// deleteSelected();
	// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
	// var gantt = $("#gantt30").data("kendoGantt");
	var gantt = getActionGantt();
	// 2020/09/31 画面スクロールを２分割したい by zy END
	// 2018/11/30 行動を範囲選択してコピー by cxw BEGIN
	var selectedTask = gantt.dataItem(gantt.select().last());
	// 2018/11/30 行動を範囲選択してコピー by cxw END
	if (selectedTask) {
		var nextTask = getForwardTask(selectedTask,gantt,'next');
		if (nextTask != null) {
			refreshCurrentOrder(selectedTask,gantt.dataSource);
			var updateValue = {};
			if (nextTask.summary) {
				updateValue.parentId = nextTask.id;
				updateValue.orderId = 0;
			} else {
				updateValue.orderId = nextTask.orderId;
				updateValue.parentId = nextTask.parentId;
			}
			// 2018/11/15 14.タスクの移動がドラッグでできるが、望むところに移動せず、動かすつもりのないタスクも動 by zy BEGIN
		    // 2018/11/30 行動を範囲選択してコピー by cxw BEGIN
		    // processSaveType({},selectedTask.dataid);
		    processSaveType({});
		    updateValue["status"] = "next";
		    // 2018/11/30 行動を範囲選択してコピー by cxw END
		    // 2018/11/15 14.タスクの移動がドラッグでできるが、望むところに移動せず、動かすつもりのないタスクも動 by zy END
			gantt.dataSource.update(selectedTask,updateValue);
			gantt.dataSource.sync();
		}
	}
}
// タスク左側
function moveLeftTask(){
	// disable check
	if(checkDisable(event.target)) return;
	// 2020/09/30 8151 bug fixed by zy BEGIN
	if(checkSelects()) {
		alert(CUS_LABEL.filterAlert);
		return;
	}
	// 2020/09/30 8151 bug fixed by zy END
	// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
	// var gantt = $("#gantt30").data("kendoGantt");
	var gantt = getActionGantt();
	// 2020/09/31 画面スクロールを２分割したい by zy END
	var selectedTask = gantt.dataItem(gantt.select());
	if (selectedTask) {
		var selectLevel = gantt.dataSource.taskLevel(selectedTask);
		if (selectLevel > 0) {
			// deleteSelected();
			var parentTask = gantt.dataSource.taskParent(selectedTask);
			if (parentTask) {
				// 2018/11/15 14.タスクの移動がドラッグでできるが、望むところに移動せず、動かすつもりのないタスクも動 by zy BEGIN
			    // 2018/11/30 行動を範囲選択してコピー by cxw BEGIN
			    // processSaveType({},selectedTask.dataid);
			    processSaveType({});
			    // 2018/11/30 行動を範囲選択してコピー by cxw END
			    // 2018/11/15 14.タスクの移動がドラッグでできるが、望むところに移動せず、動かすつもりのないタスクも動 by zy END
				gantt.dataSource.update(selectedTask,{parentId:parentTask.parentId, orderId:parentTask.orderId + 1});
				gantt.dataSource.sync();
			}
		}
	}
}
// タスク右側
function moveRightTask(){
	// disable check
	if(checkDisable(event.target)) return;
	// 2020/09/30 8151 bug fixed by zy BEGIN
	if(checkSelects()) {
		alert(CUS_LABEL.filterAlert);
		return;
	}
	// 2020/09/30 8151 bug fixed by zy END
	// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
	// var gantt = $("#gantt30").data("kendoGantt");
	var gantt = getActionGantt();
	// 2020/09/31 画面スクロールを２分割したい by zy END
	var selectedTask = gantt.dataItem(gantt.select());
	if (selectedTask) {
		var beforeTask = getBrother(selectedTask,gantt);
		if (beforeTask != null){
			var childs = gantt.dataSource.taskChildren(beforeTask);
			var orderId = 0;
			// 2018/11/21 行動を範囲選択してコピーできるといい。 by cxw BEGIN
			if (childs.length > 0) orderId = childs.length, refreshCurrentOrder(childs[0], gantt.dataSource);
			// 2018/11/21 行動を範囲選択してコピーできるといい。 by cxw END
			// 2018/11/15 14.タスクの移動がドラッグでできるが、望むところに移動せず、動かすつもりのないタスクも動 by zy BEGIN
		    // 2018/11/30 行動を範囲選択してコピー by cxw BEGIN
		    // processSaveType({},selectedTask.dataid);
		    processSaveType({});
		    // 2018/11/30 行動を範囲選択してコピー by cxw END
		    // 2018/11/15 14.タスクの移動がドラッグでできるが、望むところに移動せず、動かすつもりのないタスクも動 by zy END
			// 同级别直接到下一级
			gantt.dataSource.update(selectedTask,{parentId:beforeTask.id,orderId:orderId});
			gantt.dataSource.sync();
		}
	}
}
// チェック状態
function checkDisable(evt){
	return $(evt).hasClass("disableClass");
}
// タスク削除
function removeTask(){
	// disable check
	if(checkDisable(event.target))return;
	// 2020/09/30 8151 bug fixed by zy BEGIN
	if(checkSelects()) {
		alert(CUS_LABEL.filterAlert);
		return;
	}
	// 2020/09/30 8151 bug fixed by zy END
	deleteSelected();
	// 2018/11/21 行動を範囲選択してコピーできるといい。 by cxw BEGIN
	// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
	// var gantt = $("#gantt30").data("kendoGantt");
	var gantt = getActionGantt();
	// 2020/09/31 画面スクロールを２分割したい by zy END
	var items = neatenSelect();
		var destroyed = new Set();
		// 2018/12/15 削除タスク順序不計算修正 by cxw BEGIN
		var parents = new Set();
		// 2018/12/15 削除タスク順序不計算修正 by cxw END
		// 2019/04/15 JINYABUG-1564 bug fix by zy BEGIN
		var delItems = [];
		// 2019/04/15 JINYABUG-1564 bug fix by zy END
		for(var i = 0; i < items.length; i++){
			var childrens = gantt.dataSource.taskAllChildren(items[i]);
			// 2019/04/15 JINYABUG-1564 bug fix by zy BEGIN
			for(var n = 0; n < childrens.length; n++) {
				destroyed.add(childrens[n].dataid);
				delItems.push(childrens[n]);
			}
			// 2019/04/15 JINYABUG-1564 bug fix by zy END
			destroyed.add(items[i].dataid);
			// 2018/12/15 削除タスク順序不計算修正 by cxw BEGIN
			parents.add(items[i].dataid);
			// 2018/12/15 削除タスク順序不計算修正 by cxw END
			// 2019/04/15 JINYABUG-1564 bug fix by zy BEGIN
			delItems.push(items[i]);
			// 2019/04/15 JINYABUG-1564 bug fix by zy END
		}
		if(!destroyed.size){
			alert('タスク選択ください');
			return;
		}
		// 2019/04/15 JINYABUG-1564 bug fix by zy BEGIN
		gantt._preventRefresh = true;
		window.desIds = Array.from(destroyed);
		delItems.forEach(function(task){
			gantt._removeTask(task);
		});
		return ;
		// 2019/04/15 JINYABUG-1564 bug fix by zy END
        var proejctId = $("#hidMainProjectId").val();
        var projectMain = {
        	tasks:Array.from(destroyed),
		// 2018/11/21 行動を範囲選択してコピーできるといい。 by cxw END
        	projectid:proejctId,
        	// 2018/12/15 削除タスク順序不計算修正 by cxw BEGIN
        	refreshParents: Array.from(parents)
        	// 2018/12/15 削除タスク順序不計算修正 by cxw END
        };
        kendo.ui.progress($("#gantt30"), true);
        taskDataSource(false,FUNTYPE.DTDESTORY,projectMain,false,afterTaskDelete);
}
// disableボタングループ
function deleteSelected(){
	$("#align li.k-state-active").removeClass("k-state-active");
	if ($("#gantt30 .k-state-selected").length > 0){
		$("#align li.noSelClass").addClass("disableClass");
	}
	changePageRole();
}
// マルチタスク行く
function showInTask(){
	if(checkDisable(event.target))return;
	var proejctId = $("#hidMainProjectId").val();
	var url = '/apex/StaffTask';
	if (proejctId != undefined && proejctId != "" ** proejctId != null) url += '?pspcd=&Project=' + proejctId;
	window.open(url);
}
// 2019/1/15 プロジェックト機能の番号保持 by cxw BEGIN
// 2020/08/31 バージョン管理。保存したらバージョン1、2と保存して後から呼び出せる機能、もしくはexcel出力 できるように。 by zy BEGIN
function designationKeep(tree,parMap){
// 2020/08/31 バージョン管理。保存したらバージョン1、2と保存して後から呼び出せる機能、もしくはexcel出力 できるように。 by zy END
	var levelMap = new Map();
	var levelArr = [];
	for(var i = 0, j = tree.length; i < j; i++){
		var t = tree[i];
		if(!levelMap.has(t.parentId)) {
			levelMap.set(t.parentId, []);
			levelArr.push(t.parentId);
		}
		levelMap.get(t.parentId).push(t);
	}
	
	for(var i = 0, j = levelMap.size; i < j; i++){
		var key = levelArr[i] || null;
		var arr = levelMap.get(key);
		arr.sort(function(a, b){
			return a.orderId - b.orderId;
		});
		for(var n = 0, m = arr.length; n < m; n++){
			arr[n].tmp = n;
		}
	}
	// 2020/08/31 バージョン管理。保存したらバージョン1、2と保存して後から呼び出せる機能、もしくはexcel出力 できるように。 by zy BEGIN
	var map = parMap != undefined ? parMap : new Map();
	// 2020/08/31 バージョン管理。保存したらバージョン1、2と保存して後から呼び出せる機能、もしくはexcel出力 できるように。 by zy END
	for(var i = 0, j = tree.length; i < j; i++){
		var t = tree[i];
		if(map.has(t.parentId)) t.wbs = map.get(t.parentId).wbs + "." + (t.tmp + 1).toString();
		else t.wbs = t.tmp + 1;
		map.set(t.id, t);
	}
}
// 2019/1/15 プロジェックト機能の番号保持 by cxw END

function treeMenu(a){
	//if (a) a.sort(function(a,b){return a.orderId >b.orderId});
    this.tree=a||[];
    var treeObj = {};
    this.groups={};
};
treeMenu.prototype={
    init:function(pid){
        this.group();
        return this.getDom(this.groups[pid]);
    },
    group:function(){
        for(var i=0;i<this.tree.length;i++){
        	var parentId = this.tree[i].parentId;
        	if (parentId == undefined) parentId = null;
            if(this.groups[parentId]){
                this.groups[parentId].push(this.tree[i]);
            }else{
                this.groups[parentId]=[];
                this.groups[parentId].push(this.tree[i]);
            }
        }
    },
    getDom:function(a,p){
        if(!a){return ''}
        var idx = 1;
        for(var i=0;i<a.length;i++){
            if (p != undefined) a[i].wbs = p + '.' + idx;
            else a[i].wbs = idx;
            this.getDom(this.groups[a[i].id],a[i].wbs);
            idx++;
        };
        return a;
    }
};
// ユーザーリスト取得
function getUserDataSource(projectWindow){
	if ($("#projectWindow").hasClass("loadUser")) {
		if (projectWindow) kendo.ui.progress(projectWindow, false);
		return;
	}
	var projectId = $("#projectWindow").data("projectid");
    taskDataSource(false,FUNTYPE.GETMANAGER,projectId,projectWindow,afterManageMultiLoad);
}
// プロジェックト画面表示
function popupProject(){
	$("#projectWindow").data("projectid","");
	deleteSelected();
	clearWindowProper();
	var curDt = kendo.toString(new Date(),JINYACONNECT.DateFormat);
	$("#projectStartDt").val(curDt);
	// JINYABUG-730 修正　by　zy　BEGIN
	//$("#projectEndDt").val(curDt);
	// JINYABUG-730 修正　by　zy　END
	var curUserId = $("#hidUserId").val();
	var manSel = $("[id$=managerTree]").data("kendoMultiSelect");
	manSel.value([curUserId]);
	var kendoWin = $("#projectWindow").data("kendoWindow");
	kendoWin.open();
	kendoWin.title("新規プロジェクト");
	kendo.ui.progress($("#projectWindow"), true);
	getUserDataSource($("#projectWindow"));
}
// 编辑プロジェックト
function popupEditProject(){
	if(checkDisable(event.target)) return;
	getUserDataSource();
	deleteSelected();
	clearWindowProper();
	var kendoWin = $("#projectWindow").data("kendoWindow");
	kendoWin.open();
	kendoWin.title("");
	kendo.ui.progress($("#projectWindow"), true);
	var projectId = $("#hidMainProjectId").val();
	// 2020/10/31 プロジェクトオブジェクトのレコードにプロジェクトコードを作成し by zy BEGIN
	var obj = {id:projectId,record:getRecordName()};
	taskDataSource(false,FUNTYPE.GETPROJECT,obj,$("#projectWindow"),afterShowProject);
	// 2020/10/31 プロジェクトオブジェクトのレコードにプロジェクトコードを作成し by zy END
}
// クリア画面
function clearWindowProper(){
	$("#projectName").val("");
	$("#groupRole").prop("checked",false);
	var sel = $("[id$=dropdowntree]").data("kendoMultiSelect");
	var manSel = $("[id$=managerTree]").data("kendoMultiSelect");
	sel.value("");
	manSel.value("");
	$("#projectDescribe").val("");
	$("#projectStartDt").val("");
	$("#projectEndDt").val("");
	// 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy BEGIN
	$("#chgDay").prop("checked",false);
	// 2019/12/30 タスクがカレンダーに表示させるか、表示させない切替対応 by zy BEGIN
	$("#calendarChk").prop("checked",false);
	// 2019/12/30 タスクがカレンダーに表示させるか、表示させない切替対応 by zy END
	var title = $("#dateModeHelp").attr("title");
	if (!title) {
		var helpText = "日単位でタスク管理を行う（週、月、年モード有効）&#13;&#10;注：ONに設定、既存タスクの開始日付または終了日付を変更される場合、元設定した時刻を切り捨てる";
		var decodeDiv = $("<div/>");
		var divElement = decodeDiv.get(0);
		decodeDiv.html(helpText);
		helpText = divElement.textContent;
		$("#dateModeHelp").attr("title",helpText);
	}
	// 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy END
	// 2020/10/30 プロジェクトオブジェクトのレコードにプロジェクトコードを作成し by zy BEGIN 
	$("#projectEditTitle").val("");
	// 2020/10/30 プロジェクトオブジェクトのレコードにプロジェクトコードを作成し by zy END 
	clearProjectValidate();
}
// プロジェックト画面閉じる
function hideKendoWin(){
	var kendoWin = $("#projectWindow").data("kendoWindow");
	kendoWin.close();
}
function clearProjectValidate(){
	$(".requiredClass").removeClass("requiredClass");
	$("#projectName").removeAttr("placeholder");
	var manSel = $("[id$=managerTree]").data("kendoMultiSelect");
	manSel.input.removeAttr("placeholder");
}
// プロジェックト保存
function saveKendoWin(){
	var popwindow = $("#projectWindow");
	var sel = $("[id$=dropdowntree]").data("kendoMultiSelect");
	var manSel = $("[id$=managerTree]").data("kendoMultiSelect");
	var projectName = $("#projectName").val();
	if (projectName == undefined || projectName == "") {
		$("#projectName").addClass("requiredClass");
		$("#projectName").attr("placeholder","プロジェクト名を入力してください");
		return ;
	}
	var userName = $("[id$=manegerDropdown]").val();
	var userNames = sel.value().join(",");
	var startDt = $("#projectStartDt").val();
	var endDt = $("#projectEndDt").val();
	var projectFlag = $("#groupRole").is(":checked");
	var managerName = manSel.value().join(",");
	if (managerName == "") {
		manSel.wrapper.addClass("requiredClass");
		manSel.input.width(250);
		manSel.input.attr("placeholder","マネージャーを選んでください");
		return ;
	}
	var projectid = $("#projectWindow").data("projectid");
	var describe = $("#projectDescribe").val();
	// JINYABUG-731 修正 by zy BEGIN
	if (describe != null && describe != "") describe = JSON.stringify(describe);
	// JINYABUG-731 修正 by zy END
	var projectObj = {name:projectName,dept:userName,users:userNames,startDt:startDt,
						endDt:endDt,pub:projectFlag,managerName:managerName,
						pDesc:describe,projectid:projectid};
	// 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy BEGIN
	projectObj.dateMode = $("#chgDay").is(":checked");
	// 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy END
	// 2019/12/30 タスクがカレンダーに表示させるか、表示させない切替対応 by zy BEGIN
	projectObj.calendarFlg = $("#calendarChk").is(":checked");
	// 2019/12/30 タスクがカレンダーに表示させるか、表示させない切替対応 by zy END
	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy BEGIN
	projectObj.roleDetailFlg = $("#taskRoleChk").is(":checked");
	$("#hidManagerIds").val(managerName);
	$("#hidAssignIds").val(userNames);
	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy END
	// 2019/03/15 マルチタスクの表示を切り替える by cxw BEGIN
	projectObj.finish = $('#over').is(':checked');
	var finishMode = $(':input[id$="finishMode"]').val() == 'true';
	var $projectIdList = $('select[id$="userDropProjects"] option[value]');
	var nextProjectId = '';
	if($projectIdList.length) {
		var $currentSelect = $projectIdList.filter('[selected]');
		var $nextSelect = $currentSelect.next();
		if($nextSelect.length) {
			nextProjectId = $nextSelect.val();
		} else {
			var $defaultSelect = $projectIdList.filter('[value != "' + projectid + '"]').eq(0);
			if($defaultSelect.length) {
				nextProjectId = $defaultSelect.val();
			}
		}
	}
	// 2020/10/31 プロジェクトオブジェクトのレコードにプロジェクトコードを作成し by zy BEGIN
	projectObj.title = $("#projectEditTitle").val();
	projectObj.record = getRecordName();
	// 2020/10/31 プロジェクトオブジェクトのレコードにプロジェクトコードを作成し by zy END
	taskDataSource(false,FUNTYPE.CREATEPROJECT,projectObj,false,afterSaveProject.bind({finish: projectObj.finish == finishMode, nextProjectId}));
	// 2019/03/15 マルチタスクの表示を切り替える by cxw END
}
// 权限控制
function roleValidate(id,selection){
	$(".plusClass").removeClass("disableClass");
	if (selection) $(".noSelClass").removeClass("disableClass");
	var manager = $("#hidManager").val();
	if (manager == "true") return true;
	// 除了管理员外禁止添加task
	$(".plusClass").addClass("disableClass");
	var assign = $("#hidAssign").val();
	var userId = $("#hidUserId").val();
	if (assign == "true" && userId == id) {
		return true;
	}
	// 禁止更新
	disableButton(selection);
	// 禁止功能
    deleteSelected();
	return false;
}
//  プロジェックト更新ロールチェック
// 2019/03/15 マルチタスクの表示を切り替える by cxw BEGIN
// function roleCheck(result){
function roleCheck(data){
// 2019/03/15 マルチタスクの表示を切り替える by cxw END
	var proejctId = $("#hidMainProjectId").val();
	var hadProejctFlag = false;
	var isManager = false;
	var isAssign = false;
	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy BEGIN
	var projectDetailRole = false;
	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy END
	// 2019/03/15 マルチタスクの表示を切り替える by cxw BEGIN
	var result = data[0].data;
	var finishMode = $(':input[id$="finishMode"]').val() == 'true';
	if(finishMode && !result.length) return;
		//return changeFinishMode();
	$('#cFinishMode').removeClass('disableClass');
	if(!finishMode && !data[0].otherlen) {
		$('#cFinishMode').addClass('disableClass');
	}
	// 2019/03/15 マルチタスクの表示を切り替える by cxw END
	for (var i = 0 ; i < result.length ; i++) {
		var item = result[i];
		if (item.value == proejctId) {
			hadProejctFlag = true;
			if(item.ismanager) $("span.k-icon.k-i-gear").removeClass("disableClass")
			else $("span.k-icon.k-i-gear").addClass("disableClass");
			isManager = item.ismanager;
			isAssign = item.isAssign;
			// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy BEGIN
			projectDetailRole = item.roleDetailFlg;
			// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy END
			break;
		}
	}
	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy BEGIN
	$("#hidDetailRole").val(projectDetailRole);
	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy END
	$("#hidManager").val(isManager);
	$("#hidAssign").val(isAssign);
	// 2018/11/15 17.プロジェクト管理を開いたときにタスクが開いた状態から始まる by zy BEGIN
	var userProject = $("[id$=userDropProjects]").data("kendoDropDownList");
	var datas = getSourceData(userProject.options.dataValueField,proejctId,userProject.dataSource.data());
	var curProjectId = userProject.value();
	if (datas != undefined && datas.length > 0) userProject.value(proejctId);
	else if (datas.length > 0){
		userProject.select(0);
		userProject.trigger("change");
	} else if (proejctId != curProjectId) {
		userProject.value('');
		userProject.trigger("change");
	}
	//$("[id$=userDropProjects]").data("kendoDropDownList").value(proejctId);
	// 2018/11/15 17.プロジェクト管理を開いたときにタスクが開いた状態から始まる by zy END
	if (hadProejctFlag) {
		$(".noShowClass").removeClass("noShowClass");
	}
	changeRole();
	roleValidate();
}
function changeRole(){
	var isManage = $("#hidManager").val();
	var isAssign = $("#hidAssign").val();
	var gantt = $("#gantt30").data("kendoGantt");
	$("#toobalTemplate").append($("#toolbarRows").children());
	var options = gantt.options;
	if (isManage == "true") {
		options.editable = true;
	}else if (isAssign == "true") {
		options.editable = {
			destroy:false,
			move:true,
			resize: true,
			reorder:false,
			dragPercentComplete:false,
			dependencyCreate:false,
		};
	} else options.editable = false;
	// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
	if (gantt.needChangeSplit) {
		gantt.needReadSplit = 0;
		delete gantt.needChangeSplit;
	}
	// 2020/09/31 画面スクロールを２分割したい by zy END
	// 刷新显示模式被更新问题修正
	var orgMode = $(".k-gantt-views .k-state-selected").attr("data-name");
	gantt.setOptions(options);
	// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
	// gantt.view(orgMode);
	// 2020/09/31 画面スクロールを２分割したい by zy END
	$("#toolbarRows").append($("#toobalTemplate").children());
	if (isSplitMode()) setContentHt();
}
function changePageRole(){
	var isManager = $("#hidManager").val();
	if (isManager == "true") {
		$(".managerClass").removeClass("disableClass");
	} else {
		$(".managerClass").addClass("disableClass");
	}
}
function afterTaskCreate(result){
	var gantt = $("#gantt30").data("kendoGantt");
	// 2018/11/15 14.タスクの移動がドラッグでできるが、望むところに移動せず、動かすつもりのないタスクも動 by zy BEGIN
	var datas = getSourceData('newFlag',true,result);
	// 2018/11/30 行動を範囲選択してコピー by cxw BEGIN
	// if (datas.length > 0) PageInfo.dataid = datas[0].dataid;
	if (datas.length > 0) {
		var dataArr = [];
		for (var i = 0; i < datas.length ; i++) dataArr.push(datas[i].dataid);
		holdPageDataId(dataArr);
	}
	// 2018/11/30 行動を範囲選択してコピー by cxw END
	gantt.dataSource.read(result).then(function(){
		moveCurrentTask();
	});
	// 2018/11/15 14.タスクの移動がドラッグでできるが、望むところに移動せず、動かすつもりのないタスクも動 by zy END
	// deleteSelected();
}
// タスク保存後画面リアル
function afterTaskDelete(result){
	var gantt = $("#gantt30").data("kendoGantt");
	gantt.dataSource.read(result);
	// 2018/12/30 プロジェックトTIMEOUT 修正 by zy BEGIN
	//gridsDs.read();
	// 2018/12/30 プロジェックトTIMEOUT 修正 by zy END
	deleteSelected();
}
function afterTaskChange(result){
	// 2019/07/15 JINYABUG-1946 bug fix by zy BEGIN
	if (result != null) {
	// 2019/07/15 JINYABUG-1946 bug fix by zy END
	var gantt = $("#gantt30").data("kendoGantt");
	gridsDs.read();
	reloadAssign();
	// 2018/11/15 14.タスクの移動がドラッグでできるが、望むところに移動せず、動かすつもりのないタスクも動 by zy BEGIN
	var datas = getSourceData('newFlag',true,result);
	// 2018/11/30 行動を範囲選択してコピー by cxw BEGIN
	// if (datas.length > 0) PageInfo.dataid = datas[0].dataid;
	if (datas.length > 0) {
		var dataArr = [];
		for (var i = 0; i < datas.length ; i++) dataArr.push(datas[i].dataid);
		holdPageDataId(dataArr);
	}
	// 2018/11/30 行動を範囲選択してコピー by cxw END
	// gantt.dataSource.read(result);
	gantt.dataSource.read(result).then(function(){
		moveCurrentTask();
	});
	// 2018/11/15 14.タスクの移動がドラッグでできるが、望むところに移動せず、動かすつもりのないタスクも動 by zy END
	// 2019/07/15 JINYABUG-1946 bug fix by zy BEGIN
	}
	// 2019/07/15 JINYABUG-1946 bug fix by zy END
	deleteSelected();
}
// datasource更新
function afterManageMultiLoad(result){
	if (result.length > 0) {
		var dropdownSelects = $("select[id$=dropdowntree]").data("kendoMultiSelect");
		var dataSource = new kendo.data.DataSource({
		  data: result
		});
		dropdownSelects.setDataSource(dataSource);
		var managerSelects = $("select[id$=managerTree]").data("kendoMultiSelect");
	     var dataSource2 = new kendo.data.DataSource({
		  data: result
		});
		managerSelects.setDataSource(dataSource2);
		$("#projectWindow").addClass("loadUser");
		var curUserId = $("#hidUserId").val();
		managerSelects.value([curUserId]);
	}
}
// 取得プロジェックトCALLBACK
function afterShowProject(result){
	if (result.length > 0) {
		var project = result[0];
		$("#projectName").val(project.name);
		$("#groupRole").prop("checked",project.pub);
		var sel = $("[id$=dropdowntree]").data("kendoMultiSelect");
		var manSel = $("[id$=managerTree]").data("kendoMultiSelect");
		if (project.users != undefined && project.users != "") sel.value(project.users.split(','));
		if (project.managerName != undefined && project.managerName != "") manSel.value(project.managerName.split(','));
		if (project.startDt != undefined) $("#projectStartDt").val(project.startDt);
		if (project.endDt != undefined) $("#projectEndDt").val(project.endDt);
		// JINYABUG-731 修正 by zy BEGIN
		var decodeDiv = $("<div/>");
		var divElement = decodeDiv.get(0);
		decodeDiv.html(project.pDesc);
		var changeDesc = divElement.textContent;
		try {
			if (divElement.textContent != "") changeDesc = JSON.parse(divElement.textContent);
		}catch(e) {}
		$("#projectDescribe").val(changeDesc);
		// JINYABUG-731 修正 by zy END
		// 2020/10/31 プロジェクトオブジェクトのレコードにプロジェクトコードを作成し by zy BEGIN
		if ($("#projectEditTitle").length) {
			$("#projectEditTitle").val(project.record);
		}
		// 2020/10/31 プロジェクトオブジェクトのレコードにプロジェクトコードを作成し by zy END
		// 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy BEGIN
		var dateMode = project.dateMode;
		$("#chgDay").prop("checked",dateMode == "true");
		// 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy END
		// 2019/12/30 タスクがカレンダーに表示させるか、表示させない切替対応 by zy BEGIN
		$("#calendarChk").prop("checked",project.calendarFlg);
		// 2019/12/30 タスクがカレンダーに表示させるか、表示させない切替対応 by zy END
		// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy BEGIN
		$("#taskRoleChk").prop("checked",project.roleDetailFlg);
		$("#hidDetailRole").val(project.roleDetailFlg);
		// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy END
		// 2019/03/15 マルチタスクの表示を切り替える by cxw BEGIN
		$('#over').prop('checked', project.finish);
		// 2019/03/15 マルチタスクの表示を切り替える by cxw END
		$("#projectWindow").data("projectid",project.projectid);
		var kendoWin = $("#projectWindow").data("kendoWindow");
		kendoWin.title(project.name);
	}
}
function afterDepenctSave(){
	var gantt = $("#gantt30").data("kendoGantt");
   	gantt.dependencies.read();
}
// プロジェックト保存後
function afterSaveProject(result){
	// 2020/10/30 プロジェクトオブジェクトのレコードにプロジェクトコードを作成し by zy BEGIN
	if (result == null) return;
	// 2020/10/30 プロシEND
	// 2019/03/15 マルチタスクの表示を切り替える by cxw BEGIN
	if(this.nextProjectId && !this.finish) {
		$("input[id$=hidProjectId]").val(this.nextProjectId);
		return changeProject();
	}
	// 2019/03/15 マルチタスクの表示を切り替える by cxw END
	if(result != null){
       	// リアルプロジェックト選択リスト
       	var projectItem = result[0];
       	if (projectItem.projectid != undefined) $("#hidMainProjectId").val(projectItem.projectid);
		// 2020/10/30 プロジェクトオブジェクトのレコードにプロジェクトコードを作成し by zy BEGIN
       	if (projectItem.name != undefined) {
			if (projectItem.record != undefined && projectItem.record != null && projectItem.record != "") projectItem.name += '(' + projectItem.record + ')';
			$("#projectTitle").text(projectItem.name);
		}
		// 2020/10/30 プロジェクトオブジェクトのレコードにプロジェクトコードを作成し by zy END
       	// 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy BEGIN
       	if (projectItem.dateMode != undefined) $("#hidProjectMode").val(projectItem.dateMode);
       	changeFieldFormat();
       	// 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy END
		// 2019/12/30 タスクがカレンダーに表示させるか、表示させない切替対応 by zy BEGIN 
		if (projectItem.calendarFlg != undefined) $("input[id$=hidCalendarFlg]").val(projectItem.calendarFlg ? '非表示' : '表示');
		// 2019/12/30 タスクがカレンダーに表示させるか、表示させない切替対応 by zy END
		// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy BEGIN
		$("#hidDetailRole").val(projectItem.roleDetailFlg);
		// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy END
    }
    refreshAllPage();
}
function refreshAllPage(){
    var kendoWin = $("#projectWindow").data("kendoWindow");
	kendoWin.close();
	// 2018/12/30 プロジェックトTIMEOUT 修正 by zy BEGIN
    // gridsDs.read();
    // 2018/12/30 プロジェックトTIMEOUT 修正 by zy END
    // リアル該当プロジェックト明細
    reloadGantt();
    // リアルプロジェックト選択リスト
    reloadProject();
	// リアル担当者リスト
	reloadAssign();
}
// タスクデータ後
function afterTaskRead(result){
	// プロジェックト下のタスクリスト対応
	var startDt;var endDt;
	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy BEGIN
	var opt = this.options,arr = [];
	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy END
	// 初期化以外の場合
   	if (!$("input[id$=filterStartDt]").hasClass("dateChange") 
   			&& !$("input[id$=filterEndDt]").hasClass("dateChange")) {
   		if (result != null) {
			// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy BEGIN
   			var userId = getUserId(),roleFlg = isDetailRole();
			// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy END
			for (var i = 0 ; i < result.length ;i++) {
				var item = result[i];
				var start = kendo.parseDate(item.Start);
				var end = kendo.parseDate(item.end);
				if (startDt == undefined || startDt > start) startDt = start;
				if (endDt == undefined || endDt < end) endDt = end;
				// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy BEGIN
				arr.push(item);
				// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy END
			}
			if (startDt != undefined) $("input[id$=filterStartDt]").val(kendo.toString(startDt,JINYACONNECT.DateFormat));
			if (endDt != undefined) $("input[id$=filterEndDt]").val(kendo.toString(endDt,JINYACONNECT.DateFormat));
		}
	}
	// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
	if (result.length == 0) {
		var gt = $("#ganttNew").getKendoGantt();
		if (gt) {
			gt._preventRefresh = false;
			gt.dataSource.error();
		}
	}
	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy BEGIN
	opt.success(arr);
	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy END
	// 2020/09/31 画面スクロールを２分割したい by zy END
}
// リアル該当プロジェックト明細
function reloadGantt(){
	var gantt = $("#gantt30").data("kendoGantt");
   	gantt.dataSource.read();
   	gantt.dependencies.read();
}
function reloadDependencies(){
	var gantt = $("#gantt30").data("kendoGantt");
	gantt.dependencies.read();
}
// 該当プロジェックトのCOOKIE保存
function saveCookieProjectId(){
	var projectId = $("#hidMainProjectId").val();
   	taskDataSource(false,FUNTYPE.SAVECOOKIEPJ,projectId);
}
// リアル該当プロジェックト担当者リスト
function reloadAssign(){
	var userDropDown = $("[id$=userDropDown]").data("kendoDropDownList");
	userDropDown.dataSource.read();
}
// リアルプロジェックトリスト
function reloadProject(){
	var dropDown = $("[id$=userDropProjects]").data("kendoDropDownList");
    dropDown.dataSource.read();
}
// エラー対応
function errorToReLoad(type){
	// 行動移動
	if (type == FUNTYPE.DTUPDATE ||　type == FUNTYPE.DEPCREATE) {
		// リアル該当プロジェックト明細
    	reloadGantt();
	}				
}
// 2018/08/08 メモ追加　by　zy BEGIN
// 特殊内容変更
function changeText(item){
	// 該当内容
	var comment = item.comment;
	// 特殊内容あり
	if (comment.indexOf('\\n') >= 0 ) {
		var decodeDiv = $("<div/>");
		var divElement = decodeDiv.get(0);
		decodeDiv.html(comment);
		// 変更後
		var changeDesc = divElement.textContent;
		if (changeDesc != "") {
			try{
				item.comment = decodeString(divElement.textContent);
			}catch(e){}
		}
	} 
}
// 編集メモ
function memoEditor(container, task){
	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy BEGIN
	var curUserId = $("#hidUserId").val();
	if (!checkCurrentRole(CUS_LABEL.ROLE_EDIT,curUserId,task)){
		return;
	}
	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy END
    // メモ対応
    var memoArea = $("#memoArea textarea").clone();
    // 2020/10/31 8369 bug fixed by zy BEGIN
    var gantt = getActionGantt();
    var gantContent = gantt.list.content;
    // 2020/10/31 8369 bug fixed by zy END
    // 2019/02/28 プロジェクト改善文字放大缩小 by cxw BEGIN
    gantContent.prepend(memoArea);
    var scrollLeft = gantContent.scrollLeft();
    var scrollTop = gantContent.scrollTop();
    var offset = container.position();
    var round = this.$round || 1;
    // 2019/02/28 プロジェクト改善文字放大缩小 by cxw END
    offset.top +=1 ;
    offset.left += 1;
    // 2019/02/28 プロジェクト改善文字放大缩小 by cxw BEGIN
    offset.left /= round;
    offset.top /= round;
    offset.left += scrollLeft;
    offset.top += scrollTop;
    // 2019/02/28 プロジェクト改善文字放大缩小 by cxw END
    var ht = gantContent.height();
    var maxTop = $("tr:last",gantContent).offset().top;
    // 2019/02/28 プロジェクト改善文字放大缩小 by cxw BEGIN
    // memoArea.offset(offset);
    memoArea.css({left: offset.left, top: offset.top});
    // 2019/02/28 プロジェクト改善文字放大缩小 by cxw END
    var maxHt = ht - memoArea.position().top - 20;
    memoArea.css({width:container.outerWidth() - 8,"max-height":maxHt});
    memoArea.val(task.comment);
    memoArea.focus();
    var cont = memoArea.closest("div.k-grid-content").get(0);
    let capture = {capture : true};
    cont.addEventListener( 'keydown',prevKeyEvent,capture);
    cont.addEventListener( 'keyup',prevKeyEvent,capture);
    cont.addEventListener( 'mousewheel',prevScrollEvent,capture);
    resizeTextarea(memoArea);
}
function prevScrollEvent(){
	event.stopPropagation();
}
// 編集Enterクリック保存阻止
function prevKeyEvent(){
	if (event.keyCode == 13) event.stopPropagation();
}
// 編集内容変更
function keyupStopEditor(){
	var curTarget = $(event.currentTarget);
	var textArea = curTarget.val();
	textArea = cutEncodeString(textArea,32000);
    curTarget.val(textArea);
   	resizeTextarea(curTarget);
}
// 編集事件対応
function textAreaBlur(){
	var curTarget = $(event.currentTarget);
	var textArea = curTarget.val();
	// 2020/10/31 8369 bug fixed by zy BEGIN
	var gantt = getActionGantt();
	// 2020/10/31 8369 bug fixed by zy END
	var selectTask = gantt.dataItem(gantt.select());
	var updateValues = {comment:textArea};
	gantt.dataSource.update(selectTask,updateValues);
	gantt.dataSource.sync();
	let capture = {capture : true};
	var cont = curTarget.closest("div.k-grid-content").get(0);
	cont.removeEventListener( 'keydown',prevKeyEvent,capture);
	cont.removeEventListener( 'keyup',prevKeyEvent,capture);
	cont.removeEventListener( 'mousewheel',prevScrollEvent,capture);
	curTarget.remove();
}
// Encode文字
function encodeStr(str){
	var commentJson = JSON.stringify(str);
	return commentJson.substring(1, commentJson.length - 1);
}
// 最大文字数チェック
function cutEncodeString(str,legnth){
	var commentJson = encodeStr(str);
    // delete quota
    commentJson = commentJson.substring(0, legnth);
    var lastStep = commentJson[commentJson.length - 1];
    if (lastStep == '\\') commentJson = commentJson.substring(0,legnth - 1);
 	return  decodeString(commentJson);
}
// Decode文字
function decodeString(str){
	return JSON.parse('"' + str + '"');
}
// メモ長幅変更
function resizeTextarea(el){
	var element = el.get(0);
	var gantContent = $("#gantt30 .k-gantt-treelist .k-grid-content");
	var offset = element.offsetHeight - element.clientHeight;
	var offTop = el.offset().top;
	el.css('height', 'auto');
	var ht = element.scrollHeight + offset;
	el.css('height', ht);
}
// 2018/08/08 メモ追加　by　zy END
// 2018/09/05 新規の展開保持状態　by zy BEGIN
function beforeSave(){
	// 2018/11/15 17.プロジェクト管理を開いたときにタスクが開いた状態から始まる by zy BEGIN
	//PageInfo.expandArr = getExpendSet();
	// 2018/11/15 17.プロジェクト管理を開いたときにタスクが開いた状態から始まる by zy END
}
function getExpendSet(){
	var gantt = $("#gantt30").data("kendoGantt");
	var childTasks = gantt.dataSource.taskAllChildren();
	var taskSet = {};
	var taskArr = [];
	for (var i = 0 ; i < childTasks.length ; i++) {
    	var task = childTasks[i];
    	if (!task.expanded && !(task.dataid in taskSet)) {
    		taskSet[task.dataid] = true;
    		taskArr.push(task.dataid);
    	}
    }
	return taskArr;
}
// 2018/09/05 新規の展開保持状態　by zy END
// 2018/11/15 顾客最后操作的内容，自动记录 by zy BEGIN
// COOKIEレイアウト情報取得
function getCookieInfo(){
	var cookieJson = $("#hidCookieJson").val();
	var cookie = JSON.parse(cookieJson);
	return cookie;
}
// 指定フィルート情報設定
function getColumns(){
	var hidField = $("input[id$=hidfieldSet]").val();
	var fieldArr = JSON.parse(hidField);
	// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy BEGIN
	var newArr = [];
	// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy END
	for (var i = 0 ; i < fieldArr.length ; i++) {
		var field = fieldArr[i];
		// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy BEGIN
		if (field == null) continue;
		// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy END
		if ("editor" in field) {
			field.editor = eval(field.editor);
		}
		// 2020/09/30 任意行を非表示にする。もしくはフィルター機能。 by zy BEGIN
		if (field.hidden) field.width = -1;
		// 2020/09/30 任意行を非表示にする。もしくはフィルター機能。 by zy END
		// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy BEGIN
		newArr.push(field);
		// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy END
	}
	// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy BEGIN
	// 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy BEGIN
	chagneColumnFormat(newArr);
	// 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy END
	return newArr;
	// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy END
}
// プロジェックト表示タイプ
function getGanttType(){
	var ganttType = getJsonStr($("#hidGanttType").val());
	return ganttType;
}
function getJsonStr(str){
	return str.replace(/"|'|{|}/g,'');
}
function bindQuotaChange(){
	if (!window.hasOwnProperty("J_SetObserver")) {
		var settimeout;
		var callback = function(mutationList, observer){
			// 該当Listen項目チェック
			var firstMutation = mutationList[0];
			// フィルート横幅自設定
			if (firstMutation.attributeName == 'style') {
				if (settimeout) clearTimeout(settimeout)
				settimeout = setTimeout(refreshField,500);
			// フィルート並べ設定
			} else if (firstMutation.attributeName == 'data-dir') {
				if (settimeout) clearTimeout(settimeout)
				settimeout = setTimeout(refreshSortField,500);
			}
		};
		/* 2020/09/30 8271 bug fixed by zy BEGIN
		var callback1 = function(mutationList, observer){
			if (settimeout) clearTimeout(settimeout)
			settimeout = setTimeout(saveCookieProject,500);
		}*/// 2020/09/30 8271 bug fixed by zy END
		var observerOptions = {childList: false, attributes:true, subtree: true, attributeFilter: ["style","data-dir"]};
		/* 2020/09/30 8271 bug fixed by zy BEGIN
		var obResizeOptions = {childList: false, attributes:true, subtree: false, attributeFilter: ["style"]};
		*/// 2020/09/30 8271 bug fixed by zy END
		// 画面設定
		var $thead = $("#gantt30 div.k-gantt-treelist .k-grid-header table");
		if($thead.length == 0) return;
		if (window.hasOwnProperty("J_SetObserver")) window.J_SetObserver.disconnect();
		window.J_SetObserver = new MutationObserver(callback);
		window.J_SetObserver.observe($thead.get(0), observerOptions);
		/* 2020/09/30 8271 bug fixed by zy BEGIN
		// 画面設定
		var $wrap = $("#gantt30 div.k-gantt-treelist");
		if($wrap.length == 0) return;
		if (window.hasOwnProperty("J_WrapObserver")) window.J_WrapObserver.disconnect();
		window.J_WrapObserver = new MutationObserver(callback1);
		window.J_WrapObserver.observe($wrap.get(0), obResizeOptions); 
		*/// 2020/09/30 8271 bug fixed by zy END
	}
}
function refreshField(){
	var fiedArr = [];
	// 2020/09/30 任意行を非表示にする。もしくはフィルター機能。 by zy BEGIN
	var gantt = $("#gantt30").getKendoGantt(),gantMap = {};
	gantt.columns.forEach(function(col){
		gantMap[col.field] = col;
	});
	$("#gantt30 div.k-gantt-treelist .k-grid-header table th").each(function(idx){
		var field = $(this).data("field");
		if (field != undefined) {
			var hidFlg = (field in gantMap) ? gantMap[field].hidden : false;
			fiedArr.push({field:field,width:kendo.parseInt($(this).outerWidth()),hidden : hidFlg});
		}
	});
	// 2020/09/30 任意行を非表示にする。もしくはフィルター機能。 by zy END
	taskDataSource(false,FUNTYPE.SAVECOOKIEFD,fiedArr);
}
function refreshSortField(){
	var gantt = $("#gantt30").data("kendoGantt");
	var sort = gantt.dataSource.sort();
	$("[id$=hidSortSet]").val(JSON.stringify(sort));
	taskDataSource(false,FUNTYPE.SAVECOOKIESORT,sort);
}
// 該当プロジェックトのCOOKIE保存
function saveCookieProject(){
	// 2020/09/30 任意行を非表示にする。もしくはフィルター機能。 by zy BEGIN
	var gantt = $("#gantt30").getKendoGantt();
	// 画面読込チェック
	if (gantt.dataSource._requestInProgress) return;
	// 2020/09/30 任意行を非表示にする。もしくはフィルター機能。 by zy END
	var treeList = $("#gantt30 div.k-gantt-treelist");
	if (treeList.length > 0) {
		var sibearWd = $("#sibear").outerWidth();
		// 2020/09/30 8271 bug fixed by zy BEGIN
		var ganttWd = gantt.options.listWidth;
		//treeList.outerWidth();
		// 2020/09/30 8271 bug fixed by zy END
		var cookie = {
			tWd:sibearWd,
			dWd:ganttWd,
		};
	   	taskDataSource(false,FUNTYPE.SAVECOOKIELY,cookie);
   	}
}
function changeGanttType(views){
	// 指定タイプ
	var ganttType = getGanttType();
	// 該当タイプ変更
	for (var i = 0 ; i < views.length; i++) {
		var curType = views[i];
		if (typeof curType == "string" && curType == ganttType) {
			views[i] = {type:curType,selected:true};
		// 2020/09/30 8286 bug fixed by zy BEGIN
		} else if (typeof curType == "object") {
			views[i].selected = curType.type == ganttType;
		// 2020/09/30 8286 bug fixed by zy END
		}
	}
}
function onNavigate(e){
	// 該当プロジェックトタイプのCOOKIE保存
	saveCookieType(e.view);
	// 2020/09/30 8286 bug fixed by zy BEGIN
	changeGanttType(e.sender.options.views);
	// 2020/09/30 8286 bug fixed by zy END
	// 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy BEGIN
	// 該当画面タイプ変更監視する
	changeFieldFormat();
	// 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy END
	// 2020/09/30 任意行を非表示にする。もしくはフィルター機能。 by zy BEGIN
	// 2020/09/30 8269 bug fixed by zy BEGIN
	var ganttNew = $("#ganttNew").getKendoGantt();
	if (ganttNew) ganttNew.view(e.view);
	// 2020/09/30 8269 bug fixed by zy END
	// 2020/09/30 任意行を非表示にする。もしくはフィルター機能。 by zy END
}
// 該当プロジェックトタイプのCOOKIE保存
function saveCookieType(type){
	// 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy BEGIN
	$("#hidGanttType").val(type);
	// 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy END
	taskDataSource(false,FUNTYPE.SAVECOOKIEPT,type);
}
// 2018/11/15 顾客最后操作的内容，自动记录 by zy END
// 2018/11/15 17.プロジェクト管理を開いたときにタスクが開いた状態から始まる by zy BEGIN
// 2020/10/30 8289 bug fixed by zy BEGIN
function initLastSetting(el){
// 2020/10/30 8289 bug fixed by zy END
	// 展開状態保存初期化
	bindGridCell();
	// 予定タスク状態保持
	checkTaskView();
	// レイアウトチェック
	// 2018/11/21 関連書類の紐付け by cxw BEGIN
	setTimeout(function(){bindQuotaChange();
		// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
		initUploadComp(dropUploadEvent,el);
		// 2020/09/31 画面スクロールを２分割したい by zy END
		// 2019/01/15 SCROLLエラー修正　by zy BEGIN
		bindScroll();
		// 2019/01/15 SCROLLエラー修正　by zy END
	},200);
	// 2018/11/21 関連書類の紐付け by cxw END
}
// タスク並べ替え刷新
function refreshOrder(){
	if (window.hasOwnProperty("RefreshStock")) return;
	var gantt = $("#gantt30").data("kendoGantt");
	var trees = gantt.dataSource.taskTree();
	var treeMap = new Map();
	if (trees.length > 0) {
		trees.forEach(function(task){
			if (!treeMap.containsKey(task.parentId)) treeMap.put(task.parentId,0);
			var orgOrder = task.orderId;
			task.orderId = treeMap.get(task.parentId);
			if (orgOrder != task.orderId) {
				var updateObj = getUpdateObj(task);
				taskDataSource(false,FUNTYPE.DTUPDATE,updateObj);
			}
			treeMap.put(task.parentId,task.orderId + 1);
		});
	}
	// 機能ロック
	window.RefreshStock = true;
}
// 予定タスク状態保持
function checkTaskView(){
	if (getTaskViewFlag()) {
		leadTaskShow();
	}
}
// 担当者保持
function userProjectFilter(){
	// COOKIE担当者情報
	var userId = $("#hidTaskUser").val();
	if (userId != "") userId = getJsonStr(userId);
	var down = $("[id$=userDropDown]").data("kendoDropDownList");
	// 既存担当者判定
	var selId = down.value();
	var datas = getSourceData(down.options.dataValueField,userId,down.dataSource.data());
	if (datas != undefined && datas.length > 0) selId = userId;
	if (selId != down.value()) {
		down.value(selId);
		down.trigger("change");
	}
}
// 該当データ指定条件項目取得
function getSourceData(fieldType,fieldValue,data){
	if (data != undefined) {
		var res = $.grep(data, function (d) {
			// 2018/11/30 行動を範囲選択してコピー by cxw BEGIN
			if (typeof fieldValue == 'object') return $.inArray(d[fieldType],fieldValue) >= 0 ;
			else return d[fieldType] == fieldValue;
			// 2018/11/30 行動を範囲選択してコピー by cxw END
		});
		return res;
	}
}
// 展開状態保存初期化
function bindGridCell(){
   var gridCells = $("td[role=gridcell]>span.k-icon:not([bind])").filter(".k-i-collapse,.k-i-expand");
   gridCells.bind("click",changeCellStatus);
   gridCells.attr("bind","");
}
// 展開状態保存
function changeCellStatus(){
	var $target = $(event.target);
	var curRow = $target.closest("tr[role=row]");
	var dataId = curRow.attr("data-uid");
	var gantt = $("#gantt30").data("kendoGantt");
	var nextTask = gantt.dataSource.getByUid(dataId);
	var expandFlag = false;
	if ($target.hasClass("k-i-collapse")) expandFlag = true;
	else if ($target.hasClass("k-i-expand")) expandFlag = false;
	var updateObj = getUpdateObj(nextTask);
	updateObj.Expanded = !expandFlag;
	taskDataSource(false,FUNTYPE.DTUPDATE,updateObj);
}
function getUpdateObj(task, flag){
	var curTaskObj = {
		OrderID:task.orderId
		,dataid:task.dataid
		,Summary:task.summary
		,comment:task.comment
		,PercentComplete:task.percentComplete
		,Expanded:task.expanded
		// 2018/11/30 行動を範囲選択してコピー。 by cxw ENGIN
		,Title: task.title
		,userid:task.userid
		// 2018/11/30 行動を範囲選択してコピー。 by cxw END
		// 2019/1/15 プロジェックト機能のPriority(重要度）列を追加 by cxw BEGIN
		,importance: task.importance
		// 2019/1/15 プロジェックト機能のPriority(重要度）列を追加 by cxw END
		// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy BEGIN 
		,depart:task.depart
		// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy END 
		// 2020/10/31 担当者を複数設定できるように by zy BEGIN
		,userids:task.userids
		// 2020/10/31 担当者を複数設定できるように by zy END
		// 2020/10/31 2.07.取引先の紐付け by zy BEGIN
		,accid:task.account
		// 2020/10/31 2.07.取引先の紐付け by zy END
  	};
  	var parentDataId = null;
  	if (task.parentId != undefined && task.parentId != "" && task.parentId != null) {
  		var item = filterSameId(task.parentId,'id', $("#gantt30").data("kendoGantt").dataSource.data());
  		if (item != null) {
  			parentDataId = item.dataid;
  		}
  	}
  	curTaskObj.parentDataId = parentDataId;
  	// 精度重新计算
  	var endDt = kendo.toString(task.end,JINYACONNECT.DateTmFormat);
    if (endDt != null) curTaskObj.EndDt = kendo.parseDate(endDt,JINYACONNECT.DateTmFormat).getTime();
    var startDt = kendo.toString(task.start,JINYACONNECT.DateTmFormat);
    if (startDt != null) curTaskObj.StartDt = kendo.parseDate(startDt,JINYACONNECT.DateTmFormat).getTime();
    // 2018/11/30 行動を範囲選択してコピー。 by cxw ENGIN
    if (PageInfo.processType == 'duechange' || flag) {
		var dueEndDt = kendo.toString(task.dueEnd,JINYACONNECT.DateTmFormat);
		if (dueEndDt != null) curTaskObj.dueEnd = kendo.parseDate(dueEndDt,JINYACONNECT.DateTmFormat).getTime();
		var dueStartDt = kendo.toString(task.dueStart,JINYACONNECT.DateTmFormat);
		if (dueStartDt != null) curTaskObj.dueStart = kendo.parseDate(dueStartDt,JINYACONNECT.DateTmFormat).getTime();
		flag || (delete PageInfo.processType);
	}
	// 2018/11/30 行動を範囲選択してコピー。 by cxw END
	return curTaskObj;
}
// 2018/11/15 17.プロジェクト管理を開いたときにタスクが開いた状態から始まる by zy END
// 2018/11/15 8.予定と実績を表示させる、させないの切り替え by zy BEGIN
// 予定タスク表示
function leadTaskShow(){
	setTimeout(function(){
		$("#leadView").addClass("k-state-active");
		var gantt = $("#gantt30").data("kendoGantt");
		var ganttview = gantt.view();
		// 清空父级内的数据
		$(".k-gantt-tasks tr:has(div.k-task:not(.k-task-single)) .j-task-wrap").remove();
		var ds = gantt.dataSource;
		$("table.k-gantt-tasks tr").each(function(){
			var curTd = $("td",this);
			var uid = $("div.k-task.k-task-single[data-uid]",this).attr("data-uid");
			var item = ds.getByUid(uid);
			if (item == undefined) return true;
			if (item.dueStart != undefined) {
				var orderTask = {start:kendo.parseDate(item.dueStart),end:kendo.parseDate(item.dueEnd)};
				var taskPos = ganttview._taskPosition(orderTask);
				var div = $("<div class='j-task-wrap'><div class='j-task'></div></div>");
				if (curTd.find(".j-task-wrap").length == 0) curTd.append(div);
				else div = curTd.find(".j-task-wrap");
				div.css({left:taskPos.left});
				div.find(".j-task").css({width:taskPos.width});
			}
		});
	});
}
// 予定タスク非表示
function leadTaskHide(){
	$(".j-task-wrap").remove();
}
// 予定と実績状態保存
// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
function saveCookieTaskView(taskViewFlag,callback){
	if (taskViewFlag != undefined) $("#hidTaskView").val(taskViewFlag);
	else taskViewFlag = getTaskViewFlag();
	var obj = {
		taskview:taskViewFlag,
		split:isSplitMode(),
		pubflg:$("#publicMode").hasClass("selected")
	}
	taskDataSource(false,FUNTYPE.SAVECOOKIEVIEW,obj,false,callback);
	// 2020/09/31 画面スクロールを２分割したい by zy END
}
// 予定と実績状態取得
function getTaskViewFlag(){
	var viewFlag = $("#hidTaskView").val();
	var planName = $("#projectPlanName").text();
	if ((viewFlag == "" || viewFlag == "true") && planName != "") return true;
	return false;
}
function afterTaskUpdate(){
	if (window.TaskReadTimeId) clearTimeout(window.TaskReadTimeId);
	window.TaskReadTimeId = setTimeout(function(){
		var gantt = $("#gantt30").data("kendoGantt");
		gantt.dataSource.read();
	},200);
}
// 
function taskViewFun() {
	var projectPaln = $("#projectPlanName").text();
	if (projectPaln == "") return showTaskBaseWin();
	return chgLeadTaskStatus();
}
// 2020/08/31 バージョン管理。保存したらバージョン1、2と保存して後から呼び出せる機能、もしくはexcel出力 できるように。 by zy BEGIN
// EXCELエクスポート
function excelExport(){
	// 初期化
	var div = $("<div/>"),gantt = $("#gantt30").data("kendoGantt");
	// 明細、表示列、明細行CSS、表示列情報
	var datas = [],columns = [],rows = [],
	// 2020/09/30 任意行を非表示にする。もしくはフィルター機能。 by zy BEGIN
	fieldArr = gantt.options.columns;
	fieldArr = fieldArr.filter(function(field){
		var f = $.grep(gantt.columns,function(e){
			return e.field == field.field;
		})[0];
		if (f != undefined) {
			field.hidden = f.hidden;
			field.width = f.width;
		}
		return !field.hidden;
	})
	// 2020/09/30 任意行を非表示にする。もしくはフィルター機能。 by zy END
	// 表示列横幅設定
	fieldArr.forEach(function(field,idx){ 
		// 2020/09/30 任意行を非表示にする。もしくはフィルター機能。 by zy BEGIN
		if (field.field != "icon") columns.push({width:field.width});
		// 2020/09/30 任意行を非表示にする。もしくはフィルター機能。 by zy END
	});
	// 2020/10/30 2.14.特定日のマーキング機能、スケジュールのなかでポイントをうち、右の表示マークをつける機能 by zy BEGIN
	// マーキング最後列追加
	columns.push({width:200});
	// 2020/10/30 2.14.特定日のマーキング機能、スケジュールのなかでポイントをうち、右の表示マークをつける機能 by zy END
	// 明細内容作成
	gantt.dataSource.taskTree().forEach(function(task){
		// EXCEL内容作成
		convertTask(fieldArr,task,datas,rows);
		// 明細不展開
		if (!task.expanded) {
			// 不展開の子明細取得
			var taskChildren = gantt.dataSource.taskAllChildren(task);
			// 父明細の情報設定
			var map = new Map();
			map.set(task.id,task);
			// 不展開の子明細WBS対応
			designationKeep(taskChildren,map);
			// 不展開の子明細EXCEL内容作成
			taskChildren.forEach(function(taskObj){
				convertTask(fieldArr,taskObj,datas,rows);
			});
		}
	});
	// EXCEL内容作成
	function convertTask(fieldArr,task,datas,rows){
		// 明細行
		var obj = {};
		// 書式指定
		rows.push({cells:[{textAlign: "left"}]});
		// 表示列
		fieldArr.forEach(function(field){ 
			// 2020/09/30 任意行を非表示にする。もしくはフィルター機能。 by zy BEGIN
			// 機能列以外
			if (field.field != "icon") {
			// 2020/09/30 任意行を非表示にする。もしくはフィルター機能。 by zy END
				// 表題
				var fieldName = field.field;
				// ユーザー対応
				if (fieldName == 'userid') fieldName = 'assigned';
				// 2020/10/31 2.07.取引先の紐付け by zy BEGIN
				else if (fieldName == 'account') fieldName = 'accname';
				// 2020/10/31 2.07.取引先の紐付け by zy END
				// 表示値
				var taskValue = task[fieldName];
				// 特殊対応
				if (fieldName == 'title' || fieldName == 'wbs') {
					var befStr = "";
					(task.wbs + "").split(".").forEach(function(t,idx){
						if (idx > 0 ) befStr += '　';
					});
					taskValue = befStr + taskValue
				// 状態対応
				} else if (fieldName == 'warning'){
					if (taskValue == "4") taskValue = ''
					else if (taskValue == "2") taskValue = 'リスクあり';
					else if (taskValue == "3") taskValue = '遅延';
					else if (taskValue =='1') taskValue = '完了';
				// 書式対応
				} else if( 'format' in field) {
					taskValue = kendo.format(field.format,taskValue);
				// 2020/10/31 担当者を複数設定できるように by zy BEGIN
				// 複数ユーザー対応
				} else if (fieldName == 'assigned') {
					var assigns = task.assigneds || "";
					if (assigns != "") taskValue += ',' + assigns;
				}
				// 2020/10/31 担当者を複数設定できるように by zy END
				obj[field.title] = taskValue;
			}
		});
		// 2020/10/30 2.14.特定日のマーキング機能、スケジュールのなかでポイントをうち、右の表示マークをつける機能 by zy BEGIN
		// マーキング最後列追加
		var markInfo = "";
		if (task.marks) {
			var marks = JSON.parse(htmlDecode(task.marks));
			if (marks.length > 0 ) {
				marks.sort(function(a,b){return a.mdate < b.mdate ? -1 : 0;});
				marks.forEach(function(msg){
					markInfo += (msg.mark || "") + msg.mdate + CUS_LABEL.blankTxt + msg.mdesc + "<br>" ;
				})
			}
		} 
		obj[CUS_LABEL.markTxt] = markInfo;
		// 2020/10/30 2.14.特定日のマーキング機能、スケジュールのなかでポイントをうち、右の表示マークをつける機能 by zy END
		datas.push(obj);
	}
	//　該当日付書式、該当プロジェックト、シート名
	var dtFormat = kendo.toString(new Date(),'yyyyMMddHHmmss'),
		userDrop = $("[id$=userDropProjects]").getKendoDropDownList(), 
			sheetName = userDrop ? userDrop.text() : dtFormat; 
	//　EXCELツール作成
	var spreadsheet = div.kendoSpreadsheet({
		excelExport: function(e) {
			e.workbook.fileName = $("#projectTitle").text().replaceAll(/[\r\n\t]/g,'') + '_' + dtFormat + '.xlsx';
			// 2020/10/30 2.14.特定日のマーキング機能、スケジュールのなかでポイントをうち、右の表示マークをつける機能 by zy BEGIN
			var sheet = e.workbook.sheets[0];
			for (var rowIndex = 0; rowIndex < sheet.rows.length; rowIndex++) {
              var row = sheet.rows[rowIndex];
              for (var cellIndex = 0; cellIndex < row.cells.length; cellIndex ++) {              
                var cell = row.cells[cellIndex];
                if(cell.value && cell.value.toString().indexOf("<br>") >= 0){
                	var begIdx = cell.index;
                	var arr = cell.value.split('<br>');
                	for (var i = 1; i < arr.length ; i++) {
                		var newCell = $.extend({},cell);
                		newCell.value = arr[i];
                		begIdx ++;
                		newCell.index = begIdx;
                		row.cells.push(newCell);
                		if (sheet.columns.length <= begIdx) {
                			sheet.columns.push({index:begIdx,width:200});
                		}
                	}
                	cell.value = arr[0];
                }
              }
            }
            // 2020/10/30 2.14.特定日のマーキング機能、スケジュールのなかでポイントをうち、右の表示マークをつける機能 by zy END
		},
		sheets: [{
			name: sheetName,
			dataSource: {
				data: datas,
			},
			rows: rows,
			columns:columns
		}]
	}).getKendoSpreadsheet();
	// EXCELエクスポート
    spreadsheet.saveAsExcel();
}
// 2020/08/31 バージョン管理。保存したらバージョン1、2と保存して後から呼び出せる機能、もしくはexcel出力 できるように。 by zy END
function hideConfirm(){
	$(".winScan").remove();
	deleteSelectSec();
}
function showTaskBaseWin(){
	var confirm = $("#confirmWin").text();
	var $confirmWin = $(confirm);
	$("body").append($confirmWin);
	var label = '基準 ' + kendo.toString(new Date(),JINYACONNECT.DateFormat);
	$confirmWin.find("#baseName").val(label);
}
function saveBasePlan(){
	var baseName = $("#baseName").val();
	if (baseName == "") return alert("基準名不能空値！");
	var proejctId = $("#hidMainProjectId").val();
	$("input[id$=hidProjectId]").val(proejctId);
	$("input[id$=hidPlanName]").val(baseName);
	saveProjectPlan();
}
function deleteBasePlan(){
	var planName = $("#projectPlanName").text();
	if (!confirm("本当に '" + planName + "' 基準の情報を{!$Label.MSG_9103}")) return;
	var proejctId = $("#hidMainProjectId").val();
	$("input[id$=hidProjectId]").val(proejctId);
	$("input[id$=hidPlanName]").val('');
	saveProjectPlan();
}
function deleteSelectSec(){
	$("#leadView").removeClass("k-state-active");
}
function chgLeadTaskStatus(){
	if ($(".j-task-wrap").length > 0) {
		// 予定タスク非表示
		leadTaskHide();
		deleteSelectSec();
		saveCookieTaskView(false);
	} else {
		// 予定タスク表示
		leadTaskShow();
		saveCookieTaskView(true);
	}
}
// 2018/11/15 8.予定と実績を表示させる、させないの切り替え by zy END
// 2018/11/15 14.タスクの移動がドラッグでできるが、望むところに移動せず、動かすつもりのないタスクも動 by zy BEGIN
function processSaveType(updValue,dataid){
	if (updValue.hasOwnProperty("dueStart") || updValue.hasOwnProperty("dueEnd")) PageInfo.processType = 'duechange';
	holdPageDataId(dataid);
}
function moveCurrentTask(){
	if (PageInfo.dataid){
		// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
		// var gantt = $("#gantt30").data("kendoGantt");
		var gantt = getActionGantt();
		// 2020/09/31 画面スクロールを２分割したい by zy END
		var ganttDs = gantt.dataSource;
		// 2018/11/30 行動を範囲選択してコピー by cxw BEGIN
		var item = filterSameId(PageInfo.dataid[0],'dataid',ganttDs.data());
		// 2018/11/30 行動を範囲選択してコピー by cxw END
		if (item) {
			var parArr = getAllParentArr(item,ganttDs);
			if (parArr.length > 0) {
				for (var i = 0 ; i < parArr.length ; i++) {
					var parentTask = filterSameId(parArr[i],'dataid',ganttDs.data());
					parentTask.set("expanded", true);
					var updateObj = getUpdateObj(parentTask);
					taskDataSource(false,FUNTYPE.DTUPDATE,updateObj);
				}
			}
			// 2018/11/30 行動を範囲選択してコピー by cxw BEGIN
			/*
			var curRow = $("tr[data-uid='" + item.uid + "']");
			gantt.select("tr:eq(" + curRow.index() + ")");
			*/
			// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
			muliteSelect.call(gantt);
			// 2020/09/31 画面スクロールを２分割したい by zy END
			// 2018/11/30 行動を範囲選択してコピー by cxw END
		}
		delete PageInfo.dataid;
	}
}
// 2018/11/15 14.タスクの移動がドラッグでできるが、望むところに移動せず、動かすつもりのないタスクも動 by zy BEGIN

// 2018/11/30 日付を入力する際、開始を編集する際に終了が１ヶ月後など期間を指定できるといい by cxw BEGIN
function dateComponentCustomization(td, data){
	var rangeValue = function(field, model){
		var value = "";
		if(field == "start" || field == "end"){
			value = kendo.toString(model["start"], JINYACONNECT.DateTmFormat) + " - " + kendo.toString(model["end"], JINYACONNECT.DateTmFormat);
		}else if(field == "dueStart" || field == "dueEnd"){
			value = kendo.toString(model["dueStart"], JINYACONNECT.DateTmFormat) + " - " + kendo.toString(model["dueEnd"], JINYACONNECT.DateTmFormat);
		}
		return value;
	};
	var $input = $('<input type="text"/>').attr("name", data.field).appendTo(td);
	// 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy BEGIN
	var dateIcon;
	if (!dateFormatChange()){
		$input = $input.kendoDateTimePicker({
			format: data.format,
			value: data.model[data.field]
		}).data("kendoDateTimePicker");
		dateIcon = $input._dateIcon.unbind("click");
	} else {
		$input = $input.kendoDatePicker({
			format: data.format,
			value: data.model[data.field]
		}).data("kendoDatePicker");	
		dateIcon = $input._dateIcon.unbind("click").find("span.k-i-calendar");
	} 
	// 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy END
	var isOpen, $other = data.field == "start" || data.field == "dueStart" ? td.next() : td.prev();
	// 2020/10/31 8369 bug fixed by zy BEGIN
	var gantt = getActionGantt();
	// 2020/10/31 8369 bug fixed by zy END
	var updateTask = gantt._updateTask;	
	gantt.updateTask_flag || (gantt._updateTask = function(e, t){
			if(this._updateValue) $.extend(t, this._updateValue),this._updateValue = null;
			return updateTask.call(this, e, t);
		}, gantt.updateTask_flag = true);
	
	dateIcon.bind("click", function(){
		var editableEnd = gantt.list.editable.end;
		$input.close("time");
		if(isOpen){
			$("div.layui-laydate.layui-laydate-range").remove();
			isOpen = false;
			return;
		}
		
		gantt.list.editable.end = function(){
			if(!isOpen) return editableEnd.call(this);
			return false;
		};
		
		laydate.render({
			elem: $input.element[0]
			,type: "date"
			,range: true
			,format: JINYACONNECT.DateTmFormat
			,show: true
			,lang: "ja"
			,isInitValue: false
			,trigger: 'no'
			,value: rangeValue(data.field, data.model)
			,closeStop: this
			,btns: ['confirm']
			,done: function(value, start_date, end_date){
				isOpen = false;
				if(value){
					gantt._updateValue = {};
					var startDt = newDate(start_date);
					var endDt = newDate(end_date);
					// 特殊处理
					if(data.field == "start" || data.field == "dueStart"){
						$input._change(startDt);
						data.model[data.field] = startDt;
						gantt._updateValue[data.field] = startDt;
						data.model[data.field == "start" ? "end" : "dueEnd"] = endDt;
						gantt._updateValue[data.field == "start" ? "end" : "dueEnd"] = endDt;
					}else{
						$input._change(endDt);
						data.model[data.field] = endDt;
						gantt._updateValue[data.field] = endDt;
						data.model[data.field == "end" ? "start" : "dueStart"] = startDt;
						gantt._updateValue[data.field == "end" ? "start" : "dueStart"] = startDt;
					}
				}
				if(gantt.list.editable.end()) gantt.list._closeCell();
				return false;
			}
			,ready: function(){
				isOpen = true;
			}
			,close: function(){
				if(isOpen){
					isOpen = false;
					if(gantt.list.editable.end()) gantt.list._closeCell();
				}
			}
		});
		$input.element.focus();
	});
	// 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy BEGIN
	if ($input._timeIcon)
		$input._timeIcon.unbind("click").bind("click", function(){
			$input.toggle("time");
			$input.element.focus();
		});
	// 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy END
}

function newDate(e) {
	return e = e || {},
	new Date(e.year || 1,e.month ? e.month - 1 : 0,e.date || 1,e.hours || 0,e.minutes || 0,e.seconds || 0);
}
// 2018/11/30 日付を入力する際、開始を編集する際に終了が１ヶ月後など期間を指定できるといい by cxw END
// 2018/11/30 関連書類の紐付け by cxw BEGIN
// 初始化上传组件
// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
// 2020/10/30 8289 bug fixed by zy BEGIN
function initUploadComp(callback,ganttTool){
// 2020/10/30 8289 bug fixed by zy END
// 2020/09/31 画面スクロールを２分割したい by zy END
	var table = $("#gantt30 .k-grid-content:eq(0) table");
	// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
	if (ganttTool != undefined) table = ganttTool.list.content;
	// 2020/09/31 画面スクロールを２分割したい by zy END
	if(!table.length || table.data("isBindDropEvent")) {
		// 2020/10/30 2.14.特定日のマーキング機能、スケジュールのなかでポイントをうち、右の表示マークをつける機能 by zy BEGIN
		ganttTool.options.readMessage.call(ganttTool);
		// 2020/10/30 2.14.特定日のマーキング機能、スケジュールのなかでポイントをうち、右の表示マークをつける機能 by zy END
		return;
	}
	var dropbox = table[0];
	bindDropEvent(dropbox, callback);
	bindAttachmentHoverEvent(table);
	// 2018/12/30 拡大機能[+/-]ボタンにより、ZOOMのバーにより、全体はズーム機能 by cxw BEGIN
	// 2020/10/30 8289 bug fixed by zy BEGIN
	changeZoomStatus.call(ganttTool);
	// 2020/10/30 8289 bug fixed by zy END
	// 2018/12/30 拡大機能[+/-]ボタンにより、ZOOMのバーにより、全体はズーム機能 by cxw END
	table.data("isBindDropEvent", true);
}

function bindDropEvent(dom, callback){
	dom.addEventListener("dragenter", function(e){
	    e.stopPropagation();
	    e.preventDefault();
	    callback && callback("dragenter", e);
	}, false);
	
	dom.addEventListener("dragover", function(e){
	    e.stopPropagation();
	    e.preventDefault();
	    callback && callback("dragover", e);
	}, false);
	
	dom.addEventListener("drop", function(e){
	    e.stopPropagation();
	    e.preventDefault();
	    callback && callback("drop", e);
	}, false);
}

// 文件拖动回调函数
function dropUploadEvent(type, event){
	if(type == "drop"){	
		// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
		// var gantt = $("#gantt30").data("kendoGantt");
		var gantt = getActionGantt();
		// 2020/09/31 画面スクロールを２分割したい by zy END
		var files = event.dataTransfer.files;
		if(files.length > 0){
			var dataItem = gantt.dataItem(gantt.select());
			readfiles(files, 0, dataItem.eventid, function(){
				setAttachmentIcon(gantt.select(), dataItem.eventid);
			});
		}
	}else if(type == "dragenter"){
		var tr = $(event.target).parents("tr");
		// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
		// var gantt = $("#gantt30").data("kendoGantt");
		var $gantt = tr.closest(".k-gantt"),gantt = $gantt.getKendoGantt();
		// 2020/09/31 画面スクロールを２分割したい by zy END
		gantt.select(tr);	
	}
}

// 上传附件
var sfdcHostName = UserContext.salesforceURL;
function readfiles(files,lineNum, parid, callback) { 

	if(files.length > 1) {
		alert('ファイルは複数同時にアップロードすることができません. ファイルが1つずつアップロードしてください。');
		return;
	}
	var limitSize = 1024 * 1024 * 25;
	// 限制size
	if(files.length > 0 && files[0].size > limitSize){			 
		alert("ファイルが大きすぎます。25MB以下のファイルを指定してください。");
 		return;	 		      
	}
	AttachmentUtil.LOADING.open();
	for (var i = 0; i < files.length; i++) {
       	var parentId = parid;
       	var namespace = "{!JSENCODE($Setup.CommDefine__c.ps__AppNS__c)}";
       	namespace = (namespace.length == 0 ? '' : namespace.slice(0, -2)+'/');
		var sfdcurl = sfdcHostName+'/services/apexrest/'+namespace+'DragAndDrop/v1?FileName='+encodeURIComponent(files[i].name)+'&parId='+parentId+'&lineNum='+lineNum+'&del=false';
      	var xhr;
      	if (window.ActiveXObject) {
      		xhr = new ActiveXObject('Microsoft.XMLHTTP')
      	} else {
      		if(window.Sarissa && Sarissa.originalXMLHttpRequest) {
      			xhr = new Sarissa.originalXMLHttpRequest();
      		} else {
      			xhr = new XMLHttpRequest();
      		}
      	}
		xhr.onreadystatechange=function() {
			if (xhr.readyState === 4) {
				// SUCCESS
				if (xhr.status === 200) {
					var rs = JSON.parse(xhr.responseText);
 					callback && callback();
 					AttachmentUtil.LOADING.close();
				} 
				// ERROR
				else {
					alert("{!$Label.ERR_0003}");
					AttachmentUtil.LOADING.close();
				}
			}
		}
		xhr.open('POST','/services/proxy' );
		xhr.setRequestHeader("Authorization","OAuth {!GETSESSIONID()}");
		xhr.setRequestHeader('SalesforceProxy-Endpoint', sfdcurl);
		xhr.setRequestHeader('X-User-Agent', 'DragAndDropAPI v1.0');
		xhr.send(files[i]);
    }
}

// 设置附件图标
function setAttachmentIcon(tr, eventid, del){
	var gantt = $("#gantt30").data("kendoGantt");
	var dataItem = gantt.dataItem(tr);
	// 2020/09/30 任意行を非表示にする。もしくはフィルター機能。 by zy BEGIN
	var iconIdx = getFieldIndexMap.call(gantt)['icon'];
	var td = $("td:eq(" + iconIdx + ")>span", tr);
	// 2020/09/30 任意行を非表示にする。もしくはフィルター機能。 by zy END
	var attachmentSpan = td.children("span[attachment=true]");
	if(attachmentSpan.length){
		if(del){
			attachmentSpan.remove();
			if(dataItem) dataItem["isExistAtt"] = false;
		}
		return;
	}
	td.append('<span class="k-icon k-i-attachment-45" style="margin-right: 2px;cursor: pointer;" attachment="true" eventId="' + eventid + '"></span>');
	if(dataItem) dataItem["isExistAtt"] = true;
}

// 绑定附件图标悬停事件
function bindAttachmentHoverEvent(table){
	table.delegate("span[attachment=true]", "click", function(event){
		var eventid = $(this).attr("eventid");
		if(!eventid) return;
		var position = $(this).position();
		var width = $("#warpBox").children("div:lt(1)").width() + 7;
		AttachmentUtil.Tips.closeTips();
		AttachmentUtil.Tips.openTips(position.left + 30 + width, position.top + 110, AttachmentUtil.AttachmentMap.get(eventid), eventid);
		getAttachment(function(result){
			AttachmentUtil.AttachmentMap.set(eventid, result);
			if(!$("#attachmentTips").length) return;
			AttachmentUtil.Tips.openTips(position.left + 30 + width, position.top + 110, result, eventid);
		}, eventid);
	});
}

// 获取附件信息
function getAttachment(callback, eventid){
	taskDataSource(null, FUNTYPE.ATTACHMENT, {eventid: eventid}, null, callback);
}

// 删除附件
function delAttachment(attid, eventid){
	// AttachmentUtil.Tips.closeTips();
	AttachmentUtil.LOADING.open();
	var span = $("span[attachment=true][eventid='" + eventid + "']");
	var curLine = span.parents("tr");
	taskDataSource(null, FUNTYPE.ATTACHMENT_DELETE, {attid: attid, eventid: eventid}, null, function(result){
		if(result.length == 0) {
			setAttachmentIcon(curLine, null, true);
			AttachmentUtil.AttachmentMap.delete(eventid);
			AttachmentUtil.Tips.closeTips();
		}else{
			AttachmentUtil.AttachmentMap.set(eventid, result);
			AttachmentUtil.Tips.refresh(result);
		}
		AttachmentUtil.LOADING.close();
	});
}

// 附件工具
AttachmentUtil = {};
AttachmentUtil.AttachmentMap = new Map(); // 附件缓存, 保存获取过的附件信息

// 附件弹窗
AttachmentUtil.Tips = {
	openTips: function(left, top, result, eventid){
		this.__eventid = eventid;
		var attachmentTips = $("#attachmentTips");
		if(!attachmentTips.length){
			attachmentTips = $('<div id="attachmentTips" style="position:absolute; z-index: 10;"><label class="modal-row-label"><span class="k-icon k-i-attachment-45"></span>添付ファイル</label><hr style="margin: 0;margin-top: 4px;border: 0;border-bottom: solid 1px #aaa;"/><span class="k-icon k-i-close" style="position: absolute; font-size: 16px; top: 2px; right: 2px;" onclick="AttachmentUtil.Tips.closeTips();"></span><div class="content"></div></div>');
			attachmentTips.css({left: left, top: top});
			attachmentTips.addClass("loading");
			attachmentTips.find("div.content").html('<img src="/img/loading.gif" style="padding-right:5px;"/>ダウンロード中...');
			$("#gantt30").after(attachmentTips);
			$(document).bind("mousedown", function(e){
				var bool = $(e.target).parents("#attachmentTips").length || (e.target == attachmentTips[0]);
				if(bool || e.target == $("span[eventid='" + eventid + "']")[0]) return;
				AttachmentUtil.Tips.closeTips();
			});
			
			if(attachmentTips.find("div.content").length) bindDropEvent(attachmentTips.find("div.content")[0], function(type, event){
				if(type == "drop"){
					var files = event.dataTransfer.files;
					if(files.length > 0){
						var eventId = AttachmentUtil.Tips.__eventid;
						readfiles(files, 0, eventId, function(){
							getAttachment(function(result){
								AttachmentUtil.AttachmentMap.set(eventId, result);
								AttachmentUtil.Tips.refresh(result);
							}, eventId);
						});
					}
				}
			});
		}
		this.refresh(result);
	},
	refresh: function(result){
		var attachmentTips = $("#attachmentTips");
		if(result instanceof Array && attachmentTips.length){
			var content = attachmentTips.find("div.content");
			content.empty();
			if(!result.length){
				content.html("<span class='k-icon k-i-error' style='color:#d20606;padding-right:5px;'></span>無添付ファイル...");
				return;
			}
			attachmentTips.css("text-align", "left");
			var prefix = '<table><tbody>';
			var suffix = '</tbody></table>';
			var item = '<td><span class="attachment-thumb-img-wrap"><span class="file-panel"><span class="k-icon __FILE_TYPE__ file-size" title="__FILE_NAME__" onclick="window.open(\'__FILE_DOWNLOAD_URL__\',\'_blank\');" style="cursor:pointer;"></span><a href="__FILE_DOWNLOAD_URL__" target="_blank"><span class="attachment-thumb-title" title="__FILE_TITLE__">__FILE_NAME__</span></a></span><div class="operation-panel"><span class="k-icon k-i-download" onclick="window.open(\'__FILE_DOWNLOAD_URL__\',\'_blank\');"></span><span class="k-icon k-i-delete" onclick="__DELETE_FUNTION__"></span></div></span></td>';
			var codes = "<tr>";
			for(var i = 0; i < result.length; i++){
				if(i % 5 == 0 && i != 0) codes += "</tr><tr>"
				var download_url = "{!hostName}/servlet/servlet.FileDownload?file=" + result[i]["attachmentId"];
				codes += item.replace("__FILE_TYPE__", convertFileName(result[i]["fileName"]))
							.replace("__FILE_DOWNLOAD_URL__", download_url)
							.replace("__FILE_DOWNLOAD_URL__", download_url)
							.replace("__FILE_DOWNLOAD_URL__", download_url)
							.replace("__FILE_NAME__", result[i]["fileName"])
							.replace("__FILE_NAME__", result[i]["fileName"])
							.replace("__DELETE_FUNTION__", "delAttachment('" + result[i]["attachmentId"] + "', '" + this.__eventid + "');")
							.replace("__FILE_TITLE__", result[i]["fileName"]);
			}
			
			for(var n = 0, j = result.length % 5 == 0 ? 0 : 5 - (result.length); n < j; n++){
				codes += "<td></td>";
			}
			codes += "</tr>";
			content.html(prefix + codes + suffix);
		}
	},
	closeTips: function(){
		$("#attachmentTips").remove();
		AttachmentUtil.Tips.__eventid = null;
		$(document).unbind("mousedown");
	}
	
};

// Loading 画面
AttachmentUtil.LOADING = {
	open: function(){
		kendo.ui.progress($("#gantt30"), true);
	},
	close: function(){
		kendo.ui.progress($("#gantt30"), false);
	}
}

// 文件后缀转class
function convertFileName(fileName){
	var defaultClassName = "k-i-file";
	var file_obj = {
		"k-i-xls": ["xls", "xlsx"],
		"k-i-doc": ["doc", "docx"],
		"k-i-mdb": ["mdb"],
		"k-i-ppt": ["ppt", "pptx"],
		"k-i-pdf": ["pdf"],
		"k-i-psd": ["psd"],
		"k-i-flash": ["swf"],
		"k-i-config": ["ini"],
		"k-i-zip": ["zip"],
		"k-i-css": ["css"],
		"k-i-js": ["js"],
		"k-i-txt": ["txt"],
		"k-i-csv": ["csv"],
		"k-i-exe": ["exe"]
	};
	fileName = fileName.toLowerCase().trim();
	for(var className in file_obj){
		for(var suffix in file_obj[className]){
			if(fileName.endsWith(file_obj[className][suffix])) return className;
		}
	}
	return defaultClassName;
}
// 2018/11/21 関連書類の紐付け by cxw END
// 2018/11/21 行動を範囲選択してコピーできるといい。by cxw ENGIN
function replaceGanttFun(gantt){
	var list = gantt._list;
	gantt._list = function(){
		list.call(this);
		var draggable, draggable_events;
		this.list.content && (draggable = this.list.content.data("kendoDraggable"), draggable && (draggable_events = draggable._events["dragstart"][0], draggable._events["dragstart"] = [function(e){
			if(neatenSelect().length > 1) e.preventDefault();
			else draggable_events.call(this, e);
		}]));
	}
	
	var update = gantt.dataSource.update, sync = gantt.dataSource.sync;
	gantt.dataSource.update = function(e, t){
		if(t.hasOwnProperty("parentId") || t.hasOwnProperty("orderId")){ // 拖拽
			var allSelect = getAllSelectItems();
			var items = neatenSelect(allSelect), flag = false, isNext = t.status;
			delete t["status"];
			for(var k = 0; k < allSelect.length; k++) {
				if(e.uid == allSelect[k].uid){
					flag = true;
					break;
				}
			}
			if(!flag) items = [e];
			if(t.hasOwnProperty("orderId")){
				if(isNext && t["parentId"] != items[0].parentId) items = items.reverse();
				for(var i = 0, j = t["orderId"], k = t["orderId"] - 1; i < items.length; i++){
					var updateObject = {orderId: isNext ? j : k + 1};
					if(t.hasOwnProperty("parentId")) updateObject.parentId = t["parentId"];
					update.call(this, items[i], updateObject);
					k = items[i].orderId;
				}
			}else{ // 没有顺序,单纯的层级
				for(var n = 0; n < items.length; n++){
					update.call(this, items[n], {parentId: t["parentId"]});
				}
			}
		}else{
			update.call(this, e, t);		
		}
	}
	gantt.maxTaskId = Number.MAX_SAFE_INTEGER;
	gantt.getTaskId = function(){
		return this.maxTaskId--;
	};
	gantt.getDataId = function(id){
		if (id) return id + '_new';
		return kendo.guid() + '_new';
	}
}

// 获取所有被选择的ITEMS
function getAllSelectItems(){
	// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
	// var gantt = $("#gantt30").data("kendoGantt");
	var gantt = getActionGantt();
	// 2020/09/31 画面スクロールを２分割したい by zy END
	var $trs = gantt.select();
	var items = [];
	$trs.each(function(){
		items.push(gantt.dataItem($(this)));
	});
	return items;
}
// 整理ITEMS, 返回顶层ITEM
function neatenSelect(items){
	items = items || getAllSelectItems();
	var finished = [];
	var existIdSet = new Set();
	for(var i = 0; i < items.length; i++){
		var item = recursionGetTopForPaents(items[i], items);
		if(!existIdSet.has(item.id)) finished.push(item), existIdSet.add(item.id);
	}
	return finished;
}
// 从items递归去出item的最高级
function recursionGetTopForPaents(item, items){
	if(!item.parentId) return item;
	for(var i = 0; i < items.length; i++){
		if(item.parentId == items[i].id) return recursionGetTopForPaents(items[i], items);
	}
	return item;
}

function holdPageDataId(dataId){
	if (dataId) PageInfo.dataid = dataId;
	else  PageInfo.dataid = getSelectDataIds();
}
function getSelectDataIds(){
	var dataIds = [];
	// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
	// var gantt = $("#gantt30").data("kendoGantt");
	var gantt = getActionGantt();
	// 2020/09/31 画面スクロールを２分割したい by zy END
	gantt.select().each(function(){
		dataIds.push(gantt.dataItem($(this)).dataid);
	});
	return dataIds;
}
function muliteSelect(dataid,otherid){
	if(!dataid && !otherid) {
		if (PageInfo.dataid && PageInfo.dataid.length > 0) {
			// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
			var gantt = $("#gantt30").data("kendoGantt");
			if ("options" in this) gantt = this;
			// 2020/09/31 画面スクロールを２分割したい by zy END
			var datas = gantt.dataSource.data();
			var tasks = getSourceData('dataid',PageInfo.dataid,datas);
			var selectorArr = [];
			for (var i = 0 ; i < tasks.length ; i++) {
				selectorArr.push('tr[data-uid="' + tasks[i].uid + '"]');
			}
			if (selectorArr.length > 0) gantt.list.content.find(selectorArr.join(',')).addClass("k-state-selected");
		}
		return;
	}
	// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
	var gantt = $("#gantt30").data("kendoGantt");
	if ("options" in this) gantt = this;
	// 2020/09/31 画面スクロールを２分割したい by zy END
	var datas = gantt.dataSource.data();
	var begTask, afterTask, firstGuid, nextGuid, begIndex, afterIndex;
	if(dataid) (begTask = getSourceData('dataid',dataid,datas), firstGuid = begTask[0].uid, begIndex = $("tr[data-uid='" + firstGuid + "']").index());
	if(otherid) (afterTask = getSourceData('dataid',otherid,datas), nextGuid = afterTask[0].uid, afterIndex = $("tr[data-uid='" + nextGuid + "']").index());
	if(begIndex != undefined && afterIndex == undefined) gantt.select($("tr[data-uid='" + firstGuid + "']"));
	else if(begIndex == undefined && afterIndex != undefined) gantt.select($("tr[data-uid='" + nextGuid + "']"));
	else{
		var beg = Math.min(begIndex, afterIndex);
		var end = Math.max(begIndex,afterIndex);
		if (beg != begIndex || beg == end) end += 1;
		
		gantt.list.content.find("tbody>tr").slice(beg,end).addClass("k-state-selected");
		var items = neatenSelect();
		if(!items.length) return;
		var parentid = items[0].parentId;
		for(var i = 1; i < items.length; i++) if(items[i].parentId != parentid) $("#toolbarRows li.k-button-icon[data-icon^='arrow-chevron']", gantt.toolbar).addClass("disableClass");
	}
}

function copySelect(){
	// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
	// var gantt = $("#gantt30").data("kendoGantt");
	var gantt = getActionGantt();
	// 2020/09/31 画面スクロールを２分割したい by zy END
	PageInfo.parseInfo = getAllSelectItems();
}
function pasteSelect(){
	// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
	// var gantt = $("#gantt30").data("kendoGantt");
	var gantt = getActionGantt();
	// 2020/09/31 画面スクロールを２分割したい by zy END
	function cloneTask(item, parentId){
		var newItem = Object.assign({}, item);
		delete newItem.orderId;
		delete newItem.uid;
		delete newItem.eventid;
		delete newItem.isExistAtt;
		// 2019/04/15 JINYABUG-1587 bug fix by zy BEGIN
		delete newItem.percentComplete;
		// 2019/04/15 JINYABUG-1587 bug fix by zy END
		newItem.parentId = parentId;
		newItem.id = gantt.getTaskId();
		newItem.dataid = gantt.getDataId();
		// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy BEGIN 
		// 担当者該当ユーザーない
		if (getCurUserId() != newItem.userid) newItem.depart = getDepart();
		// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy END
		return newItem;
	}
	function updateFun(updateds, createds){
		if(updateds.length || createds.size){
			var projectId = $("#hidMainProjectId").val();
			var result = {};
			for(var j = 0; j < updateds.length; j++){
				result[updateds[j].dataid] = getUpdateObj(updateds[j], true);
				if(createds.has(updateds[j].dataid) && createds.get(updateds[j].dataid).copyItem) result[updateds[j].dataid].copyItem = true;
				createds.delete(updateds[j].dataid);
			}
			createds.forEach(function(value, key){
				result[key] = getUpdateObj(value);
				if(value.copyItem) result[key].copyItem = true;
			});
			result["projectId"] = {dataid: projectId, Status: "copy"};
			taskDataSource(false,FUNTYPE.DTUPDATE_ALL, result, false, afterTaskCreate);
			return true;
		}
	}
	
	function copyChildren(item, dataSource, parentId, order){
		var children = dataSource.taskChildren(item);
		for(var i = 0; i < children.length; i++){
			var newItem = cloneTask(children[i], parentId);
			order.push(newItem);
			copyChildren(children[i], dataSource, newItem.id, order);
		}
	}
	
	var pasteItem = gantt.dataItem(gantt.select().last());
	if(pasteItem && PageInfo.parseInfo){
		var defaultParentId = pasteItem.id;
		var created = new Map();
		var parentsMap = new Map();
		var lastItem = PageInfo.parseInfo[0];
		var lastCloneItem = cloneTask(lastItem, defaultParentId);
		parentsMap.set(lastItem.id, lastCloneItem.id);
		lastCloneItem.copyItem = true;
		var insertOrder = [lastCloneItem];
		for(var j = 1; j < PageInfo.parseInfo.length; j++) {
			var item = PageInfo.parseInfo[j];
			var newItem = cloneTask(item, lastCloneItem.id);
			parentsMap.set(item.id, newItem.id);
			if(item.parentId != lastItem.id){ // 当前项层级高于上一项, 或者是同级
				copyChildren(lastItem, gantt.dataSource, lastCloneItem.id, insertOrder);
				newItem.parentId = parentsMap.has(item.parentId) ? parentsMap.get(item.parentId) : defaultParentId;
			}
			// 子集
			insertOrder.push(newItem);
			newItem.copyItem = true;
			lastItem = item;
			lastCloneItem = newItem;
		}
		copyChildren(lastItem, gantt.dataSource, lastCloneItem.id, insertOrder);
		gantt._preventRefresh = true;
		var created = new Map();
		for(var k = 0, c = 0; k < insertOrder.length; k++){
			var newTask = gantt.dataSource.add(insertOrder[k]);
			created.set(newTask.dataid, newTask);
			if(insertOrder[k].copyItem) newTask.copyItem = true;
		}
		gantt._preventRefresh = false;
		kendo.ui.progress($("#gantt30"), true);
		if(!updateFun(gantt.dataSource.updated(), created)) kendo.ui.progress($("#gantt30"), false);
	}
}
// 2018/11/21 行動を範囲選択してコピーできるといい。by cxw END
// 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy BEGIN
// 該当画面タイプ変更監視する
function changeFieldFormat(){
	var gantt = $("#gantt30").data("kendoGantt");
	// 該当状態下書式変更チェック
	if (chagneColumnFormat(gantt.options.columns)) {
		$("#toobalTemplate").append($("#toolbarRows").children());
		// 2020/09/30 8278 bug fixed by zy BEGIN
		var ganttNew = $("#ganttNew").getKendoGantt();
		if (isSplitMode() && ganttNew) {
			var ganttNewOpts = $.extend({},gantt.options);
			delete ganttNewOpts.navigate;
			ganttNewOpts.height = ganttNew.element.height();
			ganttNew.setOptions(ganttNewOpts);
		}
		// 2020/09/30 8278 bug fixed by zy END
		// モード変更
		gantt.setOptions(gantt.options);
		
		$("#toolbarRows").append($("#toobalTemplate").children());
	}
}
// 該当状態下書式変更チェック
function chagneColumnFormat(fieldArr){
	var dataFormatArr = ['dueStart','dueEnd','start','end'];
	var hadChange = false;
	var changeFormat = "{0:" + getDateFormat() + "}";
	for (var i = 0 ; i < fieldArr.length ; i++) {
		var field = fieldArr[i];
		// 指定字段書式変更
		if ($.inArray(field.field,dataFormatArr) >= 0 && ("format" in field && field.format != changeFormat)) {
			field.format = changeFormat;
			hadChange = true;
		}
	}
	return hadChange;
}
// 日付と日付時間タイプチェック
function dateFormatChange(){
	var curType = getGanttType();
	if (curType == 'day') return false;
	var exitMode = $("#hidProjectMode").val();
	if (exitMode == "true") return true;
	return false;
}
// 該当タイプ表示書式
function getDateFormat(){
	if (dateFormatChange()) return JINYACONNECT.DateFormat;
	return JINYACONNECT.DateTmFormat;
}
// 日付モード切り替え機能
function toClientDate(obj,startStr,endStr){
	var start = obj[startStr];
	var end  = obj[endStr];
	if (start == null || end == null) return;
	var diffTime = end.getTime() - start.getTime();
    var timelong = convertTimeToDate(start,0);
    end = new Date(timelong + diffTime);
    var endlong = convertEndTimeToDate(end,1);
    obj[startStr] = new Date(timelong);
    obj[endStr] = new Date(endlong);
}
// 開始日付処理
function convertTimeToDate(date){
	var timelong = date.setHours(0,0,0);
    return timelong;
}
// 終了日付処理
function convertEndTimeToDate(date){
	var timelong = date.setHours(23,59,0);
    return timelong;
}
// 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy END
// 2019/01/15 SCROLLエラー修正　by zy BEGIN
function bindScroll(){
	var gantt = $("#gantt30").data("kendoGantt");
	var content = gantt.list.element;
	if (content.hasClass("setBind")) return;
	content.get(0).addEventListener( 'mousewheel',function(event){
		var delta = event.detail? event.detail*(-120):event.wheelDelta;
		var diffScroll = $(".k-grid-content>table",event.currentTarget).height() - $(".k-grid-content",event.currentTarget).height();
		var top = $(".k-grid-content",event.currentTarget).scrollTop();
		var scrollTop = top - delta;
		// 向下
		if (delta < 0 && diffScroll <= scrollTop) {
			var windowTop = $(window).scrollTop();
			$(window).scrollTop(windowTop - delta);
		} else if (top <= 0){
			var windowTop = $(window).scrollTop();
			$(window).scrollTop(windowTop - delta);
		}
	});
	content.addClass("setBind");
}
// 2019/01/15 SCROLLエラー修正　by zy END
// 2018/12/30 拡大機能[+/-]ボタンにより、ZOOMのバーにより、全体はズーム機能 by cxw BEGIN
function changeZoomStatus(zoom = 0){
	if(this instanceof HTMLSpanElement && this.classList.contains('k-state-disabled')) return;
	let $sub = $('#sub-font-size')
		, $add = $('add-font-size')
		, min = $sub.attr('min') || 1
		// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
		, max = $add.attr('max') || 100
		, $span = $("#change-font-size-panel")
		, val = parseInt($span.text())
		, value = (val < min ? min : val > max ? max : val) + zoom
	
	function changeGnattSize(gantt,isCookie){
		var $el = gantt.element
			, $tool = gantt.toolbar
			, $footer = gantt.footer
			, $list = gantt.list.element
			, $timeline = gantt.timeline.element
			, round = value / 12
			, $nJ = new $([$list[0], $timeline[0]])
			, $lC = $list.children('.k-grid-content'), $tC = $timeline.children('.k-grid-content')
			, $lH = $list.find('div.k-grid-header').outerHeight()
			, $tH = $timeline.find('div.k-grid-header').outerHeight();	
		$nJ.css({transform: `scale(${round})`, width: `calc(100% / ${round})`, height: `calc(100% / ${round})`, 'transform-origin': 'left top'});
		// 2020/10/30 2.14.特定日のマーキング機能、スケジュールのなかでポイントをうち、右の表示マークをつける機能 by zy BEGIN
		$nJ.removeClass("scale");
		if (round < 1) $nJ.addClass("scale");
		// 2020/10/30 2.14.特定日のマーキング機能、スケジュールのなかでポイントをうち、右の表示マークをつける機能 by zy END
		$lC.css({height: `calc(100% - ${$lH}px)`});
		$tC.css({height: `calc(100% - ${$tH}px)`});
		if (isCookie) $span.text(value);
		// 2019/02/28 プロジェクト改善文字放大缩小 by cxw BEGIN
		gantt.$round = round;
		// 2019/02/28 プロジェクト改善文字放大缩小 by cxw END
		$sub[value <= min ? 'addClass' : 'removeClass']('k-state-disabled');
		$add[value >= max ? 'removeClass' : 'addClass']('k-state-disabled');
		isCookie && (value - val != zoom || zoom != 0) && taskDataSource(false,'saveCookieInfo',{subType:'FONTSIZE', value});
		// 2020/10/30 2.14.特定日のマーキング機能、スケジュールのなかでポイントをうち、右の表示マークをつける機能 by zy BEGIN
		gantt.options.readMessage.call(gantt);
		// 2020/10/30 2.14.特定日のマーキング機能、スケジュールのなかでポイントをうち、右の表示マークをつける機能 by zy END
		function changeMouseMove(){
			var t = gantt.list
	          , i = kendo.ui.Gantt.styles
	          , n = function(n) {
	            var o, r, s = $(n.currentTarget), a = t.resizeHandle, l = s.position(), c = l.left, d = kendo._outerWidth(s) * round , u = s.closest("div"), f = n.clientX + $(window).scrollLeft(), m = t.options.columnResizeHandleWidth;
	             c += u.scrollLeft(),
	            a || (a = t.resizeHandle = $('<div class="' + i.resizeHandle + '"><div class="' + i.resizeHandleInner + '" /></div>')),
	            o = s.offset().left + d;
	            return (r = f > o - m && f < o + m) ? (u.append(a),
	            void a.show().css({
	                top: l.top,
	                left: (c + d - m - 1 )/round,
	                height: kendo._outerHeight(s),
	                width: 3 * m
	            }).data("th", s)) : void a.hide()
	        };
	        t.header.find("thead").off("mousemove.kendoGanttList");
	        t.header.find("thead").on("mousemove.kendoGanttList", "th", n);
		}
		if (gantt.element.attr("id") == "gantt30") changeMouseMove();
	}
	// 2020/10/30 8289 bug fixed by zy BEGIN
	if ("element" in this) {
		changeGnattSize(this,true);
		if (this.element.attr("id") == "ganttNew") {
			newGanttPosition();
		}
	} else {
		let gantt = $('#gantt30').data('kendoGantt');
		changeGnattSize(gantt,true);
		let ganttNew = $('#ganttNew').data('kendoGantt');
		if (ganttNew) {
			changeGnattSize(ganttNew);
			newGanttPosition();
		}
	// 2020/10/30 8289 bug fixed by zy END
	}
	// 2020/09/31 画面スクロールを２分割したい by zy END
}
// 2018/12/30 拡大機能[+/-]ボタンにより、ZOOMのバーにより、全体はズーム機能 by cxw END
// 2019/03/15 変更履歴機能追加 by cxw BEGIN
// console窗口
class CConsole {
	constructor ($el, title, contentTitle) {
		this.element = $el.html("");
		this.title = title || "";
		this.element.css(
			{
				"padding": "1em"
				, "background-color": "rgba(20,53,80,0.038)"
				, "border": "1px solid rgba(20,53,80,0.05)"
			}
		);
		if(this.title) this.$title = this.element.append('<h4 class="console-title">' + this.title + '</h4>');
		if(contentTitle) this.$contentTitle = $('<div class="console-content-title">' + contentTitle + '</div>').appendTo(this.element);
		this.$console = $('<div class="console"></div>')
			.appendTo(this.element);
		this.$array = [];
	}
	
	setMaxLen(len) {
		this.$maxLeb = len;
	}
	
	_beyondRemove() {
		if(this.$array.length >= this.$maxLen) {
			let num = (this.$array.length - this.$maxLen) || 1;
			let removeItems = this.$array.slice(0, num);
			for(let i = 0; i < removeItems.length; i++) {
				removeItems[i].$div && removeItems[i].$div.remove();
			}
			this.$array = this.$array.slice(num);
		}
	}
	
	log (item, animation = true) {
		let { message, type, data } = item;
		if(!message) return;
		let isError = type == 'error';
		this.$console.children('span.console-nodata').remove();
		this._beyondRemove();
		let $div = $("<div class='console-item'/>")
                .css({
                    "background-color": isError ? "#ffdddd" : "#ffffff"
                })
                .data('DATA', data)
                .html(message)
                .appendTo(this.$console);
        this.$array.push({message, isError, $div});
    }
    
    setTitle(newTitle) {
    	this.$title.text(newTitle);
    }
    
    clear () {
    	this.$console.children().remove();
    	this.$console.html('<span class="console-nodata">NO DATA</span>');
    }
    
    extend (items = [], clear = true, animation = false) {
    	clear && this.clear();
 		for(let i = 0, t = items.slice(0, this.$maxLen); i < t.length; i++) {
			let item = t[i];
			this.log(item, animation);
		}
    }
}
// 处理console窗口
function handleConsoleDialog (event) {
	let $console = $('#console').remove(), height = $(window).height(), $style = { left: event.clientX, 'min-width': 400, 'min-height': 200 };
	if(event.clientY > height / 2) $style.bottom = height - event.clientY;
	else $style.top = event.clientY;
	
	$console = $($('#console-template').html()).css($style).appendTo('body');
	$(document).unbind('mousedown').bind('mousedown', function(e){
		if(e.target == event.$this[0] || e.target == $console[0] || $console.find(e.target).length) return;
		$(document).unbind('mousedown');
		$console.remove();
	})
	
	$console.children('span.k-i-close').click(function(){
		$(document).unbind('mousedown');
		$console.remove();
	});
	return $console;
}

// 包装数据
function packageData (result) {
	let items = result || [];
	if(items.length) {
		// 分组、合并
		// 拼装元素
		items = items.map( function(e, i) {
			let /*array = newObject[e],*/ message;
			message = '<span class="el-item date" style="position: relative;">';
			message += '<span style="margin-left: 16px;">' + e.date + '</span>';
			message += '</span>';
			message += '<span class="el-item who">' + e.who + '</span>';
			message += '<span class="el-item action" title="' + e.action + '">' + e.action + '</span>';
			return { message };
		} );

	}
	return items;
}

// 履历图标事件
function record (e) {
	let $this = $(this);
	let $tr = $this.parents('tr')
		, uid = $tr.attr('data-uid')
		, gantt = e.data
		, dataSource = gantt.dataSource
		, item = dataSource.getByUid(uid);
	if( uid && item ) {
		e.$this = $this;
		$console = handleConsoleDialog(e);
		kendo.ui.progress($console, true);
		taskDataSource(false,'getProjectHistory', [item.dataid], false, function(result){
			let $dialog = $console.children('div.dialog').console('変更履歴', '<span class="el-item date"><span style="margin-left: 16px;">日付</span></span><span class="el-item who">ユーザ</span><span class="el-item action" style="width: auto;">アクション</span>');
			let cconsole = $dialog.data('CConsole');
			cconsole.setMaxLen(result.length + 1);
			let items = packageData(result);
			cconsole.extend(items);
			if(items.length) {
				cconsole.$console.on('click', 'i.colla', expanded);
			}
		kendo.ui.progress($console, false);
		});
	}
}


function expanded (e) {
	let $this = $(this), $item = $this.parents('div.console-item'), expand = $this.attr('data-expand'), data = $item.data('DATA');
	if( data && data.length ) {
		$this.attr('data-expand', expand == 'on' ? 'off' : 'on').css('transform', expand == 'on' ? 'none' : 'rotate(90deg)');
		if(expand == 'on') {
			let $expanded = $item.next();
			if($expanded.hasClass('expanded')) $expanded.remove();
		} else {
			let newItem = $('<div class="console-item expanded" />'),
				html = '<div class="item-ul"><ul>';
				data.forEach( (e) => { html += '<li>' + e.action + '</li>' });
				html += '</ul></div>';
			$item.after(newItem.append(html));		
		}
	}
}
// 明細変更後対応
function updateAfter(result) {
	result = result || [];
	let {dataid, history} = this;
	result = result.filter((e) => {
		if(history && e.dataid == dataid || e.history) return false;
		return true;
	});
	let dataids = result.map((e)=>e.dataid);
	if(dataids.length) {
		taskDataSource(false,'getProjectHistory', dataids, false, function(result){
			let exist = new Set();
			result.forEach((e) => {
				
				e.id && exist.add(e.id);
			});
			
			let gantt = $('#gantt30').data('kendoGantt'), data = gantt.dataSource.data(), uids = new Set();
			for(let i = 0, l = data.length; i < l; i++){
				let current = data[i];
				if(exist.has(current.dataid) && !current.history){
					uids.add(current.uid);
					current.history = true;
				}
			}
			
			if(uids.size > 0) {
				let $u = Array(...uids).map((e) => 'tr[data-uid="' + e + '"]');
				$($u.join(','), gantt.list.content).find('td:first>span').each(function(){
					if(!$(this).children('.record').length){
						$(this).prepend('<i class="k-icon k-i-track-changes record"></i>');
					}
				});
			}
		});
		
	}
}
// 2019/03/15 変更履歴機能追加 by cxw END
// 2019/03/15 マルチタスクの表示を切り替える by cxw BEGIN
function changeFinishMode(bool = false){
	let $e = $(':input[id$="finishMode"]');
	$e.val(bool);
	changeProject();
}
// 2019/03/15 マルチタスクの表示を切り替える by cxw END
// 2019/07/15 プロジェクト明細のURLをプロジェクト管理画面から出力できるように陣屋コネクトとしての改善要望です。 by zy BEGIN
// プロジェクタのツールの指定字段番号作成
function getFieldIndexMap(){
	var map = {};
	// 指定内容取得
	this.options.columns.forEach(function(column,idx){
		// 字段名の番号
		map[column.field] = idx;
	});
	return map;
}
// 件名URL作成
function setChatterIcon(curRow,idx,chatterId){
	var chatterIcon = curRow.find(".k-i-chatter");
	if (chatterIcon.length > 0) chatterIcon.remove();
	var iconStr = "<i class='k-i-chatter _gray_' title='_title_' onclick='openChatter()'></i>";
	if (chatterId == undefined) iconStr = iconStr.replace('_gray_','gray').replace('_title_','情報共有');
	else iconStr = iconStr.replace('_gray_','').replace('_title_','詳細確認');
	curRow.find("td:eq(" + idx + ")").prepend(iconStr);
}
function openChatter(){
	var $target = $(event.currentTarget);
	var curRow = $target.closest("tr[data-uid]");
	var uid = curRow.attr("data-uid");
	var gantt = $("#gantt30").getKendoGantt();
	var task = gantt.dataSource.getByUid(uid);
	if ($target.hasClass("gray")){
		var kendoWin = $("#chatterWindow").getKendoWindow();
		if (kendoWin == undefined) {
			kendoWin = $("#chatterWindow").kendoWindow({
				width:500,
				title:'チャターへ情報共有'
			}).getKendoWindow();
			// window.open("/" + taskId);
			kendoWin.center();
		}
		$("#taskTitle").val(task.title);
		kendoWin.task = task;
		var projectId = $("#projectWindow").data("projectid");
		var multiSel = $("select[id$=chatterDropDown]").getKendoMultiSelect();
		if (multiSel == undefined) {
			$("select[id$=chatterDropDown]").kendoMultiSelect({
		        placeholder: "",
		        filter: "contains",
		        height: 300,
		        autoClose: false,
		        autoBind: false,
		        dataTextField: "name",
		        dataValueField: "id",
		        select:function(e){
		        	this.wrapper.removeClass("requiredClass");
		        	this.input.attr("placeholder","");
		        	if (this.value().length > 25) {
		        		alert("メンション対象数が25までを選択できます。");
		        		e.preventDefault();
		        	}
		        }
		     });
		}
		var projectId = $("#hidMainProjectId").val();
		taskDataSource(false,'getProjectUsers',projectId,$("#projectWindow"),initUserInt);
	} else {
		taskDataSource(false,'preCheckChatter',task.chatter,$("#projectWindow"),afterOpenChatter.bind({chatter:task.chatter}));
	}
}
function initUserInt(result){
	var curUserId = $("#hidUserId").val();
	var dataSource3 = new kendo.data.DataSource({
	  data: result
	});
	var multiSelect = $("select[id$=chatterDropDown]").data("kendoMultiSelect");
	var kendoWin = $("#chatterWindow").getKendoWindow();
	multiSelect.setDataSource(dataSource3);
	multiSelect.value([kendoWin.task.userid]);
	$("[id$=chattertree01]").val("");
	$("#taskDescribe").val(kendoWin.task.comment || "");
	kendoWin.open();
}
function hideChatterWin(result){
	var kendoWin = $("#chatterWindow").getKendoWindow();
	kendoWin.close();
	if (result != null) {
		var gantt = $("#gantt30").getKendoGantt();
		var datas = gantt.dataSource.data();
		for (var i = 0 ; i < result.length ; i++) {
			var data = result[i];
			var tasks = getSourceData('dataid',data.dataid,datas);
			if (tasks.length > 0) tasks[0].set('chatter',data.chatter);
		}
	}
}
function chatterPost(){
	var chatterId = $("[id$=chattertree01]").val();
	if (chatterId == "") {
		alert("チャターグループを選択してください。");
		return;
	}
	var kendoWin = $("#chatterWindow").getKendoWindow();
    taskDataSource(false,'chatterPostItem',{id:kendoWin.task.dataid,chatter:$("[id$=chattertree01]").val(),users :$("select[id$=chatterDropDown]").val(),desc:$("#taskDescribe").val()},false,hideChatterWin);
}
function afterOpenChatter(result){
	if (result == null) {
		let {chatter} = this;
		window.open('/' + chatter);
	} else {
		alert('共有情報が削除されました、 情報が再度共有したい場合、該当アイコンをクリックし、情報を共有してください。');
		var data = result[0];
		var gantt = $("#gantt30").getKendoGantt();
		var datas = gantt.dataSource.data();
		for (var i = 0 ; i < result.length ; i++) {
			var data = result[i];
			var tasks = getSourceData('dataid',data.id,datas);
			if (tasks.length > 0) tasks[0].set('chatter',null);
		}
	}
}
// 2019/07/15 プロジェクト明細のURLをプロジェクト管理画面から出力できるように陣屋コネクトとしての改善要望です。 by zy END
// 2019/08/15 プロジェクト管理画面からプロジェクト明細のページに簡単に遷移できるようにしたいです。 by zy BEGIN
function titleUrlOpenSetting(titleIdx){
	this.list.content.find("tbody tr[role=row]").find("td:eq(" + titleIdx + ") span:not('.k-icon')").addClass("titleSpan").on("mouseenter",function(){
		$(this).addClass("titlehover");
	}).on("mouseleave",function(){
		$(this).removeClass("titlehover");
	}).on("click",function(){
		if (("OpenTimeId" in window) && OpenTimeId) clearTimeout(OpenTimeId);
		var curRow = $(this).closest("tr"),dataId = curRow.attr("data-uid"),gantt = $("#gantt30").getKendoGantt(),taskId = gantt.dataSource.getByUid(dataId).dataid;
		if ($(this).hasClass("titlehover")) {
			window.OpenTimeId = setTimeout(function(){
				if ($("body").hasClass("titleLock")) $("body").removeClass("titleLock");
				else window.open("/" + taskId);
			},300);
		}
	}).on("dblclick",function(){
		$("body").addClass("titleLock");
	});
}
// 2019/08/15 プロジェクト管理画面からプロジェクト明細のページに簡単に遷移できるようにしたいです。 by zy END
// 2019/12/30 タスクがカレンダーに表示させるか、表示させない切替対応 by zy BEGIN
function calendarEditor(container, options){
	var curUserId = $("#hidUserId").val();
	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy BEGIN
	if (!checkCurrentRole(CUS_LABEL.ROLE_EDIT,curUserId,options.model)){
		return;
	}
	/*
	
	var isManager = $("#hidManager").val();
    var isAssign = $("#hidAssign").val();
    if (isManager != "true") {
		var curUserId = $("#hidUserId").val();
	    var isAssign = $("#hidAssign").val();
	    if (isAssign == 'true' && curUserId != options.model.userid) {
	    	return;
	    }
	}*/
	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy END
	var importance = JSON.parse($("#hidCalendarJson").val() || "[]");
	var inputDrop = $('<input name="' + options.field + '" style="width: 100%"/>')
      .appendTo(container)
      .kendoDropDownList({
      	  width:"auto",
          dataTextField: "label",
          dataValueField: "value",
          dataSource: {
          	data: importance
          }
    }).data("kendoDropDownList");
    inputDrop.list.css({"white-space": "nowrap","width" :"auto"});
    inputDrop.open();
}
// 2019/12/30 タスクがカレンダーに表示させるか、表示させない切替対応 by zy END
// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy BEGIN 
function departEditor(container, options){
	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy BEGIN
	var curUserId = $("#hidUserId").val();
	if (!checkCurrentRole(CUS_LABEL.ROLE_EDIT,curUserId,options.model)){
		return;
	}
	/*
	// 权限check
	var curUserId = $("#hidUserId").val();
	var isManager = $("#hidManager").val();
    var isAssign = $("#hidAssign").val();
    if (isManager != "true") {
		var curUserId = $("#hidUserId").val();
	    var isAssign = $("#hidAssign").val();
	    if (isAssign == 'true' && curUserId != options.model.userid) {
	    	return;
	    }
	}
	*/
	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy END
	var depart = options.model.depart;
	var blankSel = "　　　　";
	var departs = JSON.parse($("#hidDepartOptJson").val() || "[]");
	departs.sort(function(bef,aft){
		var a = 0 ,b = 0;
		if ("J_DEPATY_MAP" in window) {
			if (bef in J_DEPATY_MAP) a = J_DEPATY_MAP[bef];
			if (aft in J_DEPATY_MAP) b = J_DEPATY_MAP[aft];
		}
		return b - a;
	});
	departs.splice(0, 0, blankSel);
	var inputDrop = $('<input name="' + options.field + '" style="width: 100%"/>')
      .appendTo(container)
      .kendoDropDownList({
      	  width:"auto",
          dataSource: {
          	data: departs
          }
    }).data("kendoDropDownList");
    inputDrop.open();
}
// 部署取得
function getDepart(userId,depart){
	if (userId == undefined) userId = getCurUserId();
	var userDepart = {},maxDepart = 0,curDepart = '',gantt = getMainGantt();
	gantt.dataSource.data().forEach(function(task){
		// 2020/08/31 7348 bug fixed by zy BEGIN
		if (task.userid == userId && task.depart != "") {
		// 2020/08/31 7348 bug fixed by zy END
			// 部署指定の場合、該当ユーザーの部署あり
			if (depart != undefined && task.depart == depart) {
				curDepart = depart;
				return false;
			}
			if (task.depart in userDepart) {
				userDepart[task.depart] += 1;
			} else userDepart[task.depart] = 1;
			if (curDepart == '') curDepart = task.depart;
			if (maxDepart < userDepart[task.depart]) {
				maxDepart = userDepart[task.depart];
				curDepart = task.depart;
			}
		}
	});
	if (curDepart == "" && depart != undefined && depart != "") return depart;
	return curDepart;
}
//ユーザーId取得
function getCurUserId(){
	return $("#hidUserId").val();
}
//Ganttツール取得
function getMainGantt(){
	return $("#gantt30").getKendoGantt();
}
// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy END 
// 2020/09/30 画面スクロール時にヘッダーの固定、ブラウザ側スクロールが不要 by zy BEGIN
function getHt(){
	var $wrap = $("#wrapTooBar"),ht = $(window).height() - $wrap.offset().top - $wrap.height() - 25;
	return ht;
}
function refreshWrapSize(){
	var ht = getHt();
	// 端末区分
    _isMobileOS = kendo.support.mobileOS;
	if (_isMobileOS) $("#body,#warpBox").width($("#phHeader").width()*0.95);
	$("div.bPageFooter.noTableFooter").hide(),
	$("#body,#warpBox").height(ht),
	$("#bodyTable,.noSidebarCell").css("padding-bottom",0),
	rightWidth = $(".pbBody").width() - $(".wrapLeft").width(),
	$("#splitVertical").width(rightWidth);
	setContentHt();
}
function setContentHt(){
	var ht = getHt();
	$gantt = $("#gantt30"),gantt = $gantt.getKendoGantt(),
	rightWidth = $(".pbBody").width() - $(".wrapLeft").width(),
	$gantt.width(rightWidth - 5);
	var splitter = $("#warpBox").data("kendoSplitter");
	if (splitter) splitter.element.children().height(ht);
	if (!isSplitMode()) {
		$gantt.height(ht - 5);
		if (gantt) gantt.resize();
	}else newGanttPosition();
}
function resizeSplit(){
	if (window.jinya_resizeTimeId) clearTimeout(window.jinya_resizeTimeId);
	window.jinya_resizeTimeId = setTimeout(function(){
		refreshWrapSize();
		saveCookieProject();
	},200);
}
// 2020/09/30 画面スクロール時にヘッダーの固定、ブラウザ側スクロールが不
// 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy END 
// 2020/09/30 右上のタスク選択リストに自分が関連するタスクのみ表示機能と検索機能運用が始まると200以上のタスクが作られることが想定されるため探しやすくするため  by zy BEGIN
function refreshProjectOpts(){
	var curTarget = $(event.currentTarget);
	curTarget.toggleClass("selected");
	var isPublicFlg = curTarget.hasClass("selected");
	$("input[id$=hidIsPublicFlg]").val(isPublicFlg);
	window.errorAlert = false;
	saveCookieTaskView(undefined,function(){
		// 判断当前project是否自己参与
		var drop = $("[id$=userDropProjects]").getKendoDropDownList();
		if (drop) {
			// 私有的情况下
			if (drop.dataSource.data().length == 0 || isPublicFlg){
				var item = drop.dataItem(drop.select());
				// 不参与，则选择默认project
				if (item && !item.isAssign && !item.ismanager) {
					$("input[id$=hidProjectId]").val("");
				}
				changeProject();
				return;
			}
		}
		reloadProject();
	});
	kendo.ui.progress($("#gantt30"), true);
}
// 2020/09/30 右上のタスク選択リストに自分が関連するタスクのみ表示機能と検索機能運用が始まると200以上のタスクが作られることが想定されるため探しやすくするため  by zy END
// 2020/09/31 画面スクロールを２分割したい by zy BEGIN
function getActionGantt(flg){
	var gantt = flg ? $("#gantt30,#ganttNew").not(".selectAction").getKendoGantt() : $("#gantt30,#ganttNew").filter(".selectAction").getKendoGantt();
	if (flg != true && gantt == undefined) gantt = $("#gantt30").getKendoGantt();
	return gantt;
}
function clearOtherGanttSelect(){
	var gantt = getActionGantt(true);
	if (gantt) gantt.clearSelection();
}
function splitNewGantt(){
	var $ganttNew = $("#ganttNew"),
		ganttNew = $ganttNew.getKendoGantt(),
		$gantt = $("#gantt30"),
		gantt = $gantt.data("kendoGantt"),
		splitter = $("#splitVertical").data("kendoSplitter"),
		$el = $("#splitGantt"),
		s = kendo.ui.Gantt.styles;
	// 状態変更
	$el.toggleClass("k-state-active");
	if ($el.hasClass("k-state-active")) {
		// 移動BAR表示
		$("#splitVertical .k-splitbar.k-splitbar-draggable-vertical,#ganttNew").show();
		var splitHt = ($("#splitVertical").height() / 2 - 15),opts = $.extend({},gantt.options),columnMap = {};
		splitter.size(".k-pane:first", "50%");
		// 新gantt高度
		opts.height = splitHt + gantt.toolbar.height() + gantt.list.header.height() * gantt.$round;
		delete opts.navigate;
		if (ganttNew == undefined) {
			var listWd = gantt.list.element.width() * (gantt.$round || 1);
			
			// 左侧list宽度
			opts.listWidth = listWd != 0 ? listWd : gantt.options.listWidth;
			ganttNew = $ganttNew.kendoGantt(opts).getKendoGantt();
		} else {
			// 左侧list宽度
			opts.listWidth = gantt.list.element.width() * gantt.$round;
			ganttNew.columns = gantt.columns;
			ganttNew.setOptions(opts);
			gantt.dataSource.read() 
		}
		gantt.options.height = splitHt;
	} else {
		$("#splitVertical .k-splitbar.k-splitbar-draggable-vertical,#ganttNew").hide();
		splitter.size(".k-pane:first", "100%");
		// 2020/09/30 7740 bug fixed by zy BEGIN
		gantt.options.height = "calc(100% - 5px)";
		// 2020/09/30 7740 bug fixed by zy END
		setContentHt();
	}
	$("input[id$=hidSplitView]").val($el.hasClass("k-state-active"));
	// COOKIE保持
	saveCookieTaskView();
}
// 分割GANTT位置サイズ設定
function newGanttPosition(){
	// 新規GANTT
	var $ganttNew = $("#ganttNew"),
		// GANTTツール
		ganttNew = $ganttNew.getKendoGantt(),
		splitter = $("#splitVertical").data("kendoSplitter"),
		$gantt = $("#gantt30"),
		gantt = $gantt.getKendoGantt(),
		bar = splitter.element.children(".k-splitbar");
	// GANTTツールあり
	if (ganttNew != undefined) {
		// 分割機能フラグ有効
		if (isSplitMode()) {
			// 上部サイズ設定
			var ganttHt = bar.position().top - splitter.element.position().top;
			if (ganttHt != gantt.options.height) gantt.options.height = ganttHt;
			$gantt.height(ganttHt);
			$gantt.width(bar.width() - 5);
			gantt.resize();
		}
		var headerBarHt = ganttNew.toolbar.height() + ganttNew.list.header.height() * ganttNew.$round;
		var headerBarTop = ganttNew.toolbar.outerHeight() + ganttNew.list.header.outerHeight() * ganttNew.$round;
		bar.css("z-index",1);
		$gantt.css("z-index",1);
		$ganttNew.css("z-index",0);
		$ganttNew.height($("#splitVertical").height() - bar.position().top - bar.height() + headerBarHt - 5);
		$ganttNew.width(bar.width() - 5);
		$ganttNew.offset({top:bar.offset().top - headerBarTop + bar.outerHeight()});
		ganttNew.resize();
	}
}
// 分割フラグ取得
function getCookieSplitStatus(){
	return $("[id$=hidSplitView]").val() == "true";
}
// 分割フラグボタン有効
function isSplitMode(){
	return $("#splitGantt").hasClass("k-state-active");
}
// OPTION設定SYNC
function syncGanttScroll(gantt){
	var s = kendo.ui.Gantt.styles;
	if (isSplitMode()) {
		var ganttNew = $("#ganttNew").getKendoGantt();
		ganttNew.maxTaskId = gantt.maxTaskId;
		ganttNew.getTaskId = gantt.getTaskId;
		ganttNew.getDataId = gantt.getDataId;
		// 拖拽功能对应
		var gantDrag = gantt.list._columnResizable;
		gantt.list._columnResizable._events.resizeend.splice(0,0,function(e){
			n = gantt.options.columns[this.th.index()],
			c = Math.floor(this.columnWidth),
			i = Math.floor(this.th.width());
			ganttNew.list.content.find("col").eq(this.th.index()).css("width",i);
		});
		function dragSync(befGantt,aftGantt){
			var r = befGantt.element,d = aftGantt.element,
			l = r.find("." + s.list), 
			c = r.find("." + s.timeline),
			a = "." + s.gridContent,
			o = aftGantt, 
			t = l.width(),
			i = c.width(),
			n = c.find(a).scrollLeft();
			d.find("." + s.list).width(t),
			d.find("." + s.timeline).width(i),
			d.find(a).scrollLeft(n),
			befGantt.options.listWidth = t,
			aftGantt.options.listWidth = t,
			o.timeline.view()._renderCurrentTime();
			// 2020/09/30 8271 bug fixed by zy BEGIN
			if (window.cookieProjectTimeoutId) clearTimeout(window.cookieProjectTimeoutId)
			window.cookieProjectTimeoutId = setTimeout(saveCookieProject,500);
			// 2020/09/30 8271 bug fixed by zy END
		}
		var orgDrag = gantt._resizeDraggable.draggable._events.drag[0];
		gantt._resizeDraggable.draggable._events.drag[0] = function(e){
			orgDrag.call(this,e);
			dragSync(gantt,ganttNew);
		}
		var orgNewDrag = ganttNew._resizeDraggable.draggable._events.drag[0];
		ganttNew._resizeDraggable.draggable._events.drag[0] = function(e){
			orgNewDrag.call(this,e);
			dragSync(ganttNew,gantt);
		}
		function scrollListContent(event){
			var ganttElement = $(this).closest(".k-widget.k-gantt");
			if (ganttElement.get(0).id == "gantt30") {
				ganttNew.list.content.off("scroll",scrollListContent);
				ganttNew.list.content.scrollLeft($(this).scrollLeft());
				ganttNew.list.content.on("scroll",scrollListContent);
			} else {
				gantt.list.content.off("scroll",scrollListContent);
				gantt.list.content.scrollLeft($(this).scrollLeft());
				gantt.list.content.on("scroll",scrollListContent);
			}
		}
		function scrollTimeContent(event){
			var ganttElement = $(this).closest(".k-widget.k-gantt");
			if (ganttElement.get(0).id == "gantt30") {
				ganttNew.timeline._selectedView.content.off("scroll",scrollTimeContent);
				ganttNew.timeline._selectedView.content.scrollLeft($(this).scrollLeft());
				ganttNew.timeline._selectedView.content.on("scroll",scrollTimeContent);
			} else {
				gantt.timeline._selectedView.content.off("scroll",scrollTimeContent);
				gantt.timeline._selectedView.content.scrollLeft($(this).scrollLeft());
				gantt.timeline._selectedView.content.on("scroll",scrollTimeContent);
			}
		}
		ganttNew.timeline._selectedView.content.scrollLeft(gantt.timeline._selectedView.content.scrollLeft());
		ganttNew.list.content.scrollLeft(gantt.list.content.scrollLeft());
		if (!$(gantt.list.content).hasClass("bindScroll")) {
			gantt.list.content.on("scroll",scrollListContent);
			gantt.timeline._selectedView.content.on("scroll",scrollTimeContent);
			$(gantt.list.content).addClass("bindScroll")
		}
		if (!$(ganttNew.list.content).hasClass("bindScroll")) {
			ganttNew.list.content.on("scroll",scrollListContent);
			ganttNew.timeline._selectedView.content.on("scroll",scrollTimeContent);
			$(ganttNew.list.content).addClass("bindScroll");
		}
	} else {
		var orgDrag = gantt._resizeDraggable.draggable._events.drag[0];
		gantt._resizeDraggable.draggable._events.drag[0] = function(e){
			orgDrag.call(this,e);
			var l = gantt.element.find("." + s.list), 
			t = l.width();
			gantt.options.listWidth = t;
			// 2020/09/30 8271 bug fixed by zy BEGIN
			if (window.cookieProjectTimeoutId) clearTimeout(window.cookieProjectTimeoutId)
			window.cookieProjectTimeoutId = setTimeout(saveCookieProject,500);
			// 2020/09/30 8271 bug fixed by zy END
		}
	}
}
// フィルター場合、選択項目チェック
function checkSelects(){
	var gantt = getActionGantt();
	//変更不能フラグ
	var hadDiffFlag = false;
	// フィルター有効の場合
	if (gantt.dataSource.filter()) {
		// 原数据每个节点含有的child数
		var dataMap = {},items = [],itemIdx = {},views = gantt.dataSource.view();
		// 位置設定
		gantt.dataSource.data().forEach(function(item){
			var sortIdx = gantt.dataSource.taskLevel(item);
			if (!(item.parentId in dataMap))　dataMap[item.parentId] = [];
			dataMap[item.parentId].push(item);
		});
		dataMap[null].sort(function(a,b){return a.orderId < b.orderId;});
		dataMap[null].forEach(function(item){
			itemIdx[item.id] = items.length;
			items.push(item);
			if (item.id in dataMap) {
				var arr = dataMap[item.id];
				arr.sort(function(a,b){return a.orderId < b.orderId;});
				arr.forEach(function(detail){
					itemIdx[detail.id] = items.length;
					items.push(detail);
				});
			}
		});
		gantt.select().each(function(){
			if (!hadDiffFlag) {
				var item = gantt.dataItem($(this)), // 該当選択項目
					idx = itemIdx[item.id],　　　// 該当選択項目位置
					afterItem = items[idx + 1], // 該当位置後項目
					befItem = items[idx - 1];  // 該当位置前項目
				hadDiffFlag = (befItem && grepItem(befItem,views,'id') == undefined) || (afterItem && grepItem(afterItem,views,'id') == undefined);
			}
		});
	}
	return hadDiffFlag;
}
function grepItem(item,views,field){
	return $.grep(views,function(e){
		return item[field] == e[field];
	})[0];
}
// 2020/09/31 画面スクロールを２分割したい by zy END
// 2020/10/30 2.14.特定日のマーキング機能、スケジュールのなかでポイントをうち、右の表示マークをつける機能 by zy BEGIN
function htmlDecode(val){
	var txt = document.createElement("textarea");
    txt.innerHTML = val;
    return txt.value;
}
// マーク画面表示
function openMarkWindow(gantt,task,msg,isEdit){
	var taskWin = $("<div/>");
	// 数据同步
	function ganttSyncMark(gantt,markMap){
		// マークリスト、マーク内容
		var arr = [],marks = "";
		// マーク刷新
		for (dt in markMap) {
			// 鍵チェック
			if (typeof(dt) === "string") {
				// 情報設定
				arr.push(markMap[dt]);
			}
		}
		// マーク内容作成
		if (arr.length > 0) marks = JSON.stringify(arr);
		// 内容更新
		gantt.dataSource.update(task,{marks:marks});
		// 内容同期
		gantt.dataSource.sync();
	}
	// マークのウィンドウズ作成
	var win = taskWin.kendoWindow({
		width: "400px",
		title:task.title,
		modal:true, // 背景ロック
		height: "auto",
		actions: ["Close"],
		visible: false,
		// 画面内容
		content:{
			template:$("#markWindowTemp").html()
		},
		// 画面表示の場合
		activate:function(e){
			// タイトルの情報
			$("[name=markTxt]",e.sender.element).val(msg.mdesc|| ""); 
			// 表示日付
			var inputDate = $("[name=markDate]",e.sender.element);
			var picker = inputDate.kendoDateTimePicker({format: JINYACONNECT.DateTmFormat}).getKendoDateTimePicker();
			picker.value(msg.mdate);
			// 表示マークタイプ
			var inputSel = $("[name=markSel]",e.sender.element);
			var markTypes = $("#hidMarkJson").val();
			if (markTypes != "") markTypes = JSON.parse(markTypes);
			inputSel = inputSel.kendoDropDownList({
				dataSource: {
					data: markTypes
				}
			}).getKendoDropDownList();
			inputSel.value(msg.mark);
			// 閉じる機能
			var closeBtn = $("[name=closeBtn]",e.sender.element);
			closeBtn.bind("click",function(){
				e.sender.destroy();
			});
			//  削除ボタン対応
			var deleteBtn = $("[name=deleteBtn]",e.sender.element);
			//  編集の場合
			if (isEdit) {
				// 削除クリック対応
				deleteBtn.bind("click",function(){
					// メッセージ
					if (confirm(CUS_LABEL.MARK_DELETE)) {
						var msgMap = {},dt = msg.mdate;
						if (task.marks != "") {
							// 該当明細のマーク情報取得
							var messages = JSON.parse(htmlDecode(task.marks));
							// 日付対応作成
							messages.forEach(function(msg){
								msgMap[msg.mdate] = msg;
							});
							// 指定日付削除
							delete msgMap[dt];
						}
						// 情報刷新
						ganttSyncMark(gantt,msgMap);
						e.sender.destroy();
					}
				});
				deleteBtn.show();
			}
			// 保存対応
			var saveBtn = $("[name=saveBtn]",e.sender.element);
			saveBtn.bind("click",function(){
				var msgMap = {};
				if (task.marks != "") {
					var messages = JSON.parse(htmlDecode(task.marks));
					messages.forEach(function(msg){
						msgMap[msg.mdate] = msg;
					});
				}
				var txt = $("[name=markTxt]",e.sender.element).val();
				var curDt = kendo.toString($("[name=markDate]",e.sender.element).getKendoDateTimePicker().value(),JINYACONNECT.DateTmFormat);
				var mark = $("[name=markSel]",e.sender.element).getKendoDropDownList().value();
				var dt = msg.mdate;
				if (msg.mdesc != txt){
					task.dirty = true;
					msg.mdesc = txt;
				} else if (dt != curDt) task.dirty = true;
				else if (msg.mark != mark) task.dirty = true;
				if (task.dirty) {
					msgMap[dt] = {mdate:curDt , mark:mark,mdesc:txt};
					ganttSyncMark(gantt,msgMap);
				}
				e.sender.destroy();
			});
		}
	}).getKendoWindow();
	var titleElement = win.wrapper.find(".k-window-title");
	titleElement.css({'width':'90%','display':'block','font-size':'.8em'});
	titleElement.attr("title",task.title);
	win.center().open();
}
// マーク表示機能
function bindTimeLineMark(gantt){
	// 初期化
	if (!gantt.timeline.element.hasClass("markEventBinded")){
		gantt.timeline.element.on("dblclick" + ".jinya_gantt_mark",function(event){
			// 指定ツール
			var $gantt = $(event.currentTarget).closest(".k-gantt"),
				gantt = $gantt.getKendoGantt();
			if (gantt) {
				// TIMELINE位置
				var l = gantt.timeline.element.offset().left;
				// 縮尺変更対応
				var diff = gantt.$round != 0 ? (event.clientX - l) * (2 - gantt.$round) + l : event.clientX,curUserId = $("#hidUserId").val();
				// 指定タスク対応
				var uid = $(".k-gantt-tasks tr:hover",gantt.timeline.element).find("[data-uid]").attr("data-uid")
					,task = gantt.dataSource.getByUid(uid),date = gantt.view()._timeByPosition(diff);
				if (!checkCurrentRole(CUS_LABEL.ROLE_EDIT,curUserId,task)){
					return;
				}
				if (task.marks != "") {
					var markArr = JSON.parse(htmlDecode(task.marks));
					if (markArr.length > 30){
						alert(CUS_LABEL.MARK_LIMIT);
						return;
					}
				}
				// マークウィンド表示
				openMarkWindow(gantt,task,{mdate:kendo.toString(date,JINYACONNECT.DateTmFormat)});
			}
		});
		// 初期化のロック
		gantt.timeline.element.addClass("markEventBinded");
	}
}
// マーク内容表示
function readGanttMessage(e){
	let $gantt = this;
	// TIPSのテンプレート
	var tipDiv = '<div class="k-task-tip" title="_task_">_mark_</div>';
	// 既存TIPSクリア
	$(".k-task-tip",$gantt.element).remove();
	// 該当ツールの明細処理
	$gantt.dataSource.data().forEach(function(task){
		// マーク情報あり
		if (task.marks) {
			// TIMELINEのタスク取得
			var uid = task.uid;
			var wrap = $(".k-task[data-uid='" + uid + "']",$gantt.timeline._taskTree.root),
				wrapTd = wrap.closest("td");
			// タスク表示の場合
			if (wrapTd.length > 0) {
				// タスク表示の位置
				wrapTop = wrapTd.offset().top;
				// マーク対象作成
				var messages = JSON.parse(htmlDecode(task.marks));
				view = $gantt.view();
				// マークリスト
				messages.forEach(function(msg){
					// 表示内容作成
					var taskDiv = $(tipDiv.replace('_task_',msg.mdate + '\n' + msg.mdesc).replace('_mark_',(msg.mark || '')));
					// マーク追加
					wrapTd.append(taskDiv);
					// マークのクリック対応
					taskDiv.bind("click",function(){openMarkWindow($gantt,task,msg,true)});
					// マークの位置
					taskDiv.css({left:view._offset(new Date(msg.mdate))});
					taskDiv.offset({top:wrapTop - 4});
				});
			}
		}
	});
}
// 2020/10/30 2.14.特定日のマーキング機能、スケジュールのなかでポイントをうち、右の表示マークをつける機能 by zy END
// 2020/10/31 プロジェクトオブジェクトのレコードにプロジェクトコードを作成し by zy BEGIN
function getRecordName(){
	return $("#hidProjectFieldName").val();
}
// 2020/10/31 プロジェクトオブジェクトのレコードにプロジェクトコードを作成し by zy END
// 2020/10/31 2.07.取引先の紐付け by zy BEGIN
function accountEditor(container, options){
	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy BEGIN
	var gantt = getActionGantt();
	gantt.dataSource.cancelChanges(options.model);
	var curUserId = $("#hidUserId").val();
	if (!checkCurrentRole(CUS_LABEL.ROLE_EDIT,curUserId,options.model)){
		return;
	}
	// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy END
	var url = "{!URLFOR('/apex/AccountMulitiSelector')}" + "?id=" + options.model.dataid + '&callback=reloadGantt';
	// 2020/11/05 bug fixed #PC8950 BY zyz BEGIN
	if(isSf1()) url = "{!URLFOR('/apex/AccountMulitiSelector')}" + "&id=" + options.model.dataid + '&callback=reloadGantt';
	// 2020/11/05 bug fixed #PC8950 BY zyz END
	window.open(url,'','width=700,height=550,scrollbars=yes');
}
// 2020/10/31 2.07.取引先の紐付け by zy END
// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy BEGIN
// タスク単位権限のアイコンのクリック機能
function openDetailSetting(el){
	// 該当アイコン
	var curIcon = $(event.currentTarget);
	// 該当アイコン所在行
	var curRow = curIcon.closest("tr");
	// 該当アイコン所在ツール
	var curGantt = curIcon.closest(".k-widget.k-gantt");
	var gantt = curGantt.getKendoGantt();
	var uid = curRow.attr("data-uid");
	// 該当アイコン行のタスク
	var task = gantt.dataSource.getByUid(uid);
	var taskWin = $("<div/>");
	// マークのウィンドウズ作成
	var win = taskWin.kendoWindow({
		width: "400px",
		title:task.title,
		modal:true, // 背景ロック
		height: "auto",
		actions: ["Close"],
		visible: false,
		// 画面内容
		content:{
			template:$("#roleSetWindowTemp").html()
		},
		// 画面表示の場合
		activate:function(e){
			var userDropDown = $("[id$=userDropDown]").data("kendoDropDownList");
			var datas = userDropDown.dataSource.data();
			var dataItems = [];
			for (var i = 0 ; i < datas.length ; i++) {
				var item = datas[i];
				dataItems.push({UserName:item.UserName,UserId:item.UserId});
			}
			// リスト表示All-》空
			var dataSource = new kendo.data.DataSource({
			  data: dataItems.slice(1)
			});
			// 複数ユーザー選択設定
			var option = {
				placeholder: "",
		        filter: "contains",
		        height: 300,
		        autoClose: false,
		        autoBind: false,
		        dataTextField: "UserName",
		        dataValueField: "UserId",
		        dataSource:dataSource
		    }
		    var multiSel = this;
		    var wrap = multiSel.wrapper;
		    var manSel = $("select[name=detailMamgerSel]",wrap).kendoMultiSelect(option).getKendoMultiSelect();
			var assSel = $("select[name=detailAssignSel]",wrap).kendoMultiSelect(option).getKendoMultiSelect();
			var userIds = task.userids;
			var manages = [];
			// 初期化設定
			if ((task.manager && task.manager != "") || (task.assign && task.assign != "") ) {
				manSel.value(task.manager.split(','));
				assSel.value(task.assign.split(','));
			} else {
				var assignIds = userIds.split(',');
				var managerIds = getManagerUsers();
				manages = managerIds.split(',');
				manages.push(task.userid);
				assignIds.forEach(function(idx){
					var index = $.inArray(idx,manages);
					if (index >= 0){
						manages.splice(index,1);
					}
				});
				manSel.value(manages);
				assSel.value(assignIds);
			}
			
			$("[name=saveBtn]",wrap).on("click",function(){
				var manager = manSel.value();
				var assign = assSel.value();
				var updateValues = '';
				if (task.manager != manager.join(',')) {
					updateValues = {manager:manager.join(',')};
				}
				if (task.assign != assign.join(',')) {
					if (updateValues == "") updateValues = {};
					updateValues['assign'] = assign.join(',');
				}
				if (updateValues != '') {
					gantt.dataSource.update(task,updateValues);
					gantt.dataSource.sync();
				}
				manSel.destroy();
				assSel.destroy();
				multiSel.destroy();
			});
			$("[name=closeBtn]",wrap).on("click",function(){
				manSel.destroy();
				assSel.destroy();
				multiSel.destroy();
			});
		}
	}).getKendoWindow();
	win.center().open();
}
// タスク別権限設定
function isDetailRole(){
	return $("#hidDetailRole").val() == CUS_LABEL.TRUE;
}
// 登録ユーザーId
function getUserId(){
	return $("#hidUserId").val();
}
// 権限チェック
function checkCurrentRole(updateType,curId,task){
	// 権限情報
	var role = getRoleInfo(task,curId);
	// 権限タイプ「明細編集」
	if (updateType == CUS_LABEL.ROLE_EDIT) {
		return role.isTaskRole && role.isHadTaskRole ? (role.isTaskAssign || role.isTaskManager) : (role.isManager || (role.isAssign && role.isCurUser));
	// 権限タイプ「明細参照」
	} else if (updateType == CUS_LABEL.ROLE_READ)
		return role.isTaskRole && role.isHadTaskRole ? (role.isTaskAssign || role.isTaskManager || role.isCurUser ) : (role.isManager || role.isAssign);
	// 権限タイプ「タスク権限編集」
	else if (updateType == CUS_LABEL.ROLE_TASK)
		return role.isTaskRole && role.isHadTaskRole ? role.isTaskManager : (role.isManager || (role.isAssign && role.isCurUser));
	return false;
}
// 権限情報
function getRoleInfo(task,curId) {
	// 権限控制
	//　登録ユーザー管理者フラグ
	var isManager = $("#hidManager").val();
	//　登録ユーザー担当者フラグ
	var isAssign = $("#hidAssign").val();
	//　登録ユーザー該当タスクの権限チェック
	var taskRes = taskRoleCheck(task,curId);
	var role = {
		//　登録ユーザー管理者フラグ
		isManager : isManager == CUS_LABEL.TRUE,
		//　登録ユーザー担当者フラグ
		isAssign : isAssign == CUS_LABEL.TRUE,
		//　登録ユーザー該当タスク担当者フラグ
		isCurUser : curId == task.userid || task.userids.indexOf(curId) >= 0,
		//　登録ユーザー該当タスクの権限の担当者フラグ
		isTaskAssign : taskRes == CUS_LABEL.Assign, 
		//　登録ユーザー該当タスクの権限の管理者フラグ
		isTaskManager : taskRes == CUS_LABEL.Manager,
		//　登録ユーザー該当タスクの権限の指定フラグ
		isHadTaskRole : taskRes != '',
		isTaskRole : isDetailRole()
	};
	return role;
}
//　登録ユーザー該当タスクの権限チェック
function taskRoleCheck(item,userId){
	//　タスク権限あり
	if (item.manager != "" || item.assign != "") {
		//　タスク権限の管理フラグ
		if (item.manager.indexOf(userId) >= 0) return CUS_LABEL.Manager;
		//　タスク権限の担当フラグ
		if (item.assign.indexOf(userId) >= 0) return CUS_LABEL.Assign;
		//　タスク権限なし
		else return item.manager + item.assign;
	}
	//　タスク権限無効
	return '';
}
// 変更トリガー取消
function stopTaskEdit(e){
	// ツールの変更取消
	e.sender.dataSource.cancelChanges(e.task);
	e.preventDefault();
}
// エラー内容フォーマット
function errorMsgFormat(msg){
	// 指定メッセージフラグ
	var isHadMessage = false;
	// 指定エラーリストチェック
	CUS_LABEL.ERROR.forEach(function(err){
		// 該当エラー指定メッセージあり
		if (msg.indexOf(err.key) >= 0 && !isHadMessage) {
			// メッセージ変更
			msg = err.message;
			isHadMessage = true;
		}
	});
	return msg;
}
function getManagerUsers(){
	return $("#hidManagerIds").val();
}
function getAssignUsers(){
	return $("#hidAssignIds").val();
}
// 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy END
</script>
<input type="hidden" value="{!curUserId}" id="hidUserId"/>
<input type="hidden" value="{!isAssign}" id="hidAssign"/>
<input type="hidden" value="{!isManager}" id="hidManager"/>
<input type="hidden" value="{!mainProjectId}" id="hidMainProjectId"/>
<!-- 2018/11/15 顾客最后操作的内容，自动记录 by zy BEGIN -->
<!-- レイアウト -->
<input type="hidden" value="{!layoutJSON}" id="hidCookieJson"/>
<!-- フィルート -->
<apex:inputhidden id="hidfieldSet" value="{!fieldJson}"/>
<!-- 並べ替え -->
<apex:inputhidden id="hidSortSet" value="{!sortJSON}"/>
<!-- プロジェックト表示タイプ -->
<input type="hidden" id="hidGanttType" value="{!ganttType}" />
<!-- 予定と実績-->
<input type="hidden" id="hidTaskView" value="{!taskViewFlag}" />
<!-- 担当者-->
<input type="hidden" id="hidTaskUser" value="{!projectUserId}" />
<!-- 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy BEGIN -->
<input type="hidden" id="hidProjectMode" value="{!projectMode}"/>
<!-- 2018/11/30 時間軸を日にした際に時間単位で表示される。日単位で切り替えできるように改善対応 by zy END -->
<!-- 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy BEGIN -->
<input type="hidden" id="hidDepartOptJson" value="{!departOptJson}"/>
<!-- 2020/08/31 担当部署列の追加、ユーザに紐づく部署ではなく、選択リストを引用するように by zy END -->
<!-- 2020/10/30 プロジェクトオブジェクトのレコードにプロジェクトコードを作成し by zy BEGIN -->
<input type="hidden" id="hidProjectFieldName" value="{!projectFieldName}"/>
<!-- 2020/10/30 プロジェクトオブジェクトのレコードにプロジェクトコードを作成し by zy END -->
<!--2020/10/30 2.14.特定日のマーキング機能、スケジュールのなかでポイントをうち、右の表示マークをつける機能 by zy BEGIN-->
<input type="hidden" id="hidMarkJson" value="{!markJsons}"/>
<!--2020/10/30 2.14.特定日のマーキング機能、スケジュールのなかでポイントをうち、右の表示マークをつける機能 by zy END-->
<!-- 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy BEGIN -->
<input type="hidden" id="hidDetailRole" value="{!projectMain.RoleDetailFlg__c}"/>
<input type="hidden" id="hidManagerIds" value="{!projectMain.ManagerUser__c}"/>
<input type="hidden" id="hidAssignIds" value="{!projectMain.AssignUser__c}"/>
<!-- 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy END -->
<!-- 2018/11/15 顾客最后操作的内容，自动记录 by zy END -->
<div id="wrapTooBar">
	<div id="leftBar">
		<span id="projectTitle" style="color: #000;font-size: 1.3em;">
			{!projectMain.name}
			<!-- 2020/10/30 プロジェクトオブジェクトのレコードにプロジェクトコードを作成し by zy BEGIN -->
			<apex:outputpanel rendered="{!projectFieldName != null && projectMain[projectFieldName] != ""}">
				({!projectMain[projectFieldName]})
			</apex:outputpanel>
			<!-- 2020/10/30 プロジェクトオブジェクトのレコードにプロジェクトコードを作成し by zy END -->
		</span>
	</div>
	<div id="rightBar">
		<div style="float:left;" class="toobarProject {!if(projectOpts.size>0,'','noShowClass')}">
			<apex:selectList id="userDropProjects" style="width:200px">
				<apex:selectOptions value="{!projectOpts}"/>
			</apex:selectList>
		</div>
		 <span style="width:80px">
			<!-- 2020/09/30 右上のタスク選択リストに自分が関連するタスクのみ表示機能と検索機能運用が始まると200以上のタスクが作られることが想定されるため探しやすくするため  by zy BEGIN-->
			<span class="k-icon k-i-user btnSpan {!if(isPublicFlg, 'selected', '')}" title="⾃分が関連するプロジェクトのみ表⽰" onclick="refreshProjectOpts()" id="publicMode"></span>
			<!-- 2020/09/30 右上のタスク選択リストに自分が関連するタスクのみ表示機能と検索機能運用が始まると200以上のタスクが作られることが想定されるため探しやすくするため  by zy END-->
			<span class="k-icon k-i-file-ppt btnSpan" title="新規プロジェックト" onclick="popupProject();"></span>
			<span class="managerClass k-icon k-i-gear btnSpan {!if(isManager,'','disableClass')}" title="プロジェックト変更" onclick="popupEditProject()"></span>
			<span class="k-icon k-i-myspace btnSpan" title="マルチタスク" onclick="showInTask()"></span>
			<!-- 2019/03/15 マルチタスクの表示を切り替える by cxw BEGIN -->
			<span class="k-icon k-i-ungroup btnSpan {!IF(finishMode, 'selected', '')}" title="{!IF(finishMode, '有効なプロジェクト', 'アーカイブ済みのプロジェクト')}" mode="{!finishMode}" onclick="if(checkDisable(this)) return; changeFinishMode(!(this.getAttribute('mode') == 'true'));" id="cFinishMode"></span>
		 	<!-- 2019/03/15 マルチタスクの表示を切り替える by cxw END -->
		 </span>
	</div>
</div>
<div id="body" style="position: relative;width: 100%;height:800px">
<div id="warpBox">
	<!-- 2020/09/30 任意行を非表示にする。もしくはフィルター機能。 by zy BEGIN -->
	<div class="wrapLeft">
	<!-- 2020/09/30 任意行を非表示にする。もしくはフィルター機能。 by zy END -->
		<div id="selectPanel" style="background: #eae8e8">
			<table>
				<tr>
					<td >担当者</td>
					<td class="userClass"><apex:inputfield value="{!newLead.OwnerId}" id="ownerInput" /></td>
					<td>開始</td>
					<td>
						<apex:inputfield value="{!newLead.SearchDate__c}" id="startDt" style="width:100px;" styleClass="k-input k-textbox"/>
					</td>
				</tr>
				<tr>
					<td >取引先</td>
					<td class="userClass"><apex:inputfield value="{!newLead.refAccount__c}" id="contactInput" /></td>
					<td>終了</td>
					<td>
						<apex:inputfield value="{!newLead.LeadReceiptDate__c}" id="endDt" style="width:100px;" styleClass="k-input k-textbox"/>
					</td>
				</tr>
				<tr>
					<td>件名</td>
					<td colspan="3">
						<input type="text" name="inputText" id="taskName" style="width:185px" />
						行動<input type="radio" name="selectType" checked="checked" value="1" onchange="floatPanelHide()"/>
						ToDo<input type="radio" name="selectType" value="2" onchange="floatPanelHide()"/>
						<button class="k-button k-button-icontext k-gantt-create" style="float:right;" type="button" onclick="noAssignTasks()">
							<span>検索</span>
						</button>
					</td>
				</tr>
			</table>
		</div>
		<div id="sibear"></div>
		<div id="floatPanel">
			<div class="k-button" onclick="taskChange()">
				<span class="k-icon k-i-redo" style="width:30px;height:30px;font-size: 22px;" ></span>
			</div>
			<div  class="k-button" style="margin-top:10px;"  onclick="floatPanelHide()">
				<span class="k-icon k-i-cancel" style="width:30px;height:30px;font-size: 22px;"></span>
			</div>
		</div>
	</div>
	<!-- 2020/09/30 任意行を非表示にする。もしくはフィルター機能。 by zy BEGIN -->
	<div id='splitVertical' style="height:99%;">
		<div id="gantt30" class="chgDiv" style="width:calc(100% - 3px);"> </div>
		<div id='ganttNew'  style="width:calc(100% - 3px);"/>
	</div>
	<!-- 2020/09/30 任意行を非表示にする。もしくはフィルター機能。 by zy END -->
</div>
</div>
<div id="toobalTemplate">
	<div>
	    <ul id="align" style="float:left;">
	 		<!-- 新規タスク -->
	        <li class="plusClass {!if(isManager,'','disableClass')} {!if(projectOpts.size>0,'','noShowClass')}" data-icon="plus" onclick="addTask();"></li>
	        <!-- タスク削除 -->
		 	<li title="タスク削除" class="disableClass noSelClass {!if(projectOpts.size>0,'','noShowClass')}" data-icon="delete" onclick="removeTask();"></li>
	        <!-- タスク上 -->
	        <li class="disableClass noSelClass {!if(projectOpts.size>0,'','noShowClass')}" data-icon="arrow-chevron-up"  onclick="moveTopTask();"></li>
	        <!-- タスク下 -->
	        <li class="disableClass noSelClass {!if(projectOpts.size>0,'','noShowClass')}" data-icon="arrow-chevron-down" onclick="moveNextTask();"></li>
	        <!-- タスクleft -->
	        <li class="disableClass noSelClass {!if(projectOpts.size>0,'','noShowClass')}" data-icon="arrow-chevron-left" onclick="moveLeftTask();"></li>
	 	 	<!-- タスクright -->
	 	 	<li class="disableClass noSelClass {!if(projectOpts.size>0,'','noShowClass')}" data-icon="arrow-chevron-right" onclick="moveRightTask();" > </li>
	    </ul>
	    <!-- 2018/12/30 拡大機能[+/-]ボタンにより、ZOOMのバーにより、全体はズーム機能 by cxw BEGIN -->
	    <div data-role="buttongroup" class="k-widget k-button-group {!if(projectOpts.size>0,'','noShowClass')}" role="group" tabindex="0" style="float: left;">
			<span role="button" class="k-button k-button-icon" 
				onclick="changeZoomStatus.call(this, -1);" 
				id="sub-font-size" min="1">
				<span class="k-icon k-i-zoom-out"></span>
			</span>
			<span class="k-button k-button-icon k-state-disabled" title="フォントのサイズ" style="color: #000;">
				<span id="change-font-size-panel" style="padding: 5px;cursor: pointer;" onclick="changeZoomStatus((parseInt(this.innerText) - (parseInt(this.getAttribute('normal')) || 12)) * -1)" normal="12">{!fontSizeInt}</span>
			</span>
			<span role="button" class="k-button k-button-icon" 
				onclick="changeZoomStatus.call(this, 1);" 
				id="add-font-size" max="100">
				<span class="k-icon k-i-zoom-in"></span>
			</span>
		</div>
		<!-- 2018/12/30 拡大機能[+/-]ボタンにより、ZOOMのバーにより、全体はズーム機能 by cxw END -->
		<div class="{!if(projectOpts.size>0,'','noShowClass')}" style="margin-left:5px;padding-left:5px;border-left: 1px solid #d5d5d5;display:none;">
			開始 <apex:inputfield value="{!newLead.SearchDate__c}" id="filterStartDt" onchange="dateChange()" 
						style="width:100px;margin-left:2px;" styleClass="k-input k-textbox"/>
		</div>			
		<div class="{!if(projectOpts.size>0,'','noShowClass')}" style="margin-left:5px;padding-left:5px;border-left: 1px solid #d5d5d5;display:none;">	
			終了 <apex:inputfield value="{!newLead.SearchDate__c}" id="filterEndDt" onchange="dateChange()" 
						style="width:100px;margin-left:2px;" styleClass="k-input k-textbox"/>
    	</div>
		<!-- 2018/11/15 8.予定と実績を表示させる、させないの切り替え by zy BEGIN -->
		<div id="leadView" class="{!if(projectOpts.size>0,'','noShowClass')} k-button k-button-icon" title="予定表示" onclick="taskViewFun()">	
			<!-- 予定と実績 -->
			<span class="k-icon k-i-mirror" style="transform:rotate(90deg);" ></span>
		</div>
		<!-- 2020/08/31 バージョン管理。保存したらバージョン1、2と保存して後から呼び出せる機能、もしくはexcel出力 できるように。 by zy BEGIN -->
		<div class="{!if(projectOpts.size>0,'','noShowClass')} k-button k-button-icon" title="Excel出力" onclick="excelExport()">	
			<span class="k-icon k-i-file-excel" ></span>
		</div>
		<!-- 2020/09/30 任意行を非表示にする。もしくはフィルター機能。 by zy BEGIN -->
		<div class="{!if(projectOpts.size>0,'','noShowClass')} k-button k-button-icon"  title="分割" id="splitGantt" onclick="splitNewGantt()">	
			<span class="k-icon k-i-categorize" ></span>
		</div>
		<!-- 2020/09/30 任意行を非表示にする。もしくはフィルター機能。 by zy END -->
		<!-- 2020/08/31 バージョン管理。保存したらバージョン1、2と保存して後から呼び出せる機能、もしくはexcel出力 できるように。 by zy END -->
		<!-- 2018/11/15 8.予定と実績を表示させる、させないの切り替え by zy END -->
		<div class="{!if(projectOpts.size>0,'','noShowClass')}" style="margin-left:5px;padding-left:5px;border-left: 1px solid #d5d5d5;">
			担当者
			<apex:selectList id="userDropDown">
				<apex:selectOption itemValue="" itemLabel="{!$Label.ps__msg_005_0035}"/>
			</apex:selectList>
		</div>
		<div style="margin-left:5px;padding-left:5px;border-left: 1px solid #d5d5d5;">
			<span class="k-icon k-i-refresh btnSpan" style="margin-top: 2px;" title="再読み込み" onclick="refreshAllPage()"></span>
		</div>
		<!-- 2018/11/15 8.予定と実績を表示させる、させないの切り替え by zy BEGIN -->
		<div id="basePlanName" style="margin-left:5px;padding-left:5px;border-left: 1px solid #d5d5d5;{!if(projectMain.PlanBaseName__c != '' , '' ,'display:none;')};">
			<div id="projectPlanName" title="{!projectMain.PlanBaseName__c}">{!projectMain.PlanBaseName__c}</div>
			<span class="k-icon k-i-delete" title="基準削除" onclick="deleteBasePlan()"></span>
		</div>
		<!-- 2018/11/15 8.予定と実績を表示させる、させないの切り替え by zy END -->
		</div>
	</div>
<div id="projectWindow">
	<div class="projectEditoPanel">
		プロジェックト名 
		<div style="position: relative;">
		<div class="cusRepuiredClass"></div>
		<input class="k-textbox" id="projectName" maxlength="80" style="width: calc(100% - 4px);margin-left:4px;" />
		</div>
		<!-- 2020/10/30 プロジェクトオブジェクトのレコードにプロジェクトコードを作成し by zy BEGIN --> 
		<apex:outputPanel rendered="{!projectFieldLabel != ''}">
			{!projectFieldLabel} 
			<div style="position: relative;">
			<input class="k-textbox" id="projectEditTitle" maxlength="80" style="width: calc(100% - 4px);margin-left:4px;" />
			</div>
		</apex:outputPanel>
		<!-- 2020/10/30 プロジェクトオブジェクトのレコードにプロジェクトコードを作成し by zy END --> 
		マネージャー<span class="k-icon k-i-question helpClass" title="該当プロジェクトの基本情報とすべてタスクを参照、変更可能"></span>
		<div style="position: relative;">
		<div class="cusRepuiredClass"></div>
		<apex:selectList id="managerTree" style="width: calc(100% - 4px);margin-left:4px;">
			<apex:selectOption itemValue="" itemLabel=""/>
		</apex:selectList>
		</div>
		担当者<span class="k-icon k-i-question helpClass" title="自分のタスクのみ参照、変更可能"></span>
		<apex:selectList id="dropdowntree" style="width: 100%;">
			<apex:selectOption itemValue="" itemLabel=""/>
		</apex:selectList>
		<div class="panelToolBar">
			<span style="margin-right:5px;">開始</span><input class="k-input" id="projectStartDt" style="width: 25%;" />
			<span style="margin-right:5px;margin-left:5px;">終了</span><input class="k-input" id="projectEndDt" style="width: 25%;" />
			公開<span class="k-icon k-i-question helpClass" title="公開の場合、すべてユーザは該当プロジェクト情報を参照可能"></span>
			<span style="position: relative;top: 7px;">
				<input type="checkbox" id="groupRole" class="k-checkbox"/>
	           <label class="k-checkbox-label" style="margin-top: 1px;" for="groupRole"></label>
	        </span>
	        日単位<span class="k-icon k-i-question helpClass" id="dateModeHelp"></span>
				<input type="checkbox" value="day" id="chgDay" class="k-checkbox"/>
	          	<label class="k-checkbox-label" style="margin-top: 8px;" for="chgDay"></label>
			<!-- 2019/03/15 マルチタスクの表示を切り替える by cxw BEGIN -->
	       	アーカイブ<span class="k-icon k-i-question helpClass" title="このプロジェクトをアーカイブします。"></span>
				<input type="checkbox" value="day" id="over" class="k-checkbox"/>
	          	<label class="k-checkbox-label" style="margin-top: 8px;" for="over"></label>
			<!-- 2019/03/15 マルチタスクの表示を切り替える by cxw END -->
		</div>
		<!-- 2019/12/30 タスクがカレンダーに表示させるか、表示させない切替対応 by zy BEGIN -->
		<div class="panelTooBar">
			カレンダー非表示<span class="k-icon k-i-question helpClass" title="タスク新規作成の際に、該当タスクがカレンダーに表示・非表示の初期値"></span>
			<span style="position: relative;top: 3px;">
				<input type="checkbox" id="calendarChk" class="k-checkbox"/>
	           <label class="k-checkbox-label" style="margin-top: 1px;" for="calendarChk"></label>
	        </span>
	        <!-- 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy BEGIN -->
			タスク別権限設定<span class="k-icon k-i-question helpClass" title="タスク単位でマネージャー、担当者を設定する"></span>
			<span style="position: relative;top: 3px;">
				<input type="checkbox" id="taskRoleChk" class="k-checkbox"/>
				<label class="k-checkbox-label" style="margin-top: 1px;" for="taskRoleChk"></label>
		<!-- 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy END -->
	        </span>
		</div>
		<!-- 2019/12/30 タスクがカレンダーに表示させるか、表示させない切替対応 by zy END -->
		説明
		<table cellspacing="4" cellpadding="0" class="k-widget k-editor k-header" style="height:130px;" role="presentation">
			<tbody>
				<tr role="presentation">
					<td class="k-editor-toolbar-wrap" role="presentation">
					<ul class="k-editor-toolbar" role="toolbar" aria-controls="projectDescribe" data-role="editortoolbar"></ul></td></tr>
				<tr><td class="k-editable-area">
					<textarea id="projectDescribe"  class="k-content k-raw-content k-textbox" maxlength="255" rows="5" cols="30"></textarea>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
	<button class="k-button k-button-icontext k-gantt-create" style="width:48%;float:right;font-size: 15px;" type="button" onclick="hideKendoWin()">
		<span>キャンセル</span>
	</button>
	<button class="k-button k-button-icontext k-gantt-create" style="width:48%;font-size: 15px;" type="button" onclick="saveKendoWin()">
		<span>保存</span>
	</button>
</div>
<div id="dragWindow">
</div>
<!-- 2018/08/08 メモ追加　by　zy BEGIN -->
<div id="memoArea">
	<textarea class="memoAreaClass" style="width:100%;height:100%" onkeyup="keyupStopEditor()" onblur="textAreaBlur()"></textarea>
</div>
<!-- 2018/08/08 メモ追加　by　zy END -->
</apex:pageBlock>
</apex:form>
<!-- 2018/11/15 8.予定と実績を表示させる、させないの切り替え by zy BEGIN -->
<script id="confirmWin" type="text/x-kendo-template">
<div class="winScan">
	<div class="confirmWrap">
		<div class="title">このプロジェックトの基準を作成します。</div>
		<div class="confirmMsg">
			これは実績スケジュールと比較するために用いられます。
		</div>
		<div class="confirmMsg">
			プロジェクトの基準を設定する前であれば、基準スケジュールと実績スケジュールは同じものです。
		</div>
		<div class="confirmMsg">
			基準を設定した後は、実績スケジュールだけが今後行われる変更の影響を受けます
		</div>
		<div class="inputClass">基準の保存名<input id="baseName" maxlength="255" type="text"/></div>
		<div class="footBtn">
			<input type="button" class="btn" style="width:100px;" onclick="hideConfirm()" value="キャンセル">
			<input type="button" class="btn" style="width:100px;background:dodgerblue;color:white;" onclick="saveBasePlan()" value="保存">
		</div>
	</div>
<div>
</script>
<!-- 2019/03/15 変更履歴機能追加 by cxw BEGIN -->
<script type="text/template" id="console-template">
<div id="console" style="position:fixed; z-index: 999999; background-color: #fffefe; box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);">
	<span class="k-icon k-i-close" style="position: absolute; font-size: 16px; top: 12px; right: 12px;cursor: pointer;"></span>
	<div class="dialog">
	
	</div>
</div>	
</script>
<!-- 2019/03/15 変更履歴機能追加 by cxw END -->
<apex:form >
<apex:inputHidden value="{!mainProjectId}" id="hidProjectId" />
<!-- 2019/03/15 マルチタスクの表示を切り替える by cxw BEGIN -->
<apex:inputHidden value="{!finishMode}" id="finishMode" />
<!-- 2019/03/15 マルチタスクの表示を切り替える by cxw END -->
<!-- 2019/12/30 タスクがカレンダーに表示させるか、表示させない切替対応 by zy BEGIN -->
<apex:inputHidden value="{!isCalendarFlg}" id="hidCalendarFlg" />
<!-- 2019/12/30 タスクがカレンダーに表示させるか、表示させない切替対応 by zy END -->
<apex:inputHidden value="{!projectMain.PlanBaseName__c}" id="hidPlanName" />
<!-- 2020/09/30 右上のタスク選択リストに自分が関連するタスクのみ表示機能と検索機能運用が始まると200以上のタスクが作られることが想定されるため探しやすくするため  by zy BEGIN-->
<apex:inputHidden value="{!isPublicFlg}" id="hidIsPublicFlg"/>
<!-- 2020/09/30 右上のタスク選択リストに自分が関連するタスクのみ表示機能と検索機能運用が始まると200以上のタスクが作られることが想定されるため探しやすくするため  by zy END-->
<!-- 2020/09/31 画面スクロールを２分割したい by zy BEGIN -->
<!-- 分割フラグ-->
<apex:inputhidden id="hidSplitView" value="{!splitFlg}" />
<!-- 2020/09/31 画面スクロールを２分割したい by zy END -->
<apex:actionfunction name="saveProjectPlan" action="{!saveBasePlan}"/>
<apex:actionfunction name="changeProject" action="{!changeProejct}"/>
<!-- 2018/11/15 8.予定と実績を表示させる、させないの切り替え by zy END -->
</apex:form>
<!-- 2019/07/15 プロジェクト明細のURLをプロジェクト管理画面から出力できるように
陣屋コネクトとしての改善要望です。 by zy BEGIN -->
<apex:form >
<div id="chatterWindow" style="display: none;">
	<div class="projectEditoPanel">
		<!-- 2018/11/15 マネージャー、担当者でゆーざを指定する以外にChatterグループを指定 by zy BEGIN -->
		<!-- チャット -->
		チャターグループ
		<div style="position: relative;">
		<div class="cusRepuiredClass"></div>
		<apex:selectList id="chattertree01" size="1" style="width: 100%;">
			<apex:selectOption itemValue="" itemLabel=""/>
			<apex:selectOptions value="{!chatterOpts}" />
		</apex:selectList>
		</div>
		<!-- 2018/11/15 マネージャー、担当者でゆーざを指定する以外にChatterグループを指定 by zy END -->
		件名
		<input class="k-textbox" id="taskTitle" maxlength="80" style="width: calc(100% - 4px);margin-left:4px;" readonly="readonly" />
		メンション対象
		<span class="k-icon k-i-question helpClass" title="最大25人まで選択可能"></span>
		<apex:selectList id="chatterDropDown">
			<apex:selectOption itemValue="" itemLabel="{!$Label.ps__msg_005_0035}"/>
		</apex:selectList>
		<!-- 2019/12/30 進捗メモから投稿内容 BY zyz BEGIN -->
		<!--進捗メモ-->
		投稿内容
		<!-- 2019/12/30 進捗メモから投稿内容 BY zyz END -->
		<table cellspacing="4" cellpadding="0" class="k-widget k-editor k-header" style="height:130px;" role="presentation">
			<tbody>
				<tr role="presentation">
					<td class="k-editor-toolbar-wrap" role="presentation">
					<ul class="k-editor-toolbar" role="toolbar" aria-controls="projectDescribe" data-role="editortoolbar"></ul></td></tr>
					<tr><td class="k-editable-area">
					<!--2019/11/30 プロジェクト管理のchatter共有時、本文の文字数制限を大きく by zy BEGIN--> 
					<textarea id="taskDescribe"  class="k-content k-raw-content k-textbox" maxlength="9000" rows="5" cols="30"></textarea>
					<!--2019/11/30 プロジェクト管理のchatter共有時、本文の文字数制限を大きく by zy END--> 
					</td>
				</tr>
			</tbody>
		</table>
	</div>
	<div class="footBtn" style="margin:0px;">
		<button class="k-button k-button-icontext k-gantt-create" style="width:48%;font-size: 15px;float:left" type="button" onclick="chatterPost()">
			<span>共有</span>
		</button>
		<button class="k-button k-button-icontext k-gantt-create" style="width:48%;float:right;font-size: 15px;" type="button" onclick="hideChatterWin()">
			<span>キャンセル</span>
		</button>
	</div>
</div>
</apex:form>
<!-- 2019/07/15 プロジェクト明細のURLをプロジェクト管理画面から出力できるように
陣屋コネクトとしての改善要望です。 by zy END -->
<!--2020/10/30 2.14.特定日のマーキング機能、スケジュールのなかでポイントをうち、右の表示マークをつける機能 by zy BEGIN-->
<script id="markWindowTemp" type="text/x-kendo-template">
<div class="projectEditoPanel">
	<div class="k-edit-label">
		<label for="start">タイトル</label>
	</div>
	<div data-container-for="start" class="k-edit-field">
		<input type="text" name="markTxt" maxlength="20" class="k-input k-textbox" style="width:144px" />
	</div>
	<div class="k-edit-label">
		<label for="start">日付</label>
	</div>
	<div data-container-for="start" class="k-edit-field">
		<input type="text"  name="markDate" title="開始" class="k-input" />
	</div>
	<div class="k-edit-label">
		<label for="start">マーク種類</label>
	</div>
	<div data-container-for="start" class="k-edit-field">
		<input type="text"  name="markSel" title="開始" class="k-input" style="width:144px" />
	</div>
</div>
<div class="footBtn" style="margin:0px;">
	<button class="k-button k-button-icontext k-gantt-create" style="width:25%;font-size: 15px;float:left;display:none" type="button" name="deleteBtn">
		<span>削除</span>
	</button>
	<button class="k-button k-button-icontext k-gantt-create" style="width:25%;float:right;font-size: 15px;" type="button" name="closeBtn">
		<span>キャンセル</span>
	</button>
	<button class="k-button k-button-icontext k-gantt-create" style="width:25%;font-size: 15px;float:right;margin-right:10px;" type="button" name="saveBtn">
		<span>保存</span>
	</button>
</div>
</script>
<!-- 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy BEGIN -->
<script id="roleSetWindowTemp" type="text/x-kendo-template">
<div class="projectEditoPanel">
	マネージャー<span class="k-icon k-i-question helpClass" title="該当プロジェクトの基本情報とすべてタスクを参照、変更可能"></span>
	<div style="position: relative;">
	<select name="detailMamgerSel"></select>
	</div>
	担当者<span class="k-icon k-i-question helpClass" title="自分のタスクのみ参照、変更可能"></span>
	<div style="position: relative;">
	<select name="detailAssignSel"></select>
	</div>
</div>
<div class="footBtn" style="margin:0px;">
	<button class="k-button k-button-icontext k-gantt-create" style="width:48%;float:right;font-size: 15px;" type="button" name="closeBtn">
		<span>キャンセル</span>
	</button>
	<button class="k-button k-button-icontext k-gantt-create" style="width:48%;font-size: 15px;float:right;margin-right:10px;" type="button" name="saveBtn">
		<span>保存</span>
	</button>
</div>
</script>
<!-- 2020/10/31 タスク単位でマネージャー、担当者を設定できるようにする。設定していない場合はその親プロジェクトの権限を参照する。 by zy END -->
<!--2020/10/30 2.14.特定日のマーキング機能、スケジュールのなかでポイントをうち、右の表示マークをつける機能 by zy END-->
<!-- 2020/10/31 担当者を複数設定できるように  by zy BEGIN -->
<div id="userEditorWrap"/>
<!-- 2020/10/31 担当者を複数設定できるように  by zy END -->
</apex:page>