<!-- タイムテーブル -->
<apex:page controller="RoomScheduleReport"  sidebar="false" action="{!init}" tabStyle="TimeTableTab__tab"
title="{!$Label.ps__msg_005_0032}" showheader="{!!isIncludeMode}" id="page">


<meta name="viewport" content="width=device-width,initial-scale=0.5,user-scalable=yes"/>
<!-- Load jQuery -->
<apex:stylesheet value="{!URLFOR($Resource.kendoFiles, 'css/ui-lightness/jquery-ui-1.10.2.custom.min.css')}"/>
<!-- 2019/04/30 タイムテーブルを開き、スクロール by zy BEGIN
<apex:stylesheet value="{!URLFOR($Resource.kendoFiles, 'styles/kendo.common.min.css')}"/>
<apex:stylesheet value="{!URLFOR($Resource.kendoFiles, 'styles/kendo.default.min.css')}"/>
-->
<apex:stylesheet value="{!URLFOR($Resource.kendoFiles2018, 'styles/kendo.common.min.css')}"/>
<apex:stylesheet value="{!URLFOR($Resource.kendoFiles2018, 'styles/kendo.default.min.css')}"/>
<!--
<apex:includeScript value="{!URLFOR($Resource.kendoFiles, 'js/jquery.min.js')}"/>
-->
<apex:includeScript value="{!URLFOR($Resource.kendoFiles2018, 'js/jquery.min.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.kendoFiles, 'js/jquery-ui-1.10.2.custom.min.js')}"/>
<!--
<apex:includeScript value="{!URLFOR($Resource.kendoFiles, 'js/kendo.web.min.js')}"/>
-->
<apex:includeScript value="{!URLFOR($Resource.kendoFiles2018, 'js/kendo.all.min.js')}"/>
<!-- 2019/04/30 タイムテーブルを開き、スクロール by zy END  -->
<apex:includeScript value="{!URLFOR($Resource.queryfiles, 'js/jquery.blockUI.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.dateplugin, 'date/date.js')}"/>
<!-- 2014/11/25 六曜計算追加 -->
<apex:includeScript value="{!URLFOR($Resource.dateplugin, 'date/qreki.js')}" />
<apex:includeScript value="{!URLFOR($Resource.dateplugin, 'date/qrekiHelp.js')}" /> <!-- 和暦LIBのサポート関数 -->
<!-- 2014/11/27 CKEDITOR追加 -->
<apex:includeScript value="{!URLFOR($Resource.ckeditor, 'ckeditor.js')}" />
<apex:includeScript value="{!URLFOR($Resource.ckeditor, 'util.js')}" />

<apex:includeScript value="{!$Resource.CommJs}"/>
<apex:includeScript value="{!$Resource.planExtendPlug}"/>

<!-- Load YUI -->
<apex:stylesheet value="{!URLFOR($Resource.yahooFiles, 'css/skin.css')}"/>
<apex:includeScript value="{!URLFOR($Resource.yahooFiles, 'js/yahoo-dom-event.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.yahooFiles, 'js/container-min.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.yahooFiles, 'js/animation-min.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.yahooFiles, 'js/dragdrop-min.js')}"/>
<!-- 2015/07/10 KeyDefine追加 -->
<apex:includeScript value="{!URLFOR($Resource.queryfiles, 'js/keymaster.js')}"/>

<!-- 2016/10/25 部屋タイプは複数選択できる機能対応 BEGIN -->
<apex:stylesheet value="{!URLFOR($Resource.multiselectlib, 'css/jquery.multiselect.css')}"/>
<apex:includeScript value="{!URLFOR($Resource.multiselectlib, 'js/jquery.multiselect.min.js')}"/>
<!-- 2016/10/25 部屋タイプは複数選択できる機能対応 END -->
<!-- 2019/09/15 指定日自动记忆機能対応 WGCH BEGIN -->
<c:UserConfigComp functiontype="KREP"/>
<!-- 2019/09/15 指定日自动记忆機能対応 WGCH END -->
<!-- 2016/06/09 共通JS定数を定義追加する -->
<c:CommHeaderComp loadJsLib="false"/>
<!-- 2016/11/16 見積明細設定機能対応 BEGIN by zh -->
<!--  2019/11/15 最近利用している商品一覧機能を提供する BY zyz BEGIN -->
<c:AutoAccountMasterComp />
<!--  2019/11/15 最近利用している商品一覧機能を提供する BY zyz END -->
<!-- JSで単価金額計算ロジック -->
<c:CommProductFeeCalJsComp />
<!-- 2016/11/16 見積明細設定機能対応 END by zh -->
<style type="text/css">
html {overflow-x: hidden; overflow-y: hidden; }
/* 商品关键字检索框的设定 */
/* 2016/11/16 見積明細設定機能対応 BEGIN by zh */
/* AutoComplete */
.ui-autocomplete {
    max-height: 200px;
    max-width: 450px;
    overflow-y: auto;
    /* prevent horizontal scrollbar */
    overflow-x: hidden;
}
/* IE 6 doesn't support max-height
 * we use height instead, but this forces the menu to always be this tall
 */
* html .ui-autocomplete {
    height: 200px;
    width: 400px;
}
.ui-autocomplete-loading { background: white url({!URLFOR($Resource.queryfiles, "css/ui-lightness/images/ui-anim_basic_16x16.gif")}) right center no-repeat; }
.ui-autocomplete { position: absolute; cursor: default;z-index:30 !important;}
/* 2016/11/16 見積明細設定機能対応 END by zh */
.isAssignedStatus{
    height:24px; 
    border:1px black dotted;
    width:100%; 
    position:relative;
    overflow:hidden;
    padding: 0px;
   /* border: 0px;*/
    margin: 0px;
} 
.isEmptyStatus{background:#FFFFFF;}         /* 空室 */
.room_isAssignedStatus_1{background:{!BLANKVALUE((statusColor.RS_RoomAssigned),"#00ccff")};}	/* 割当済 */
/* 2019/02/28 滞在・外出状態の管理 WGCH BEGIN */
.isOutStatus{background:{!BLANKVALUE((statusColor.RS_RoomOut),"#CCCCCC")};} /* #C1FFC1外出 */
/* 2019/02/28 滞在・外出状態の管理 WGCH END */
.room_isStayStatus_1{background:{!BLANKVALUE((statusColor.RS_RoomStay),"#90EE90")};}			/* 滞在 */
.room_isChkOutDayStatus{background:{!BLANKVALUE((statusColor.RS_RoomChkOutDay),"#FDD017")};}	/* 出発予定 */
.room_isChkOutStatus{background:{!BLANKVALUE((statusColor.RS_RoomChkOut),"#F75D59")};}		/* 出発 */
.isBadStatus{background:{!BLANKVALUE((statusColor.RS_RoomBad),"#2554C7")};}				/* 故障 */
.isCleanStatus{background:{!BLANKVALUE((statusColor.RS_RoomNoClean),"#B0C4DE")};}		/* 未清掃      ->判断条件は判断要 */
/* 割当済 */
.bDiv{
	height:25px; 
    width:0px; 
    position:relative;
    overflow:hidden;
    padding: 0px;
   /* border: 0px;*/
    margin: 0px;
}
.isAssignedStatus .fnlabel {

}
/* 部屋・部屋タイプ情報表示制御 */
.roomNamelabel{
	margin-left:2px;
    overflow: hidden;
    position: relative;
    width: 100%;
}
div.hideCurrDate span.dateInput span.dateFormat{
   display:none;
}
span.dateInput span.dateFormat{
   display:none;
}
.tdcolcls {
	border-right:dotted 1px #CCC; 
	border-top:solid 1px #777
}
.headcol{
	margin-left:2px; 
	vertical-align: middle;
	border-top:solid 1px #777;
	border-right:solid 1px #777;
	word-break:keep-all;
	white-space:nowrap;
	overflow:hidden;
	text-overflow: ellipsis;
	width:100px;
	height:25px;
	font-size:13px; 
}
/* Tool Bar */
.toolBarExtCls {
	height:32px;
	/*
	background:#C0C0C0; 
	filter: progid:DXImageTransform.Microsoft.Gradient(startColorStr='#c1ea99',endColorStr='white',gradientType='0');
	background: -moz-linear-gradient(top, #c1ea99, white);
	background: -o-linear-gradient(top,#c1ea99, white);
	background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#c1ea99), to(white));
	*/
	word-break:keep-all;
	white-space:nowrap;
	vertical-align: middle;
	table-layout: fixed;
}
.firstHeadTd{
	-moz-box-sizing: border-box;
	-webkit-box-sizing: border-box;
	box-sizing: border-box;
}
[class*=orangeBackground]{
	background-color: orange;
}
/* 2017/08/10 故障部屋機能　追加　by　zy BEGIN*/
[class*=badRoomClass]{
	background-color: {!statusColor.RS_RoomBad};
}
/* 2017/08/10 故障部屋機能　追加　by　zy END*/
.autoSplitText
{
	white-space:nowrap; 
	-o-text-overflow: ellipsis;    /**//* for Opera */
	text-overflow:ellipsis; /* for internet explorer */ 
	width: 180px;
	display:block;
	overflow: hidden;
}

/*
.autoWidth
{
    white-space:nowrap;
    min-width: 10px;
}
.conerTd
{
	display: inline-block;
	border-top-left-radius:5px;
	border-top-right-radius:5px;
	border-bottom:5px solid red;
	color:white;
	border:5px solid white;
}*/
.tdSLine
{
	border-left:solid 1px #BBB;
}
.tdLeftSoldLineCls
{
	border-left:solid 1px #BBB;
}
.tdRightSoldLineCls
{
	/*border-right:solid 2px #BBB;*/
}
.tdDLine
{
	border-right:dotted 1px #CCC;
}
.detailTd31DAYS {
	width: 25px;
	text-align: center;
	border-right:dotted 1px #CCC;
	font-size: normal;
	font-weight: normal;
}
col.detailTdONEWEEK {
	width: 25px;
	min-width:25px;max-width:25px;
}
col.detailTd90DAYS {
	width: 40px;
	min-width:40px;max-width:40px;
}
col.detailTdONEDAY10M {
	width: 8px;
	min-width:8px;max-width:8px;
}
col.detailTdONEDAY30M {
	width: 25px;
	min-width:25px;max-width:25px;
}
col.detailTdONEDAY05M {
	width: 8px;
	min-width:8px;max-width:8px;
}
/*
.k-dropdown .k-dropdown-wrap{
    height: 21px;
}*/
div.growlUI h1, div.growlUI h2 {
    color: white; padding: 5px 5px 5px 5px; 
}
div.growlUI h2.entryTime, div.growlUI h2.departTime {
	min-width: 100px;
	white-space:nowrap;
}
.notifyMsgTable td{
	text-align: left
}
div.growlUI h2.roomLst {
	word-wrap: break-word;
	word-break: normal; 
	min-width: 200px;
}
.headerRow {
	height: 20px;
	min-height: 20px;
	/*border-spacing: 0px; !important;*/
}
.bodyRow {
	height: 30px;
	min-height: 30px;
}
/**** SF STYLE MODIFY *****/
/* pBody Css Style */
.apexp .bPageBlock.apexDefaultPageBlock .pbBody {
	margin-left: 0px;
	margin-bottom: 0px;
}
.bodyDiv .outerNoSidebar {
	padding-bottom: 0px;
}
body .bPageBlock {
	margin-bottom: 0px;
}
body .bPageFooter{
	display: none;
}
.noSidebarCell {
	margin-left: 0px;
	margin-right: 0px;
	padding-left: 0px;
	padding-right: 0px;
	padding-bottom: 0px;
}
/* DatePicker Css Type */
div.hideCurrDate span.dateInput span.dateFormat{
   display:none;
}
span.dateInput span.dateFormat{
   display:none;
}
/* CKEDITOR RICH TEXTAREA CSS */
.cke_contents {
    height: 80px !important;
}
/* KENDO UI CSS EDIT */
input.k-textbox {
	height: 24px;
}
.k-dropdown-wrap .k-input {
    height: 22px;
    padding:0px;
    margin-top: 0px;
}
#right_body .blockOverlay{
    background-color:rgb(238,238,238) !important;
    opacity: 0.2 !important;
}
.onDragLeadClass{
	background: grey !important;
}
.opacityDiv{
	filter: alpha(opacity=40);
    -moz-opacity: 0.4;
    -khtml-opacity:  0.4;
    opacity:  0.4;
    transition:  background .2s linear, color .2s linear;
    -moz-transition: background .2s linear, color .2s linear;
    -webkit-transition: background .2s linear, color .2s linear;
    -o-transition: background .2s linear, color .2s linear;
}
/* 2016/10/25 部屋タイプは複数選択できる機能対応 BEGIN */
.ui-state-default{
	overflow:hidden;
	/*width:225px;*/
	background-image: none;
	border-color: #c5c5c5;
	background-color: #EEEEEE;
	color: #2e2e2e;
	vertical-align: middle;
	font-weight: normal;
	margin-left: 2px;
	   height: 24px;
}
label.ui-corner-all.ui-state-hover{
	border: 1px solid #bcb4b0;
	background: #C7C1BD url(images/ui-bg_glass_100_fdf5ce_1x400.png) 50% 50% repeat-x;
	font-weight: normal;
	color: #2e2e2e;
}
.ui-widget {
	font-family:'MS UI Gothic','MS PGothic','Hiragino Kaku Gothic Pro','Osaka','Arial','Helvetica',sans-serif;
	font-size: 13px;
}
.ui-multiselect-checkboxes li{
	font-size: 13px;
}   
.ui-state-default .ui-icon {
	background-image: url({!URLFOR($Resource.kendoFiles, 'css/ui-lightness/images/ui-icons_222222_256x240.png')});
}
.ui-state-hover{
	border: 1px solid #bcb4b0;
	background: #C7C1BD url(images/ui-bg_glass_100_fdf5ce_1x400.png) 50% 50% repeat-x;
	font-weight: normal;
	color: #2e2e2e;
}
.spanIco{
	width: 20px;
	display: block;
	display: inline-block;
}
.spanText{
	/*width: 200px;*/
	display: block;
	display: inline-block;
	white-space: nowrap;
	text-overflow: ellipsis;
	overflow: hidden;
	text-indent: .33em;
	/* 2020/08/30 BUG-FIX-#7467-浏览器缩放问题改善 WGCH BEGIN */
	width: calc(100% - 20px) !important;
	/* 2020/08/30 BUG-FIX-#7467-浏览器缩放问题改善 WGCH END */
}
/* 2016/10/25 部屋タイプは複数選択できる機能対応 END */
.timeSpan{
/*
	border-radius: 10px;
	font-size: .9em;
    */
    /*border-bottom: 1px solid white;*/
    padding:0px 2px 0px 2px;
    margin-left: 3px;
    margin-top:1px;
}
.timeSpan:hover{
	background: lightblue;
}
.curTimeRow{
	background:lightyellow;
}
#timeDiv{
	/*width: 755px;*/
	height: auto;
    /*background: #ececec;*/
    padding-left: 6px;
    margin-left: 2px;
    overflow: hidden;
    display: inline-flex;
    white-space: nowrap;
    text-overflow: ellipsis;
}
#moreSpan{
    /*
	border-radius: 10px;
    background: gray;
     width: 100px; 
    font-size: .9em;
    padding: 2px;*/
    cursor: pointer;
}
table.timeRowTabl{
	table-layout: fixed;
	vertical-align: top;
    width:100%;
    border:0px;
}
#roomMessageTalbe td{
	padding:0px;
}
/* 2016/11/22 故障部屋一括登録機能対応 BEGIN */
.floatBadRoom{
	position: fixed;
	top: {!if(!isIncludeMode,'159px','34px')};
	width: 100%;
    height: 43px;
    overflow:hidden;
    background: darkgray;
}
.badRoomClass{
	background:{!statusColor.RS_RoomBad};
}
.badRoomDiv{
	font-size: 100%;
}
.badRoomToggleClass{
	/*2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN*/
	display: none !important;
	/*2017/03/27 故障部屋一括解除機能対応　by　zy END*/
}
/* 2016/11/22 故障部屋一括登録機能対応 END */
/*2017/01/25 新規画面の項目自定義機能　by　zy　BEGIN*/
.cusRepuiredClass{
	background-color: #c00;
    position: absolute;
    left: -4px;
    width: 3px;
    top: 1px;
    bottom: 1px;
}
.coloumn2Class{
	max-width: {!widthPx/4}px;
	word-wrap: break-word;
}
.coloumn1Class{
	max-width: {!widthPx*0.7}px;
	word-wrap: break-word;
}
/*2017/01/25 新規画面の項目自定義機能　by　zy　END*/
/*2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN*/
.cleanClass{
	border:1px solid red;
}
/*2017/03/27 故障部屋一括解除機能対応　by　zy END*/
/*2019/04/30 タイムテーブルを開き、スクロール by zy BEGIN*/
.editIcon{
	display:none; 
	opacity: .7; 
	position: fixed; 
	right: 0; 
	top: calc(50% - 40px); 
	z-index: 2;
}
/*2019/04/30 タイムテーブルを開き、スクロール by zy END*/
.jlock{
	border: none;
    width: 12px;
    height: 12px;
    position: absolute;
    top: -2px;
    left: -3px;
	background-image: url({!URLFOR($Resource.AppImages, 'extend/lock.ico')});
	background-size:contain;
}
</style>
<script>
// 2016/11/16 見積明細設定機能対応 BEGIN by zh
var _showFlg = {!(isPlanDetailFlag)};
if (typeof JINYACONNECT === "undefined") {
	JINYACONNECT = {};
}
if (typeof JINYACONNECT.CUSTOM === "undefined") {
	JINYACONNECT.CUSTOM = {};
} 
// clear the one row info
JINYACONNECT.CUSTOM.clearItemIdArr = new Array(':hidProductId',':hidProductNm',
     ':productName',':price',':orderNums',
     ':amoutPriceExcTax',':amoutPriceIncTax',':hidSyncInfo',':amoutPriceExcTax',':amoutPriceIncTax',
     ':hidAmoutPriceIncTax',':hidAmoutPriceExcTax',':hidPlandetail',':hidHadRoomFlag',
     // 2019/07/30 軽減税率機能対応 WGCH BEGIN
     // 支払種別未清空Bug修订
     ':hidPaymentType',
     // 2019/07/30 軽減税率機能対応 WGCH END
     // 2020/07/30 入湯税の自動入力機能について改善 zyz BEGIN
     ':hidBTaxAccMstId',':hidBTaxToPlanRowIndex',':hidBTaxAccMstItem',
     // 2020/07/30 入湯税の自動入力機能について改善 zyz END
	 // 2020/04/30 複数のプランとそれぞれのプランの人数を選択し機能対応 WGCH BEGIN
     ':hidBasePlanNum',':hidEstGuestType',
     // 2020/04/30 複数のプランとそれぞれのプランの人数を選択し機能対応 WGCH END
     ':taxRateType', ':hidTaxRateType', ':serviceRate', ':hidServiceRate', ':specialTax', ':hidSpecialTax', ':hidActionType');
// 2016/11/16 見積明細設定機能対応 END by zh
beenFocused = true;
var $j = jQuery.noConflict();
var _entryTimeArray;	// 到着時刻リスト格納
var _departTimeArray;	// 出発時刻リスト格納
var _entryTimeMap;		// 到着時刻の選択リストのINDEX格納
var _departTimeMap;		// 出発時刻の選択リストのINDEX格納
var browserName;
var firstLoad = true;
var _isMobileOS = kendo.support.mobileOS;
//ctrl 機能のmac 対応
var isMac = navigator.platform.toUpperCase().indexOf('MAC')>=0;
//2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN
var dragType = '',pageMode;
//2017/03/27 故障部屋一括解除機能対応　by　zy END
var Room_Map = new Object();
var Auto_Add_Idx;
var autoProcessIdx = 0;
var lazyLoadingRowId,lazyLoadingInterval;
$j(document).ready(function() {
    if(!firstLoad) Init();
});
$j(window).load(function() {
    // init data
    initRoomMap();
    loadInitInfo();
    bindEvent();
    // 2018/03/22 未割り当て機能追加 by zy　BEGIN 
    bindAssignLeadWin();
    // 2018/03/22 未割り当て機能追加 by zy　END 
    // 2019/04/15 ベネフィットホテル様より改善要望 by zy BEGIN
    initProductWin();
    // 2019/04/15 ベネフィットホテル様より改善要望 by zy END
    // 2019/11/15 更新ボタンの機能を追加 BY zyz BEGIN
    initload();
    // 2019/11/15 更新ボタンの機能を追加 BY zyz END
});
var roomLst;
// 初期化情報Loadingする
function loadInitInfo() {
	_entryTimeArray = new Array();
	_entryTimeMap = new Map();	// SFのMain.jsのMAP関数を利用
	var entryTimeArray = $j("[id$=':entryTime'] > option ");
	for (i = 0; i < entryTimeArray.length; i++) {
		var thisVal = entryTimeArray[i].value;
		thisVal = thisVal.length == 4 ? '0' + thisVal :thisVal;
		_entryTimeArray.push(thisVal);
		_entryTimeMap.put(thisVal, ""+i);
	}
	_entryTimeArray.sort();
	
	_departTimeArray = new Array();
	_departTimeMap = new Map();
	var departTimeArray = $j("[id$=':departureTime'] > option ");
	for (i = 0; i < departTimeArray.length; i++) {
		var thisVal = departTimeArray[i].value;
		thisVal = thisVal.length == 4 ? '0' + thisVal :thisVal;
		_departTimeArray.push(thisVal);
		_departTimeMap.put(thisVal, ""+i);
	}
	_departTimeArray.sort();
	
	// CheckBoxはKendoUIに変更する
	var branchDropDown = $j("select[id$=':search:branchShopCd']").css({ fontSize: 13, height:24, padding:0}).kendoDropDownList();
	setDropDropDownWidth($j(branchDropDown));
// 2016/10/25 部屋タイプは複数選択できる機能対応 BEGIN   
	var roomTypeDropDown = $j("select[id$=':search:roomTypeSelectId']").css({ fontSize: 13, height:24, padding:0}).multiselect({ 
		// 2018/07/24 显示高度改善 WGCH BEGIN
		classes: 'roomTypeMaxHeight',
		// 2018/07/24 显示高度改善 WGCH END
		selectedList: 4,
		header: false,
		click: function(event, ui){
			//  2017/02/13 页面自动刷新功能 by wx begin 
			stopRunning();
			//  2017/02/13 页面自动刷新功能 by wx end
			$this= $j(this);
			$thisLable= event.currentTarget.parentElement;
			$allLable= $j("select[id$=':search:roomTypeSelectId']").multiselect("widget").find("ul.ui-multiselect-checkboxes li");
			if(ui.checked) $j($thisLable).addClass("k-state-selected").className= "ui-corner-all ui-state-hover k-state-selected";
			else $thisLable.className= "ui-corner-all ui-state-hover";
			// All Selected
			if (ui.value == "") {
				$this.multiselect("uncheckAll");
				$this.val("");
				$this.multiselect("widget").find("input")[0].checked= true;
				if($allLable.children("label").hasClass("k-state-selected")) $allLable.children("label").removeClass("k-state-selected"); 
				$allLable.children("label:first").addClass("k-state-selected");
				$this.multiselect("close");
			} else {
				var length = $this.multiselect("widget").find("input:checked").length;
				if (length == 0) {
					$this.multiselect("widget").find("input")[0].checked= true;
					$allLable.children("label:first").addClass("k-state-selected");
				} else {
					$this.multiselect("widget").find("input")[0].checked= false;
					if($allLable.children("label:first").hasClass("k-state-selected")) $allLable.children("label:first").removeClass("k-state-selected");
				}
			}	
		},
		beforeopen: function(){
			$roomTypeSelectIdWidget = $j("select[id$=':search:roomTypeSelectId']").multiselect("widget")
			$allChecked= $roomTypeSelectIdWidget.find("input")[0].checked;
			$allLable= $roomTypeSelectIdWidget.children("ul").children("li").children("label:first");
			if($allChecked) $allLable.addClass("k-state-selected");
			else if(!$allChecked && $allLable.hasClass("k-state-selected")) $allLable.removeClass("k-state-selected");
		},
		open: function(){
			$this = $j(this);
			var orgVal = getRoomTypeNameVals($this);
			$this.attr("orgVal", orgVal);
			// 2018/07/24 显示高度改善 WGCH BEGIN
			var multiselectHt = $j(window).height() > 400 ? $j(window).height() - 300 : 100;
			$j("div.roomTypeMaxHeight ul.ui-multiselect-checkboxes").css("height","");
			$j("div.roomTypeMaxHeight ul.ui-multiselect-checkboxes").css("max-height", multiselectHt + "px");
			// 2018/07/24 显示高度改善 WGCH END
		},
		close: function(){
			$this = $j(this);
			var orgVal = $this.attr("orgVal");
			var selectVal = getRoomTypeNameVals($this);
			if (orgVal != selectVal) {
				$j("input[id$=':multiRoomTypeIds']").val(selectVal);
				refreshCurrentDate();
			//  2017/02/13 页面自动刷新功能 by wx begin	
			}else{
				startRunning();
			//  2017/02/13 页面自动刷新功能 by wx end	
			}
		},
	});
	$roomTypeDropDown=$j(roomTypeDropDown);
	$roomTypeDropDown.multiselect("widget").css("width","auto");
	var roomTypeDropDownWidth = $roomTypeDropDown.multiselect("widget").width() + 26;
	$roomTypeDropDown.multiselect({minWidth:roomTypeDropDownWidth});
	// 2019/01/15 タイムテーブルを開いた際、デフォルトで表示される部屋タイプを指定できるようにする by zy BEGIN
	initDepartmentSel($roomTypeDropDown,$j("input[id$=multiRoomTypeIds]").val());
	// 2019/01/15 タイムテーブルを開いた際、デフォルトで表示される部屋タイプを指定できるようにする by zy END
	$j("button.ui-multiselect span").eq(0).addClass("spanIco");
	$j("button.ui-multiselect span").eq(1).addClass("spanText").css("width",roomTypeDropDownWidth-20);
// 2016/10/25 部屋タイプは複数選択できる機能対応 END    
	var viewModeDropDown = $j("select[id$=':search:viewModeSel']").css({ fontSize: 13, height:24, padding:0}).kendoDropDownList();
	setDropDropDownWidth($j(viewModeDropDown));
	var roomDropDown = $j("select[id$=':search:statusSelect']").css({ fontSize: 13, height:24, padding:0}).kendoDropDownList();
	setDropDropDownWidth($j(roomDropDown));
	
	var u = navigator.userAgent;
	if(u.indexOf('Windows') > -1)
		browserName = "IE";
	if(u.indexOf('Presto') > -1)
		browserName = "PRESTO";
	if(u.indexOf('AppleWebKit') > -1)
		browserName = "CHROME";
	if(u.indexOf('Gecko') > -1 && u.indexOf('KHTML') == -1)
		browserName = "FIRFOX";
	//if(!!u.match(/AppleWebKit.*Mobile.*/) || !!u.match(/AppleWebKit/))
		//browserName = "MOBILE"
	/* Window:F5 / Ctrl+R  Mac:Command+R 対応[2015/12/10 ADD] */
	var $key = key.noConflict();
	$key.filter = function(event){
		// 全画面から画面更新可能
		return true;
	}
	$key('command+r, ctrl+r, f5', function(e){ 
		refreshCurrentDate();
		e.preventDefault();
		return false;
	});
	// 2019/09/30 新規予約など、保存(Ctrl+S)対応 WGCH BEGIN
	$key('command+s, ctrl+s', function(e){
		if($j("#createLeadPanel_mask").is(":visible")) doBeforeSave();
		e.preventDefault();
		return false;
	});
	$key('command+s, ctrl+s', function(e){
		if($j("#detailWindow_cream").is(":visible")) saveClickBtn();
		e.preventDefault();
		return false;
	});
	// 2019/09/30 新規予約など、保存(Ctrl+S)対応 WGCH END
	//解决ctrl下 滚动条不响应的问题
	var mousewheelevt=(/Firefox/i.test(navigator.userAgent))? "DOMMouseScroll" : "mousewheel" ;
	if (document.attachEvent) //if IE (and Opera depending on user setting)
	    document.attachEvent("on"+mousewheelevt, displaywheel);
	else if (document.addEventListener) //WC3 browsers
	    document.addEventListener(mousewheelevt, displaywheel, false);
	// 2019/04/30 タイムテーブルを開き、スクロール by zy BEGIN
	if (_isMobileOS) {
		$j("#camera").show();
	}
	// 2019/04/30 タイムテーブルを開き、スクロール by zy END
	//ctrl键弹起响应，打开预约页面或者故障数据
	$j(window).keyup(function(e){
		var evt = e || window.event
	    if((evt.keyCode == '17' && !isMac) || (evt.keyCode == '91' && isMac) || (evt.keyCode == '224' && isMac)){
	    	// 予約登録画面
	    	$j("input[name=windowType]").removeAttr("disabled");
	    	//2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN
	    	//if(dragType != "dragEnd" && dragType != "badRoomMode"){
	    	//拖拽结束以后dragType会变成空
	    	if(dragType != "dragEnd"){
	    	//2017/03/27 故障部屋一括解除機能対応　by　zy END
	    		dragType = "";
	    		onShiftHold = false;
	    		//未做选择直接按ctrl 窗口弹出问题修复 BEGIN
	    		var orgBacks = $j("td[class*=orangeBackground]:not(.orangeBackground)");
	    		if(orgBacks.length == 0 ){
	    		    //  2017/02/13 页面自动刷新功能 by wx begin 
	    		    // 2017/06/06 画面に自動更新機能の故障部屋モード場合下改修　by　zy　BEGIN
		 			if (pageMode != "badRoomMode") startRunning();
		 			// 2017/06/06 画面に自動更新機能の故障部屋モード場合下改修　by　zy　END
					//  2017/02/13 页面自动刷新功能 by wx end
					// 清除拖拽相关変数
	    			/*
	    			beginIndex = undefined;
					endIndex = undefined;
					roomIds = new Array();	
					*/
					clearDragRelateData();
	    			return;
	    		}
	    		//未做选择直接按ctrl 窗口弹出问题修复 END
	    		/*
	    		$j("."+getCurClass()).parent().each(function(){
	    			var currentRow = $j(this);
	    			var roomId = currentRow.attr('roomId');
	    			if (!Room_Map[roomId] ) { 
				    	var leftRow = $j("#left_body_table tr[name='" + roomId + "']");
				    	Room_Map[roomId] = new Object();
				    	Room_Map[roomId].roomNm = leftRow.attr('roomname');
				    	Room_Map[roomId].roomTp = leftRow.attr('roomtype');
				    	Room_Map[roomId].typeId = leftRow.attr('typeId');
				    }
					var roomTp =  Room_Map[roomId].roomTp ;
	    			var roomNm = Room_Map[roomId].roomNm;
	    			//currentRow.attr('roomName');
	    			//currentRow.attr('roomTypeName');
	    			roomIds.push(roomId);
	    			hashMap.Put(roomId, roomNm + '_' + roomTp);
	    		});
	    		*/
	    		//2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN
	    		if (pageMode == "badRoomMode") showBadRoomPanel();
	    		else  onInsertLeadDragEnd();
	    		//2017/03/27 故障部屋一括解除機能対応　by　zy END
	    	}
	    }
	});
	
}
function changeColor(){
	var selectVal = $j("select[id$=statusSelect]").val();
	$j(".isAssignedStatus").each(function(){
		var colorValue = '';
		var $this = $j(this);
		if ( selectVal == "room" ){
			colorValue = $this.attr("rcol");
		} else 
			colorValue = $this.attr("lcol");
		$this.css("background",colorValue);
	});
}
function displaywheel(e){
	if (dragType=="shiftInsert" || dragType == "oneDayDrag" || dragType == "moreDayDrag" || onShiftHold) {
  			var $rightBody = $j('#right_body');
  			var top = $rightBody.scrollTop();
  			var evt=window.event || e ;
  			var delta=evt.detail? evt.detail*(-120):evt.wheelDelta;
  			var scrollTop = top - delta;
  			$j('#right_body').scrollTop(scrollTop);
  			
  			//console.log(delta);
  			evt.preventDefault();
     }
}
// 2016/10/25 部屋タイプは複数選択できる機能対応 BEGIN
function getRoomTypeNameVals($this) {
	return ($this.val() == null ? "" : $this.val().join(","));
}
// 2016/10/25 部屋タイプは複数選択できる機能対応 END
// 2019/11/15 更新ボタンの機能を追加 BY zyz BEGIN
function initload(){
	var _JS_SYS_DEVICE_MOBILE = kendo.support.mobileOS;
	if(_JS_SYS_DEVICE_MOBILE) return ;
	$j("#reloadId").css({'display':'none'});
}
function reloadFun(e){
	refreshCurrentDate();
	e.preventDefault();
}
// 2019/11/15 更新ボタンの機能を追加 BY zyz END
</script>
<!-- 2020/07/30 入湯税の自動入力機能について改善 zyz BEGIN -->
<c:CustomBathTaxAutoSet />
<script>
// HTML索引值初期设定
ACTCUSTOM.TAGINITFUN("[id$=BookEstTable] tbody tr.tranDetailRow", "hidProductId", "rowindex", "hidBTaxAccMstId", "hidBTaxToPlanRowIndex", "orderNums", "clearProduct", "hidBTaxAccMstItem", "autoGetProductInfo", "refreshOrder", "checkAddTranItem");
</script>
<!-- 2020/07/30 入湯税の自動入力機能について改善 zyz END -->
<apex:actionStatus onstart="javascript:blockUi();" onstop="unblockUi();" id="refStatusBlock"/>

<!-- Room Inventry for Booking -->     <!-- 宿泊情報 -->
<apex:sectionHeader title="{!$Label.ps__msg_005_0033}" subtitle="{!$Label.ps__msg_005_0034}" rendered="false"/>

<div id="msgOutputPanelA"></div>
<div id="msgOutputPanelB"></div>

<apex:form id="search">
<apex:actionFunction name="refreshCurrentDate" action="{!refreshTypeOfRoomInfo}" rerender="block" status="refStatusBlock" oncomplete="Init();autoFocusContent('roomTypeSelectId')"/>

<div class="toolBarExtCls">
	<div><img alt="" src="{!URLFOR($Resource.reportFiles, 'img/blank')}" style="width: 100%; height: 2px;"/></div>

	<!-- 支店情報 -->
	<apex:outputPanel rendered="{!branchShopLst.size > 0}" style="margin-left: 10px; vertical-align: middle;height:30px">
	<apex:outputLabel value="{!$ObjectType.Room__c.Fields.BranchShopName__c.label}" style="padding-top: 10px"/>
    <apex:selectList size="1" value="{!branchShopNm}" style="font-size: 1.2em; margin-left: 2px;" rendered="{!branchShopLst.size > 0}" id="branchShopCd">
	<!-- All -->
		<apex:selectOption itemValue="" itemLabel="{!$Label.ps__msg_005_0035}"/>
        <apex:selectOptions value="{!branchShopLst}" />
        <apex:actionSupport event="onchange" action="{!refreshBranchShopInfo}" status="refStatusBlock" />
    </apex:selectList>
    </apex:outputPanel>
    
    <!-- 支店指定の部屋タイプ -->
    <apex:outputPanel rendered="{!roomTypeLst.size > 0}" style="margin-left: 10px; vertical-align: middle;height:30px">
	<!-- 2016/10/25 部屋タイプは複数選択できる機能対応 BEGIN -->
    <apex:selectList size="1" value="{!roomTypeNm}" id="roomTypeSelectId" html-multiple="multiple">
	<!-- 2016/10/25 部屋タイプは複数選択できる機能対応 END -->	
	<!-- All -->
		<apex:selectOption itemValue="" itemLabel="{!$Label.ps__msg_005_0035}"/>
        <apex:selectOptions value="{!roomTypeLst}" />
		<!-- 2016/10/25 部屋タイプは複数選択できる機能対応 BEGIN -->
        <apex:actionSupport event="onchange" action="{!refreshTypeOfRoomInfo}" rerender="block" status="refStatusBlock" oncomplete="Init();autoFocusContent('roomTypeSelectId')" rendered="false"/>
		<!-- 2016/10/25 部屋タイプは複数選択できる機能対応 END -->
    </apex:selectList>
	<!-- 2016/10/25 部屋タイプは複数選択できる機能対応 BEGIN -->
    <apex:inputHidden value="{!multiRoomTypeIds}" id="multiRoomTypeIds"/>
	<!-- 2016/10/25 部屋タイプは複数選択できる機能対応 END -->
	</apex:outputPanel>
	
	<apex:outputPanel style="margin-left: 10px; vertical-align: middle;height:30px">
<!-- 指定日  -->
	<apex:outputLabel value="{!$Label.ps__msg_005_0036} " for="queryDate"  style="padding-top: 10px"/>
	<apex:inputField value="{!timeTable.Checkinday__c}" id="queryDate"  onmousedown="saveInputDate()" styleClass="k-textbox" style="width:120px; heigth:26px; padding:0px;line-height:1em;border-spacing:0px;" >
	<!-- 2017/02/13 页面自动刷新功能 by wx begin -->
	<!-- <apex:actionSupport event="onchange" action="{!doAction}" rerender="block,dateRangePanel" status="refStatusBlock" oncomplete="Init();autoFocusContent('queryDate')"/> -->
    <!-- 2019/09/15 指定日自动记忆機能対応 WGCH BEGIN -->
    <!-- <apex:actionSupport event="onchange" action="{!doAction}"  rerender="block,dateRangePanel" status="refStatusBlock" oncomplete="Init();autoFocusContent('queryDate')" onsubmit="drawChart();checkInputDate();"/> -->
    <apex:actionSupport event="onchange" action="{!doAction}"  rerender="block,dateRangePanel" status="refStatusBlock" oncomplete="Init();autoFocusContent('queryDate');setCheckInDayCookieFun();" onsubmit="drawChart();checkInputDate();"/>
    <!-- 2019/09/15 指定日自动记忆機能対応 WGCH END -->
    <!-- 2017/02/13 页面自动刷新功能 by wx end -->
	<!-- から -->
	<apex:outputText value="{!$Label.ps__msg_005_0037}" style="margin-left:2px;padding-top: 10px"/>
	</apex:inputField>
	<apex:selectList value="{!viewMode}" size="1"  style="margin-left:2px" id="viewModeSel" >
		<apex:selectOptions value="{!ViewModeList}"/>
		<!-- 2017/02/13 页面自动刷新功能 by wx begin -->
		<!--<apex:actionSupport event="onchange" action="{!doAction}" rerender="block,dateRangePanel" status="refStatusBlock" oncomplete="Init();autoFocusContent('viewModeSel');"/>-->
        <apex:actionSupport event="onchange" action="{!doAction}" rerender="block,dateRangePanel" status="refStatusBlock" oncomplete="Init();autoFocusContent('viewModeSel');" onsubmit="drawChart();"/>
		<!-- 2017/02/13 页面自动刷新功能 by wx end -->
	</apex:selectList>
	
	<!-- 予約情報 -->
	<apex:outputLabel value="{!$Label.ps__msg_005_0038}" style="margin-top: 10px; margin-left: 2px; padding-top: 10px"/>
	<!-- ステータス切り替え表示機能 -->
	<apex:selectList size="1" value="{!statusCode}" id="statusSelect" style="margin-left:2px">
    	<apex:selectOption itemValue="{!constStatusCodeRoom}" itemLabel="{!$Label.ps__msg_005_0078}"/>
    	<apex:selectOption itemValue="{!constStatusCodeLead}" itemLabel="{!$Label.ps__msg_005_0079}"/>
        <apex:actionSupport event="onchange" action="{!changeStatusMode}" rerender="colorpanel" status="refStatusBlock" onbeforedomupdate="changeColor()"/>
    </apex:selectList>
	<!-- 2019/11/15 更新ボタンの機能を追加 BY zyz BEGIN -->
    <input type="button" class="btn" id="reloadId" value="更新" style="width:70px;padding: 5px 5px;" onclick="reloadFun(this)"/>
    <!-- 2019/11/15 更新ボタンの機能を追加 BY zyz END -->
    <!-- 2016/11/22 故障部屋一括登録機能対応 BEGIN -->
    <apex:outputpanel styleClass="badRoomSpan" style="visibility: hidden;">
    	<!--故障部屋-->{!$label.MSG_005_0081}:<input type="checkbox" name="windowType" value="{!$label.MSG_005_0081}" onclick="badRoomShow(this)"/>
    	<!--故障部屋 故障解除:<input type="checkbox" name="windowType" value="{!$label.MSG_005_0081}" onclick="clearRoomShow(this)"/>-->
	</apex:outputpanel>
	<!-- 2016/11/22 故障部屋一括登録機能対応 END -->
    <apex:outputLabel value="( {!PageTitleInfo} )" style="margin-top: 10px; margin-left: 10px; font-size:large;" id="dateRangePanel"/>
	</apex:outputPanel>
	
</div>

</apex:form>

<apex:outputPanel >
<img src="{!URLFOR($Resource.reportFiles, 'img/blank')}" style="height:2px; width: 100%"/>
</apex:outputPanel>



<!-- 明細情報 -->
<apex:variable var="tm" value="{!gModeInfo}"/>

<apex:form id="actionForm">

<div id="contentsBody">
<apex:pageBlock id="block">

<apex:outputPanel id="colorpanel" style="margin-left: 10px; vertical-align: middle;height:30px;width:100%">
	<table style="table-layout: fixed;">
		<apex:outputPanel id="colorpanelRoom" rendered="{!statusCode != constStatusCodeLead}">
			<tr>
				<!-- 空室 --><!-- 割当済 --><!-- 滞在 --><!-- 出発予定 --><!-- 出発 --><!-- 故障 --><!-- 未清掃 -->
				<td>
					<span style="vertical-align: middle; font-weight: bold;">&nbsp;{!$Label.MSG_008_0008}&nbsp;<img src="{!URLFOR($Resource.reportFiles, 'img/blank')}" style=" height: 20px;width:60px;vertical-align:middle; " class="isEmptyStatus"/></span>
				</td>
				<td>
					<span style="vertical-align: middle; font-weight: bold;">&nbsp;{!$Label.MSG_008_0042}&nbsp;<img src="{!URLFOR($Resource.reportFiles, 'img/blank')}" style=" height: 20px;width:60px;vertical-align:middle; " class="room_isAssignedStatus_1"/></span>
				</td>
				<!-- 2019/02/28 滞在・外出状態の管理 WGCH BEGIN -->
				<!-- 外出中 -->
				<td style="display:{!IF(outButtonShowFlg, '', 'none;')}">
					<span style="vertical-align: middle; font-weight: bold;">&nbsp;{!$Label.MSG_008_0125}&nbsp;<img src="{!URLFOR($Resource.reportFiles, 'img/blank')}" style=" height: 20px;width:60px;vertical-align:middle; " class="isOutStatus"/></span>
				</td>
				<!-- 2019/02/28 滞在・外出状態の管理 WGCH END -->
				<td>
					<span style="vertical-align: middle; font-weight: bold;">&nbsp;{!$Label.MSG_008_0009}&nbsp;<img src="{!URLFOR($Resource.reportFiles, 'img/blank')}" style=" height: 20px;width:60px;vertical-align:middle; " class="room_isStayStatus_1"/></span>
				</td>
				<td>
					<span style="vertical-align: middle; font-weight: bold;">&nbsp;{!$Label.MSG_008_0010}&nbsp;<img src="{!URLFOR($Resource.reportFiles, 'img/blank')}" style=" height: 20px;width:60px;vertical-align:middle; " class="room_isChkOutDayStatus"/></span>
				</td>
				<td>
					<span style="vertical-align: middle; font-weight: bold;">&nbsp;{!$Label.MSG_008_0011}&nbsp;<img src="{!URLFOR($Resource.reportFiles, 'img/blank')}" style=" height: 20px;width:60px;vertical-align:middle; " class="room_isChkOutStatus"/></span>
				</td>
				<td >
					<span style="margin-left: 10px;" nowrap="nowrap">
					<!-- 故障 -->{!$Label.MSG_005_0039}
					<img src="{!URLFOR($Resource.reportFiles, 'img/blank')}" 
						style=" height: 20px;width:60px;vertical-align:middle;background-color: {!statusColor.RS_RoomBad}"/>
					</span>
				</td>
			</tr>
		</apex:outputPanel>
		<apex:outputPanel id="colorpanelLead" rendered="{!statusCode == constStatusCodeLead}">
			<tr>
			<apex:repeat value="{!leadStatusInfoLst}" var="statusItem">
			<td >
				<span style="margin-left: 10px;" nowrap="nowrap">
				{!statusItem.label}
				<img src="{!URLFOR($Resource.reportFiles, 'img/blank')}" 
					style=" height: 20px;width:60px;vertical-align:middle;background-color: {!leadStatusColorMap[statusItem.value].val}"/>
				</span>
			</td>
			</apex:repeat>
			<td >
				<span style="margin-left: 10px;" nowrap="nowrap">
				<!-- 故障 -->{!$Label.MSG_005_0039}
				<img src="{!URLFOR($Resource.reportFiles, 'img/blank')}" 
					style=" height: 20px;width:60px;vertical-align:middle;background-color: {!statusColor.RS_RoomBad}"/>
				</span>
			</td>
			</tr>
		</apex:outputPanel>
	</table>
</apex:outputPanel>

<style>

#mock {
	position: relative;
	margin-top: 10px;
	margin-left: 1px;
	height: 3200px;
	background-color: #f2f3f3;
}
#left_head {
	position: absolute;
	top: 0;
	left: 0;
	width:200px;
}
#right_head {
	position: relative;
	top: 0;
	left: 200px;
	overflow: hidden;
	/*width:1800px;*/
	/* Firefox */
	width: -moz-calc(100% - 190px);
	/* WebKit */
	width: -webkit-calc(100% - 190px);
	/* Opera */
	width: -o-calc(100% - 190px);
	/* Standard */
	width: calc(100% - 190px);
}
#left_body {
	position: absolute;
/* 2015/12/17 FIX BEGIN */
	top:{!IF(isShowQreqki,IF(isShowTierHeader,'105px;','85px;'),IF(isShowTierHeader,'85px;','65px;'))}
/* 2015/12/17 FIX END */
	left: 0;
	overflow: hidden;
}
#right_body { 
	position: absolute; 
	left: 200px; 
/* 2015/12/17 FIX BEGIN */
	top:{!IF(isShowQreqki,IF(isShowTierHeader,'105px;','85px;'),IF(isShowTierHeader,'85px;','65px;'))}
/* 2015/12/17 FIX END */
	/*background-color:white;*/
	overflow: scroll;
	/* Firefox */
	width: -moz-calc(100% - 190px);
	/* WebKit */
	width: -webkit-calc(100% - 190px);
	/* Opera */
	width: -o-calc(100% - 190px);
	/* Standard */
	width: calc(100% - 190px);
} 
#right_body tr { 
	height: 30px;
	min-height: 25px;
	max-height: 30px;
	/*background-color:white;*/
}
.badroom{
	word-break:keep-all;
	white-space:nowrap;
	overflow:hidden;
}
/*2018/02/07 故障時刻登録　by zy BEGIN*/
.more{
	overflow: hidden;
}
/*2018/02/07 故障時刻登録　by zy END*/
/* 2018/05/01 タイムテーブルを行ごとに色分け by zy BEGIN */
tr.bodyRow:nth-child(odd) {
	background-color: white;
}
/* 2018/05/01 タイムテーブルを行ごとに色分け by zy END */
/* 2019/02/15 複数部屋でなくても）泊数の変更ができなくなってしまいます。 by zy BEGIN */
.daysInput{
	 width: calc(100% - 10px);
    margin: 0 2px;
}
/* 2019/02/15 複数部屋でなくても）泊数の変更ができなくなってしまいます。 by zy END */
</style>
	<!-- 下記予約の到着時刻又は出発時刻がありませんでしたので、デフォルト値を設定して、画面に情報を表示させていただきました。 -->
	<apex:pageMessage summary="{!$Label.ps__msg_005_0040}"
			severity="warning" strength="3" escape="false" rendered="{!LEN(showInfoWarn)>0}"
			detail="{!showInfoWarn}"/>
	<!-- 下記予約の出発時刻には到着時刻以降の時刻を設定ください。 -->
	<apex:pageMessage summary="{!$Label.ps__msg_005_0041}"
			severity="error" strength="3" escape="false" rendered="{!LEN(showInfoError)>0}"
			detail="{!showInfoError}"/>

<!-- 明細情報 -->
<apex:outputPanel id="ciTable" >

<script>

var orgTd,currentTd,roomIds = new Array(),pEntryTime,pDepartTime,pDiffDays;
var lastRoomId = "{!lastRoomId}";
var guuid = kendo.guid();
var processingFlag = false;
var PositionMap;
var badRoomFlag = false;
// 2018/03/07 Security Check BEGIN
// 2019/04/30 タイムテーブルを開き、スクロール by zy BEGIN
// 2019/07/31 20190527.04.タイムテーブル、ルームインジケータ、マルチタスク機能編集モードと読み込み専用モード対応必要 by zy BEGIN
var editModeFlag = _isMobileOS || {!(JSENCODE(IF($Setup.CommDefine__c.ps__TimetableIsNew__c,'1','0')) == '1') || !isCanUpdateLead}|| {!!notReadOnlyFlg};// 新規予約作成不可
// 2019/07/31 20190527.04.タイムテーブル、ルームインジケータ、マルチタスク機能編集モードと読み込み専用モード対応必要 by zy END
// 2019/04/30 タイムテーブルを開き、スクロール by zy END
// 2018/03/07 Security Check END
$j(window).load(function(){
    Init();
    firstLoad = false;
});
function Init(){
	badRoomObj = new Object();
	Auto_Add_Idx = 1; 
	autoProcessIdx = 0;
	RowInfs = new Array();
	// DataLoading
	var lastScrollTr = $j(".rightBody tr.dragTr[roomId='" + lastRoomId + "']");
    var beginIdx = lastScrollTr.index();
    if(beginIdx < 0 ){
    	$j('#load_scrl').hide();
    }else{
    	// not loading data to hiden
    	$j(".rightBody tr.dragTr").slice(beginIdx).hide();
    }
	$j('#load_scrl').css('left', $j(window).width()/2);
    loadTdDrag($j("#right_body_table tbody tr").slice(0,addLength));
    // 2019/09/15 Security Check BY zyz BEGIN
    roomLst = JSON.parse('{!JSENCODE(roomListJson)}');
    // 2019/09/15 Security Check BY zyz END
    lazyLoadingRows();
    // *****************************
    // 2015/10/28 CTI->PAST機能対応
    // *****************************
    _call_pasteInfo();
    $j("#right_body").mouseenter(function(){
        isMousInRightBody = true;
    });
    $j("#right_body	").mouseleave(function(){
        isMousInRightBody = false;
        //2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN
        if (dragType == "insertLead") $j("td." + getOrgClass()).removeClass(getOrgClass());
   		//2017/03/27 故障部屋一括解除機能対応　by　zy END
    });
    $j(window).keydown(function(e){
          if(!isMousInRightBody)return;
          //2017/03/28 keydow type 不切换 by zy BEGIN
          //if( dragType == 'badRoomMode') return;
          //2017/03/28 keydow type 不切换 by zy END
          //windowの場合下　ctrl　begin
          if(onShiftHold) return;
          //windowの場合下　ctrl　END
          e = (e) ? e : ((window.event) ? window.event : "") //兼容IE和Firefox获得keyBoardEvent对象
          var key = e.keyCode?e.keyCode:e.which; //兼容IE和Firefox获得keyBoardEvent对象的键值
          var rightBody =  $j("#right_body"),
          scrollLeft = rightBody.scrollLeft(),
          scrollTop = rightBody.scrollTop();
	          //  2017/02/13 页面自动刷新功能 by wx begin
	          //stopRunning();
	          //  2017/02/13 页面自动刷新功能 by wx end
          switch(key) {
          case 37:
              //left
              rightBody.scrollLeft(scrollLeft-30);
              break;
          case 38:
              //up
              rightBody.scrollTop(scrollTop-30);
              break;
          case 39:
              //right
              rightBody.scrollLeft(scrollLeft + 30);
              break;
          case 40:
              //down
              rightBody.scrollTop(scrollTop + 30);
              break;
          case 17:
		      if( !isMac){//dragType == "insertLead"　&&
			      	setDefaultValue();
		      	e.preventDefault();
		      }
		      break;
		  case 91:
		  	  if( isMac){ //dragType == "insertLead"&& 
			      	setDefaultValue();
		      	e.preventDefault();
		      }
		      break;
		  //FF command
          case 224:
		  	  if( isMac){//dragType == "insertLead" &&
			      	setDefaultValue();
			      	e.preventDefault();
		      }
		      break;
          }
    });
    PositionMap = new Object();
    var colgroupArr = $j("#right_body_table colgroup>col");
    for (var i = 0 ; i < colgroupArr.length ; i++) {
    	var Col = new Object();
    	var colMessage = colgroupArr.eq(i);
    	Col["time"] = 1*colMessage.attr("coldatetime");
    	Col["Date"] = colMessage.data("coldate");
    	PositionMap[i] = Col;
    }
    var Col = new Object();
	PositionMap[colgroupArr.length] = Col;
	getBadRoomMessage();
    //--------------------------
    // 六曜計算(和暦計算表示制御共通関数呼び出し)
    //--------------------------
    if({!isShowQreqki})
        QREKI.jinya.bindInstance($j, "qrekispan", "dtval");
    //
    autoFocusContent(null);
    // 2016/11/22 故障部屋一括登録機能対応 BEGIN
    //var width = $j(".badRoomDiv:eq(0)").closest("td").width();
    $j(".badRoomDiv").each(function(){
    	var outWidth = $j(this).closest("th").width();
    	$j(this).outerWidth(outWidth);
    	$j(this).next(".warinIcon").css("left",outWidth-16);
    	
    });
    //  2017/02/13 页面自动刷新功能 by wx begin
    // floatHide();
    floatHide(false);
    //  2017/02/13 页面自动刷新功能 by wx end
    // 2016/11/22 故障部屋一括登録機能対応 END
    // 2018/02/22 未割り当て ワィンドウ追加　by　zy　BEGIN
    var win = $j("#noAssignLeadListWindow").data("kendoWindow");
    if (win != undefined) refreshDS();
   	// 2018/02/22 未割り当て ワィンドウ追加　by　zy　END
}
function lazyLoadingRows(){
	if (lazyLoadingRowId) clearTimeout(lazyLoadingRowId);
    lazyLoadingRowId = setTimeout(function(){
		addLeadMessage();
    },0);
    if (lazyLoadingInterval) clearInterval(lazyLoadingInterval);
    lazyLoadingInterval = setInterval(function(){
    	autoProcessFun();
    },400);
    
}
function changeRoomId(roomId,leadId,orgroomId,entryDateTime){
	var message =  leadId + '_' + roomId;
	//$j("input[id$=hidErrorMessage]").val("");
	if (entryDateTime != undefined) message += '_' + entryDateTime;
	changeRoomFunAjax(roomId,orgroomId,message);
	//changeRoomFun();
	
}

var JS_StayPersons = 1 * {!BLANKVALUE($Setup.CommDefine__c.ps__BookingMansDef__c,0)} + 1 * {!BLANKVALUE($Setup.CommDefine__c.ps__BookingFemailsDef__c,0)} + 1 * {!BLANKVALUE($Setup.CommDefine__c.ps__BookingChildrenDef__c,0)};
// 2019/04/30 タイムテーブルを開き、スクロール by zy BEGIN
function mobileActionChg(){
	var showDiv = $j("#camera span:visible");
	if (showDiv.hasClass("k-i-move")) {
		J_LOCK = true;
		$j("#camera .k-i-edit").show();
		$j("#camera .k-i-move").hide();
		$j("tr.dragTr:onscreen").each(function(){
			var drag = $j(this).data("kendoDraggable");
			if(drag) drag.destroy();
			$j(this).removeAttr("data-role");
		});
		// 2019/11/15 19.23の編集閲覧モード切り替えの際に消えてしまったのではないかと思いますが、復活させていただくことは可能でしょうか。 by zy BEGIN
		var badSPan = $j(".badRoomSpan[style*='visibility: visible']");
		if (badSPan.length > 0 ) badSPan.css("visibility","hidden");
		// 2019/11/15 19.23の編集閲覧モード切り替えの際に消えてしまったのではないかと思いますが、復活させていただくことは可能でしょうか。 by zy END
	} else {
		window.J_LOCK = false;
		var onscreenRows = $j("tr.dragTr:onscreen");
		editModeFlag = false;
		loadTdDrag(onscreenRows);
		editModeFlag = true;
		// 2019/11/15 19.23の編集閲覧モード切り替えの際に消えてしまったのではないかと思いますが、復活させていただくことは可能でしょうか。 by zy BEGIN
		//加载以后
		var daraRowCount = $j('#right_body tr.dragTr').length;
		var showLength = $j('#right_body tr.dragTr:visible').length;
		if(showLength == daraRowCount && badRoomFlag){
			// 2016/11/22 故障部屋一括登録機能対応　BEGIN
			if({!isShowTierHeader}){
				$j("span.badRoomSpan").css("visibility","visible");
			}
			// 2016/11/22 故障部屋一括登録機能対応　END
		}
		// 2019/11/15 19.23の編集閲覧モード切り替えの際に消えてしまったのではないかと思いますが、復活させていただくことは可能でしょうか。 by zy END
		$j("#camera .k-i-edit").hide();
		$j("#camera .k-i-move").show();
	}
}
// 窗口内的行
jQuery.expr.filters.onscreen = function(el) {
	var minHeight = window.J_MINHT
	var maxHeight= window.J_MAXHT
	var rect = el.getBoundingClientRect();
	return (rect.top + rect.height) > minHeight && (rect.top + rect.height) < maxHeight 
  			|| maxHeight > rect.top && (rect.top + rect.height) > maxHeight;
};
// 2019/04/30 タイムテーブルを開き、スクロール by zy END
</script>
<input type="hidden" value="{!tm.colHourLen}" id="hidOneColLong"/>
 
 
 

 <div id="mock">
 	<div id="left_head">
		<div class="leftHead">
		
		<table style="table-layout:fixed; width:200px;border-collapse: 0px; border-spacing: 0px;" class="detailList" >
		    <col style="width: 80px"></col>
		    <col style="width: 120px"></col>
			
			<!-- Header -->
		    <thead >
			    <tr class="headerRow" style="height: 25px;">
			    	<th colspan="2" class="tdRightSoldLineCls" style="width:200px;min-width:200px;"></th>
			    </tr>
			    <tr class="headerRow" >
			    	<th nowrap="nowrap" style="vertical-align: middle; width:80px;">
				<!-- 部屋タイプ -->
						 <apex:outputText value="{!$Label.ps__msg_005_0042}" style="margin-left:2px" />
					</th>
					<th class="tdRightSoldLineCls" nowrap="nowrap" style="vertical-align: middle; width:120px">
						<!-- お部屋 -->
						<apex:outputText value="{!$Label.ps__msg_005_0043}" style="margin-left:2px;" styleClass="firstHeadTd"/>
			        </th>
			    </tr>
				<!-- 2015/12/17 FIX BEGIN -->
				<tr class="headerRow" style="display:{!if(isShowTierHeader, 'true', 'none')}">
					<th nowrap="nowrap" style="vertical-align: middle; width:80px;">
						&nbsp;
					</th>
					<th class="tdRightSoldLineCls" nowrap="nowrap" style="vertical-align: middle; width:120px;text-align: right;">
					<!-- 2015/12/11 FIX BEGIN -->
						<span style="font-size: 12px;margin-right: 2px;" >{!$Label.MSG_005_0074}</span>
					</th>
				</tr>
				<!-- 2015/12/17 FIX END -->
			    <tr class="headerRow" style="display:{!IF(isShowQreqki,'','none')}">
			    	<th nowrap="nowrap" style="vertical-align: middle; width:80px;">
			        	&nbsp;
			        </th>
			        <th class="tdRightSoldLineCls" nowrap="nowrap" style="vertical-align: middle; width:120px;text-align: right;">
						<span style="font-size: 12px;margin-right: 2px;" ><!-- 六輝 -->{!$Label.MSG_005_0044}</span>
					</th>
				</tr>
				<tr class="headerRow" >
					<th colspan="2" class="tdRightSoldLineCls" style="vertical-align: middle;text-align: right;" >
						<span style="font-size: 12px;margin-right: 2px;" ><!-- 単位: 時 -->{!$Label.MSG_005_0045}</span>
					</th>
			  	</tr>
			</thead>
		</table>
		</div>
	</div> <!-- Left Top Header -->
    <input type="hidden" id="hidColSize" value="{!allColUnitInfo.size}" />
	<!-- RIGHT HEADER -->
 	<div id="right_head">
		<div class="rightHead">
            <table style="table-layout:fixed; word-spacing: 0px; border-collapse: 0px; border-spacing: 0px;width:{!tm.tableWidth}px;" class="detailList" >
                <apex:repeat var="col" value="{!allColUnitInfo}">
                <col class="{!col.styleClassName}" colDateTime="{!col.localDateTime}"  data-coldate="{!col.localDate}" cycIndex="{!col.colKey}" style="width:{! tm.colMinWidth * col.colspan}px ;min-width:{! tm.colMinWidth * col.colspan}px;max-width:{! tm.colMinWidth * col.colspan}px"></col>
                </apex:repeat>
                <tfoot style="">
                 <tr class="headerRow" style="height: 25px;">
                    <!-- MONTH -->
                    <apex:repeat var="col" value="{!monthHeader}">
                        <th colspan="{!col.colspan}" class="tdRightSoldLineCls" style="text-align:center;font-weight: bold; font-size: 13pt; ">
                        {!col.label}
                        </th>
                    </apex:repeat>
                    </tr>
                    <!-- DAY -->
                    <tr class="headerRow">
                    <apex:repeat var="col" value="{!dayHeader}">
                        <th colspan="{!col.colspan}" class="tdRightSoldLineCls dayColumn" title="{!col.holidayStr}" data-date="{!col.localDate}"
                            style="font-size:{!IF(isEnglishMode,'11px','12px')};text-align:center;vertical-align:middle ;font-weight: bold;{!IF(col.locaYobi == 'Sun' || col.isHoliday ,'background:#ff3366;',IF(col.locaYobi == 'Sat','background:#ffff66;',''))}">
							<!-- ルームインジケータへ -->
				    		<a target="_blank" style="text-decoration:underline" href="{!URLFOR($Page.RoomIndicatorInfo)}?dt={!col.localDate}" title="{!$Label.MSG_005_0046}">
				    		{!col.label}
				    		</a>
                        </th>
                    </apex:repeat>
                    </tr>

                    <!-- 2015/12/17 FIX BEGIN -->
                    <!-- 営業 -->
                    <!-- 2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN -->
                    <tr class="headerRow funcHead" style="display:{!if(isShowTierHeader, 'true', 'none')}">
                    <apex:repeat var="col" value="{!dayHeader}">
                        <th colspan="{!col.colspan}" class="tdRightSoldLineCls" nowrap="nowrap" 
                        	style="font-size:{!IF(isEnglishMode,'11px','12px')};text-align:center;vertical-align:middle; overflow:hidden">
                            <!-- 2016/11/22 故障部屋一括登録機能対応 BEGIN --> 
			    			<div style="position: absolute;">
                        		<input type="button" value="{!$Label.MSG_005_0039}" onclick="setBadRoomStatus(this,false)" data-date="{!col.localDate}" class="button badBtn {!if(col.isFutureDay,'badRoomDiv','')} badRoomToggleClass" style="width:98px;height:18px;position:absolute;" />
                        		<input type="button" value="解除" onclick="setClearRoomStatus(this)" data-date="{!col.localDate}" class="clearBtn button {!if(col.isFutureDay,'badRoomDiv','')} badRoomToggleClass" style="width:98px;height:18px;position:absolute;top: 20px;" />
                   <!-- 2017/03/27 故障部屋一括解除機能対応　by　zy END -->     		
                        		<img src="/img/msg_icons/warning16.png" style="display:none;position: absolute; left: 81px; top: 1px;z-index:1" title="{!$Label.MSG_005_0080}" class="warinIcon" />
                        	</div>
							<!-- 2016/11/22 故障部屋一括登録機能対応 END -->
                            <span style="font-weight: bold; width:36px;color: {!colorInfoMap[col.localDate]}" title="{!restInfoMap[col.localDate]}">{!restInfoMap[col.localDate]}</span>
                        </th>
                    </apex:repeat>
                    </tr>
                    <!-- 2015/12/17 FIX BEGIN -->

                    <!-- DAY(六曜) -->
                    <tr class="headerRow" style="display:{!IF(isShowQreqki,'','none')}">
                    <apex:repeat var="col" value="{!dayHeader}" rendered="{!isShowQreqki}">
                        <th colspan="{!col.colspan}" class="tdRightSoldLineCls" title="{!col.holidayStr}"
                            style="text-align:center;vertical-align:middle ;font-size:{!IF(isEnglishMode,'11px','12px')};font-weight: bold;">
                            <span class="qrekispan" dtval="{!col.localDate}" data-datecontentlen="{!col.colspan}"></span>
                        </th>
                    </apex:repeat>
                    </tr>

                    <!-- HOUR -->
                    <tr class="headerRow hourRow">
                    <apex:repeat var="col" value="{!hourHeader}">
                        <th colspan="{!col.colspan}" class="tdRightSoldLineCls"
                        style="text-align:center;font-size:11px;font-weight: normal;vertical-align: middle;">
                        {!col.label}
                        </th>
                    </apex:repeat>
                    </tr>
                </tfoot>
            </table>
		</div>
	</div> <!-- RIGHT HEADER -->

 	<div id="left_body">
		<div class="leftBody">
		
		<table id="left_body_table" style="table-layout:fixed; width:200px; word-spacing: 0px; border-collapse: 0px; border-spacing: 0px;" class="detailList" >
		    <col style="width: 80px"></col>
		    <col style="width: 120px"></col>
		    <tbody>
			    <apex:repeat value="{!roomList}" var="subr">
				    <apex:repeat value="{!subr}" var="r">
					   <!-- 2018/07/27 宿泊税計算 WGCH BEGIN -->
					   <tr class="bodyRow" name="{!r}" roomspcd="{!roomInfos[r].roomspcd}" roomtype="{!roomInfos[r].roomTp}" roomname="{!roomInfos[r].roomNm}" typeId="{!roomInfos[r].typeId}" >
					   <!-- 2018/07/27 宿泊税計算 WGCH END -->
					        <td class="headcol">
					        	<div class="roomNamelabel">{!roomInfos[r].roomTp}</div>
					        </td>
					        <td class="headcol" style="height:{!roomBookingMap[roomInfos[r].roomId].widthStr}px"> 
					        	<div class="roomNamelabel">
						        	<a href="/{!roomInfos[r].roomId}" class="roomNmLinkCls" style="margin-left: 2px" target="_blank" id="{!roomInfos[r].roomId}" onblur="LookupHoverDetail.getHover('{!roomInfos[r].roomId}').hide();" onfocus="LookupHoverDetail.getHover('{!roomInfos[r].roomId}', '/{!roomInfos[r].roomId}/m?retURL=%2F{!roomInfos[r].roomId}&isAjaxRequest=1').show();" onmouseout="LookupHoverDetail.getHover('{!roomInfos[r].roomId}').hide();" onmouseover="LookupHoverDetail.getHover('{!roomInfos[r].roomId}', '/{!roomInfos[r].roomId}/m?retURL=%2F{!roomInfos[r].roomId}&isAjaxRequest=1').show();">
						        		{!roomInfos[r].roomNm}
						        	</a>
					        	</div>
					        </td>
					   </tr>
				    </apex:repeat>
				</apex:repeat>
		    </tbody>
		</table>
		</div>
	</div><!-- left body -->
	
 	<div id="right_body">
		<div class="rightBody">
		<div id="badroomcontents" style="position: absolute;">
		</div>
		<table id="right_body_table" style="table-layout:fixed; word-spacing: 0px; border-collapse: 0px; border-spacing: 0px;width:{!tm.tableWidth}px;" class="detailList" >
		    <apex:repeat var="col" value="{!allColUnitInfo}">
		    <col class="{!col.styleClassName}" colDateTime="{!col.localDateTime}"  data-coldate="{!col.localDate}" cycIndex="{!col.colKey}" style="width:{! tm.colMinWidth * col.colspan}px ;min-width:{! tm.colMinWidth * col.colspan}px;max-width:{! tm.colMinWidth * col.colspan}px"></col>
		    </apex:repeat>
		    <tbody>
		    <apex:repeat value="{!roomList}" var="subr">
		    <apex:repeat value="{!subr}" var="roomId"> 
		    <!-- roomName="{!r.roomNm}" roomTypeName="{!r.roomTp}" roomTypeId ="{!r.typeId}" -->
	   		<tr class="dragTr bodyRow" roomId="{!roomId}"  assignedColIdx="{!roomBookingMap[roomId].assingedColIdxs}">
				<apex:outputText value="{!roomBookingMap[roomId].tdHtml}" escape="false"/>
			</tr> 
			</apex:repeat>
			</apex:repeat>		
			
			</tbody>
		</table>
		<div id="load_scrl" class="loadingBox loader" style="position:relative;height:50px;width:50px;{!IF(hadNeedLoadFlag,'','display:none')}"> 
			<img id="loading-image" src="../img/loading32.gif" alt="Loading..." />
		</div>
		<div id="leftBorder" class="border"></div>
		<div id="topBorder" class="border"></div>
		<div id="rightBorder" class="border"></div>
		<div id="bottomBorder" class="border"></div>
		</div>
	</div>
	
</div> <!-- Mock -->

</apex:outputPanel>

</apex:pageBlock>
</div>

</apex:form>

<!-- This is the content of the modal dialog -->
<div id="createLeadPanel" style="display: none; width: 820px" >
  <div class="hd">
<!-- 新規予約 -->
	<apex:outputText value="{!$Label.ps__msg_005_0047}" />

  </div>
  
  <apex:form id="createForm">
  <div class="bd" style="height: 540px; overflow: auto;" >
	<!-- Message Panel Block -->        
	<apex:outputPanel id="leadMessagePanel">
	   <apex:pageMessages id="inputLeadFormMsg"/>
	   <apex:inputHidden value="{!bookingCreateOK}" id="lead_hidDataCreateOK"/><!-- Hidden:Data Create IS OK -->
	   <apex:inputHidden value="{!roomIds}" id="hidRoomMsg"/>
	   <apex:inputHidden value="{!MoreRoomMessage}" id="hidMoreRoomMessage"/>
	   <apex:inputHidden value="{!startDays}" id="hidStartDays"/>
	   <apex:inputHidden value="{!mainRoomId}" id="hidMainRoomId" />
	   <!--2017/01/25 新規画面の項目自定義機能　by　zy　BEGIN-->
	   <apex:inputHidden id="bHidContactFields" value="{!contactFields}" />
	   <!--2017/01/25 新規画面の項目自定義機能　by　zy　END-->
	   <!-- 2016/12/07 タイムテーブル新規後一画面へ遷移 BEGIN by zh -->
	   <input type="hidden" id="IndexId" value="{!indexId}" />
	   <!-- 2016/12/07 タイムテーブル新規後一画面へ遷移 END by zh -->
	   <!-- 2016/11/16 見積明細設定機能対応 BEGIN by zh -->
	   <div class="message errorM3" id="inputFormErrorMsg" role="alert" style="display:none;">
          	<table border="0" cellpadding="0" cellspacing="0" class="messageTable" style="padding:0px;margin:0px;">
          		<tbody>
          			<tr valign="top">
          				<td><img alt="ERROR" class="msgIcon" src="/s.gif" title="ERROR"/></td>
          				<td class="messageCell">
          					<div class="messageText">
          						<span style="color:#cc0000"><h4>{!$Label.CONST_003_0132}:</h4></span>{!$Label.MSG_003_0105}<br/>
          					</div>
          				</td>
          			</tr>
          			<tr>
          				<td></td>
          				<td></td>
          			</tr>
          		</tbody>
          	</table>
          </div>
	  <!-- 2016/11/16 見積明細設定機能対応 END by zh -->	
	</apex:outputPanel>
	<div id="parentTimeDiv" onblur="hideShowRoomTabl()" style="display:none;background-color: #f3f3ec;">
		<apex:pageBlock id="timePageBlock" >
			<div>
				<table style="width: 100%; table-layout: fixed;">
					<tr>
						<td style="width: 20px;vertical-align: top;" ><div class="k-icon k-i-arrow-s" id="moreSpan" onclick="showRoomMessageTable()"></div></td>
						<td>
						<div>
						<div id="timeDiv" style="width: 100%;display:none;" ></div>
			            <div id="flowMessageWindow" style="max-height:300px;width:740;z-index:20;overflow-x: hidden;margin-top: 2px;border-style: solid;border-width: 1px;border-color: orange;">
							<table id="roomMessageTalbe" class="list" style="table-layout: fixed;display:none;width:725px;border: 0px" cellpadding="0" cellspacing="1">
								<thead>
									<tr >
										<th style="width:20px;">親</th>
										<th>部屋名</th>
										<!-- 2019/02/15 複数部屋でなくても）泊数の変更ができなくなってしまいます。 by zy BEGIN -->
										<th style="width:30px;">泊数</th>
										<!-- 2019/02/15 複数部屋でなくても）泊数の変更ができなくなってしまいます。 by zy END -->
										<th style="width:80px;">到着時間</th>
										<th style="width:75px;padding:0px" class="HeadRoomEntryTime"></th>
										<th style="width:80px;">出発時間</th>
										<th style="width:75px;padding:0px" class="HeadRoomDepartTime"></th>
									</tr>
								</thead>
							</table>
						</div>
						</div>
					</td>
					
					</tr>
				</table>
			</div>
		</apex:pageBlock>
	</div>
	<!-- input form -->
	<apex:pageBlock id="createPageBlock">
	<!--2017/01/25 新規画面の項目自定義機能　by　zy　BEGIN-->
		<apex:repeat value="{!hadRenderFields}" var="cusField">
		  	<apex:inputHidden id="relcontact" value="{!contactName}" rendered="{!cusField.fieldType == 'relcontact'}"/>
		  	<apex:inputHidden id="refTypeOfRooms" value="{!newLead.refTypeOfRooms__c}" rendered="{!cusField.fieldType == 'refTypeOfRooms'}"/>
		  	<apex:inputHidden id="entryDate" rendered="{!cusField.fieldType == 'entryDate'}" />
			<apex:inputHidden id="departureDate" rendered="{!cusField.fieldType == 'departureDate'}" />
			<apex:inputHidden id="custPhone" value="{!newContact.Phone}" rendered="{!cusField.fieldType == 'custPhone'}" />
			<apex:inputHidden id="stayPerson" value="{!newLead.StayPersons__c}" rendered="{!cusField.fieldType == 'stayPerson'}" />
			<apex:inputHidden id="staysNums" value="{!staysNums}" rendered="{!cusField.fieldType == 'staysNums'}"/>
			<apex:inputHidden id="roomNum"  rendered="{!cusField.fieldType == 'broomNum'}"/> 
			<apex:inputHidden id="katakana"  rendered="{!cusField.fieldType == 'katakana'}"/>
			<apex:inputField id="entryTime" value="{!newLead.Field4__c}"  rendered="{!cusField.fieldType == 'entryTime'}" style="display:none"/>
			<apex:inputField id="departureTime" value="{!newLead.Field3__c}"  rendered="{!cusField.fieldType == 'departureTime'}" style="display:none"/>
		</apex:repeat>
		<apex:inputHidden id="hidContactMapFields" value="{!contactMapFields}"/>
		<apex:repeat value="{!newLPg}" var="p"> 
		  	<apex:inputHidden id="bcolumnsInt" value="{!p.columnsInt}"/>
			<apex:pageBlockSection columns="{!p.columnsInt}" title="{!p.title}" showHeader="{!p.isHeadShowFlag}" Id="sobjectMap">
				<apex:repeat value="{!p.cusFields}" var="cusField"> 
					<apex:pageBlockSectionItem rendered="{!cusField.fieldType == 'lead'}" dataStyleClass="lead_{!cusField.localName} {!if(p.columnsInt>1,'coloumn2Class','coloumn1Class')}">
						<apex:outputLabel value="{!cusField.fieldLabel}"/><!-- {!cusField.fieldLabe} -->
						<apex:outputPanel styleClass="requiredInput" layout="block">
							<apex:outputPanel styleClass="{!if(cusField.isRequired,'cusRepuiredClass','')}" layout="block"/>
							<apex:inputField value="{!newLead[cusField.localName]}" style="{!cusField.fieldStyle}" styleClass="{!if(cusField.isRequired,'repuiredClass','')}" />
						</apex:outputPanel>
					</apex:pageBlockSectionItem>
					<apex:pageBlockSectionItem rendered="{!cusField.fieldType == 'contact'}" dataStyleClass="contact_{!cusField.name} {!if(p.columnsInt>1,'coloumn2Class','coloumn1Class')}">
						<apex:outputLabel value="{!cusField.fieldLabel}"/><!-- {!cusField.fieldLabe} -->
						<apex:outputpanel styleClass="requiredInput" layout="block">
							<apex:outputPanel styleClass="{!if(cusField.isRequired,'cusRepuiredClass','')}" layout="block"/>
							<apex:inputField value="{!newContact[cusField.localName]}" style="{!cusField.fieldStyle}" styleClass="{!if(cusField.isRequired,'repuiredClass','')}"/>
						</apex:outputpanel>
					</apex:pageBlockSectionItem>
					<apex:pageBlockSectionItem rendered="{!cusField.fieldType == 'blank'}" dataStyle="height: {!IF(isLineHeightFlg,'12px;','13px;')}">
                    	<apex:outputLabel value=""/>
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem rendered="{!cusField.fieldType == 'ref'}" dataStyleClass="lead_{!cusField.localName} {!if(p.columnsInt>1,'coloumn2Class','coloumn1Class')}">
                    	<apex:outputLabel value="{!cusField.fieldLabel}"/><!-- {!cusField.fieldLabe} -->
						<apex:outputpanel styleClass="requiredInput" layout="block">
							<apex:outputPanel styleClass="{!if(cusField.isRequired,'cusRepuiredClass','')}" layout="block"/>
							<apex:outputText value="{!newLead[cusField.localName]}"  styleClass="{!if(cusField.isRequired,'repuiredClass','')}"  style="{!cusField.fieldStyle}"/>
						</apex:outputpanel>
                    </apex:pageBlockSectionItem>
		    		<!--2017/01/25 新規画面の項目自定義機能　by　zy　END-->
					<!-- お客様 -->
					<apex:pageBlockSectionItem id="relcontactItem" helpText="{!$ObjectType.Contact.Fields.Name1__c.InlineHelpText}" rendered="{!cusField.fieldType == 'relcontact'}" dataStyleClass="{!if(p.columnsInt>1,'coloumn2Class','coloumn1Class')}"> 
						<apex:outputLabel value="{!$Label.ps__msg_005_0048}"/>
			            <apex:outputPanel styleClass="requiredInput" layout="block">
							<apex:outputPanel styleClass="{!if(cusField.isRequired,'cusRepuiredClass','')}" layout="block"/>
			            <!-- INPUT　FIELD　SPAN　SECTION -->
			            <span class="lookupInput">
							<apex:inputText id="relcontact" value="{!contactName}" html-placeholder="{!$Label.ps__inf_0002}" style="{!if(ISBLANK(cusField.fieldStyle),'width:200px',cusField.fieldStyle)}"   styleClass="{!if(cusField.isRequired,'repuiredClass','')}"  maxlength="80">
											<!-- 2016/12/13 CTI予約 BEGIN by zyz -->
											<apex:inputHidden value="{!ctiContactInf}" id="ctiContactInf"/>
											<!-- 2016/12/13 CTI予約 END by zyz -->
				            <apex:inputHidden value="{!newLead.Relcontact__c}" id="relcontact_lkid"/>
				            <apex:inputHidden id="relcontact_lkold"/>       <!-- PopupWin利用 -->
				            <input type="hidden" id="relcontact_lkid_org" />    <!-- JS判断用 -->
				            <c:AutoCompleteComp objectname="Contact" 
				                additionalfield="{!$Setup.CommDefine__c.AppNS__c}KanaName1__c,{!$Setup.CommDefine__c.AppNS__c}Name1__c,Phone,{!$Setup.CommDefine__c.AppNS__c}CompanyNameCal__c,{!$Setup.CommDefine__c.AppNS__c}Katakana__c"
				                autocomplete_textbox="{!$Component.relcontact}" 
				                showField="{!$Setup.CommDefine__c.AppNS__c}KanaName1__c,{!$Setup.CommDefine__c.AppNS__c}Katakana__c,Phone,{!$Setup.CommDefine__c.AppNS__c}CompanyNameCal__c,Description"
				                maxLenFilter="Description:16"
				                showFieldSeparator=", "
				                jslibnew="true"
				                addFilter="IsDelete__c!=true"
				            />
				            </apex:inputText>
				            <!-- 部屋選択 -->
				            <img title="" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';"
				             onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';"
				             onfocus="this.className = 'lookupIconOn';"
				             onblur="this.className = 'lookupIcon';"
				             class="lookupIcon" alt="" src="/s.gif" style="cursor: pointer;vertical-align:middle;border: 0px"
				             name="accountPopup" />
						</span>
						</apex:outputPanel>
					</apex:pageBlockSectionItem>
           		 	<!-- 部屋タイプ -->
					<apex:pageBlockSectionItem id="refTypeOfRoomsItem"  rendered="{!cusField.fieldType == 'refTypeOfRooms'}" dataStyleClass="{!if(p.columnsInt>1,'coloumn2Class','coloumn1Class')}">
						<apex:outputLabel value="{!$Label.ps__msg_005_0042}"/>
						<apex:outputPanel styleClass="requiredInput" layout="block">
			            	<apex:outputPanel styleClass="{!if(cusField.isRequired,'cusRepuiredClass','')}" layout="block"/>
							<apex:outputText id="refTypeOfRooms" value="" style="{!cusField.fieldStyle}" styleClass="{!if(cusField.isRequired,'repuiredClass','')} autoSplitText" />
						</apex:outputPanel>
					</apex:pageBlockSectionItem>
					<!-- 予約名 -->
					<apex:pageBlockSectionItem id="leadNameItem" rendered="{!cusField.fieldType == 'leadName'}" dataStyleClass="{!if(p.columnsInt>1,'coloumn2Class','coloumn1Class')}">
						<apex:outputLabel value="{!$Label.ps__msg_005_0049}"/>
						<apex:outputPanel styleClass="requiredInput" layout="block">
			            	<apex:outputPanel styleClass="{!if(cusField.isRequired,'cusRepuiredClass','')}" layout="block"/>
							<apex:inputField id="leadName" value="{!newLead.name}"  styleClass="{!if(cusField.isRequired,'repuiredClass','')}" style="{!if(ISBLANK(cusField.fieldStyle),'width:200px',cusField.fieldStyle)}"  />
						</apex:outputPanel>
					</apex:pageBlockSectionItem>
					<!-- $到着日 -->
					<apex:pageBlockSectionItem id="entryDateItem" rendered="{!cusField.fieldType == 'entryDate'}" dataStyleClass="{!if(p.columnsInt>1,'coloumn2Class','coloumn1Class')}">
						<apex:outputLabel value="{!$Label.ps__msg_005_0050}"/>
						<apex:outputPanel styleClass="requiredInput" layout="block">
			            	<apex:outputPanel styleClass="{!if(cusField.isRequired,'cusRepuiredClass','')}" layout="block"/>
		                	<apex:outputText id="entryDate" value=""   styleClass="{!if(cusField.isRequired,'repuiredClass','')}" style="{!cusField.fieldStyle}"/>
		                </apex:outputPanel>
		            </apex:pageBlockSectionItem>
		            <!-- ひらがな -->
					<apex:pageBlockSectionItem helpText="{!$ObjectType.Contact.Fields.Katakana__c.InlineHelpText}" id="katakanaItem" rendered="{!cusField.fieldType == 'katakana'}" dataStyleClass="contact_{!$Setup.CommDefine__c.AppNS__c}Katakana__c {!if(p.columnsInt>1,'coloumn2Class','coloumn1Class')}">
		        		<apex:outputLabel value="{!$ObjectType.Contact.Fields.Katakana__c.label}"/>
		        		<apex:outputPanel styleClass="requiredInput" layout="block">
			        		<apex:outputPanel styleClass="{!if(cusField.isRequired,'cusRepuiredClass','')}" layout="block"/>
			        		<apex:inputText id="katakana" value="{!newContact.Katakana__c}"  styleClass="{!if(cusField.isRequired,'repuiredClass','')}" maxlength="80"  style="{!cusField.fieldStyle}"/>
		        		</apex:outputPanel>
					</apex:pageBlockSectionItem>
					<!-- 到着時刻 -->
		            <apex:pageBlockSectionItem id="entryTimeItem" rendered="{!cusField.fieldType == 'entryTime'}" dataStyleClass="{!if(p.columnsInt>1,'coloumn2Class','coloumn1Class')}">
		                <apex:outputLabel value="{!$ObjectType.Lead__c.Fields.Field4__c.label}"/>
		                <apex:outputPanel styleClass="requiredInput" layout="block">
			            	<apex:outputPanel styleClass="{!if(cusField.isRequired,'cusRepuiredClass','')}" layout="block"/>
		                	<apex:inputField id="entryTime" value="{!newLead.Field4__c}" styleClass="{!if(cusField.isRequired,'repuiredClass','')}"  style="{!cusField.fieldStyle}"/>
		                </apex:outputPanel>
		            </apex:pageBlockSectionItem>
		            <!-- カタカナ -->
					<apex:pageBlockSectionItem helpText="{!$ObjectType.Contact.Fields.KanaName1__c.InlineHelpText}" id="kanaNameItem" rendered="{!cusField.fieldType == 'kanaName'}" dataStyleClass="contact_{!$Setup.CommDefine__c.AppNS__c}KanaName1__c {!if(p.columnsInt>1,'coloumn2Class','coloumn1Class')}">
						<apex:outputLabel value="{!$Label.ps__msg_005_0051}"/>
						<apex:outputPanel styleClass="requiredInput" layout="block">
			            	<apex:outputPanel styleClass="{!if(cusField.isRequired,'cusRepuiredClass','')}" layout="block"/>
							<apex:inputText id="kanaName" value="{!newContact.KanaName1__c}"  style="{!cusField.fieldStyle}"/>
						</apex:outputPanel>
					</apex:pageBlockSectionItem>
					<!-- $出発日 -->
					<apex:pageBlockSectionItem id="departureDateItem" rendered="{!cusField.fieldType == 'departureDate'}" dataStyleClass="{!if(p.columnsInt>1,'coloumn2Class','coloumn1Class')}">
						<apex:outputLabel value="{!$Label.ps__msg_005_0052}"/>
						<apex:outputPanel styleClass="requiredInput" layout="block">
			            	<apex:outputPanel styleClass="{!if(cusField.isRequired,'cusRepuiredClass','')}" layout="block"/>
							<apex:outputText id="departureDate" value=""  style="{!cusField.fieldStyle}"/>
						</apex:outputPanel>
					</apex:pageBlockSectionItem>
					<!-- TEL -->
					<apex:pageBlockSectionItem id="custPhoneItem" rendered="{!cusField.fieldType == 'custPhone'}" dataStyleClass="{!if(p.columnsInt>1,'coloumn2Class','coloumn1Class')} contact_Phone">
						<apex:outputLabel value="{!$Label.ps__msg_005_0053}"/>
						<apex:outputPanel styleClass="requiredInput" layout="block">
			            	<apex:outputPanel styleClass="{!if(cusField.isRequired,'cusRepuiredClass','')}" layout="block"/>
							<apex:inputText id="custPhone" value="{!newContact.Phone}"  style="{!cusField.fieldStyle}"/>
						</apex:outputPanel>
					</apex:pageBlockSectionItem>
					<!-- $出発時刻 -->
		            <apex:pageBlockSectionItem id="departureTimeItem" rendered="{!cusField.fieldType == 'departureTime'}" dataStyleClass="{!if(p.columnsInt>1,'coloumn2Class','coloumn1Class')}">
		                <apex:outputLabel value="{!$ObjectType.Lead__c.Fields.Field3__c.label}"/>
		                <apex:outputPanel styleClass="requiredInput" layout="block">
			            	<apex:outputPanel styleClass="{!if(cusField.isRequired,'cusRepuiredClass','')}" layout="block"/>
		                	<apex:inputField id="departureTime" value="{!newLead.Field3__c}" styleClass="{!if(cusField.isRequired,'repuiredClass','')}" style="{!cusField.fieldStyle}"/>
		                </apex:outputPanel>
		            </apex:pageBlockSectionItem>
		             <!-- 予約人数 -->
					<apex:pageBlockSectionItem id="stayPersonItem" rendered="{!cusField.fieldType == 'stayPerson'}" dataStyleClass="{!if(p.columnsInt>1,'coloumn2Class','coloumn1Class')}">
						<apex:outputLabel value="{!$Label.ps__msg_005_0054}"/>
						<apex:outputPanel styleClass="requiredInput" layout="block">
			            	<apex:outputPanel styleClass="{!if(cusField.isRequired,'cusRepuiredClass','')}" layout="block"/>
							<!--  <apex:inputField id="stayPerson" value="{!newLead.StayPersons__c}" required="false"/>-->
							<apex:inputField id="stayPerson" value="{!newLead.StayPersons__c}" styleClass="{!if(cusField.isRequired,'repuiredClass','')}" style="{!cusField.fieldStyle}"/>
						</apex:outputPanel>
					</apex:pageBlockSectionItem>
					<!-- セミナー -->
		            <apex:pageBlockSectionItem rendered="{!cusField.fieldType == 'seminarorder'}" dataStyleClass="{!if(p.columnsInt>1,'coloumn2Class','coloumn1Class')}">
		            	<!--2017/02/28 新版本対応　by zy BEGIN-->
		            	<apex:outputLabel value="{!$ObjectType.Lead__c.Fields.SeminarOrderFlg__c.label}" rendered="{!isHaveSeminar}"/>
		            	<apex:outputPanel styleClass="requiredInput" layout="block">
			            	<apex:outputPanel styleClass="{!if(cusField.isRequired,'cusRepuiredClass','')}" layout="block" rendered="{!isHaveSeminar}"/>
		            		<apex:inputField id="seminarOrderFlg" value="{!newLead.SeminarOrderFlg__c}" styleClass="{!if(cusField.isRequired,'repuiredClass','')}" rendered="{!isHaveSeminar}" style="{!cusField.fieldStyle}"/>
		            		<apex:outputLabel value="" rendered="{!!isHaveSeminar}"/>
		            	</apex:outputPanel>
		            	<!--2017/02/28 新版本対応　by zy END-->
		            </apex:pageBlockSectionItem>
		            <!-- 泊数 -->
		            <apex:pageBlockSectionItem id="staysNumsItem" rendered="{!cusField.fieldType == 'staysNums'}" dataStyleClass="{!if(p.columnsInt>1,'coloumn2Class','coloumn1Class')}">
		                <apex:outputLabel value="{!$Label.ps__msg_005_0055}"/>
		                <apex:outputPanel styleClass="requiredInput" layout="block">
		            		<apex:outputPanel styleClass="{!if(cusField.isRequired,'cusRepuiredClass','')}" layout="block"/>
		                	<apex:inputText id="staysNums" value="{!staysNums}" onchange="setDepartureDateAuto()" maxlength="4" styleClass="{!if(cusField.isRequired,'repuiredClass','')}" style="{!cusField.fieldStyle}"/>
		                </apex:outputPanel>
		            </apex:pageBlockSectionItem>
		            <!-- エキストラベッド -->
		            <apex:pageBlockSectionItem rendered="{!cusField.fieldType == 'extrabedchk'}" dataStyleClass="{!if(p.columnsInt>1,'coloumn2Class','coloumn1Class')}">
		                <apex:outputLabel value="{!$ObjectType.Lead__c.Fields.ExtraBedChk__c.label}" rendered="{!isHaveEbInfo}"/>
		                <apex:outputPanel styleClass="requiredInput" layout="block" >
		            		<apex:outputPanel styleClass="{!if(cusField.isRequired,'cusRepuiredClass','')}" layout="block" rendered="{!isHaveEbInfo}"/>
		                	<apex:inputField id="extrabedFlg" value="{!newLead.ExtraBedChk__c}" styleClass="{!if(cusField.isRequired,'repuiredClass','')}" rendered="{!isHaveEbInfo}" style="{!cusField.fieldStyle}"/>
		                	<apex:outputLabel value="" rendered="{!!isHaveEbInfo}"/>
		                </apex:outputPanel>
		                
		            </apex:pageBlockSectionItem>
		            
		            <!-- 部屋 --> 
		            <apex:pageBlockSectionItem id="broom" rendered="{!cusField.fieldType == 'brooms'}" dataStyleClass="{!if(p.columnsInt>1,'coloumn2Class','coloumn1Class')}">
		                <apex:outputlabel value="{!$ObjectType.Lead__c.Fields.Rroom__c.label}" />
		                <apex:outputPanel styleClass="requiredInput" layout="block">
		            		<apex:outputPanel styleClass="{!if(cusField.isRequired,'cusRepuiredClass','')}" layout="block"/>
		                	<apex:outputText id="roomName" value="" styleClass="autoSplitText" style="{!cusField.fieldStyle}"/>
		                </apex:outputPanel>
		            </apex:pageBlockSectionItem>
		            <!-- 部屋数 --> 
		            <apex:pageBlockSectionItem id="broomNum" rendered="{!cusField.fieldType == 'broomNum'}" dataStyleClass="{!if(p.columnsInt>1,'coloumn2Class','coloumn1Class')}">
		                <apex:outputlabel value="{!$Label.ps__msg_005_0056}" />
		                <apex:outputPanel styleClass="requiredInput" layout="block">
		            		<apex:outputPanel styleClass="{!if(cusField.isRequired,'cusRepuiredClass','')}" layout="block"/>
		                	<apex:outputText id="roomNum" value="" style="{!cusField.fieldStyle}"/>
		                </apex:outputPanel>
		            </apex:pageBlockSectionItem>
		            
		            <!-- プラン -->
		            <apex:pageBlockSectionItem id="planItem" rendered="{!!isPlanDetailFlag && cusField.fieldType == 'plan'}" dataStyleClass="{!if(p.columnsInt>1,'coloumn2Class','coloumn1Class')}">
		                <apex:outputLabel value="{!$Label.ps__msg_005_0057}"/>
					    <apex:outputPanel styleClass="requiredInput" layout="block">
		            		<apex:outputPanel styleClass="{!if(cusField.isRequired,'cusRepuiredClass','')}" layout="block"/>
					    	<span class="lookupInput">
								<!-- 2016/12/29 连接plan页面替换标准页面  begin by wx-->
								<apex:inputText value="{!planName}" id="plan" html-placeholder="{!$Label.ps__inf_0002}" style="{!if(ISBLANK(cusField.fieldStyle),'width:180px',cusField.fieldStyle)}" styleClass="{!if(cusField.isRequired,'repuiredClass','')}"/>
		                		<apex:inputHidden value="{!newLead.Field310__c}" id="plan_lkid" />
		                		<!-- 2016/12/29 连接plan页面替换标准页面  end by wx-->
								<c:AutoCompleteComp objectname="Plan__c"
									jslibnew="true"
									additionalfield="{!$Setup.CommDefine__c.AppNS__c}PlanNo__c,{!$Setup.CommDefine__c.AppNS__c}PackageCode__c"
									autocomplete_textbox="{!$Component.plan}" addFilter="IsClosed__c=false" callbackFunction="planRest"  soslExtend="false"/>
								
								<!-- 2016/12/29 连接plan页面替换标准页面  begin by wx  -->
			           			<img title="" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';"
			            				onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';"
			            				onfocus="this.className = 'lookupIconOn';"
			            				onblur="this.className = 'lookupIcon';"
			            				class="lookupIcon" alt="" src="/s.gif" style="cursor: pointer;"
			            				name="planPopup" />
								<!-- 2016/12/29 连接plan页面替换标准页面  end by wx  -->
								<!-- プラン詳細 -->
								<img src="{!URLFOR($Resource.AppImages, 'extend/jiahao.png')}" style="cursor: pointer; width: 18px; height: 18px;"
					                		onclick="javascript:openMiniPlanSetup(this);" id="planCustomeBtn" title="{!$Label.MSG_005_0058}"/>
							</span>
						 	<apex:inputHidden value="{!newLead.PlanDetailSyncInfo__c}" id="nl_hidPlanDetailInfo"/>
						</apex:outputPanel>
		            </apex:pageBlockSectionItem>
		            
		            <!-- 支払方法 -->
		            <apex:pageBlockSectionItem id="paymentTypeItem" rendered="{!cusField.fieldType == 'paymentType'}" dataStyleClass="{!if(p.columnsInt>1,'coloumn2Class','coloumn1Class')}">
		                <apex:outputLabel value="{!$Label.ps__msg_005_0059}"/>
		                <apex:outputPanel styleClass="requiredInput" layout="block">
		            		<apex:outputPanel styleClass="{!if(cusField.isRequired,'cusRepuiredClass','')}" layout="block"/>
			                <apex:selectList value="{!newLead.Field315__c}" multiselect="false" size="1" id="paymentType"  style="{!cusField.fieldStyle}" styleClass="{!if(cusField.isRequired,'repuiredClass','')}">
			                    <apex:selectOptions value="{!paymentTypeLst}"/>
			                </apex:selectList>
		                </apex:outputPanel>
		            </apex:pageBlockSectionItem>
		            
		            <!-- 予約チャネル -->
		            <apex:pageBlockSectionItem id="channel" rendered="{!cusField.fieldType == 'channel'}" dataStyleClass="{!if(p.columnsInt>1,'coloumn2Class','coloumn1Class')}">
		                <apex:outputLabel value="{!$Label.ps__msg_005_0060}"/>
		                <apex:outputPanel styleClass="requiredInput" layout="block">
		            		<apex:outputPanel styleClass="{!if(cusField.isRequired,'cusRepuiredClass','')}" layout="block"/>
		                	<apex:inputField value="{!newLead.Field2__c}" id="chanelId" styleClass="{!if(cusField.isRequired,'repuiredClass','')}"  style="{!cusField.fieldStyle}"/>
		                </apex:outputPanel>
		            </apex:pageBlockSectionItem>
		            <!-- セグメント -->
		            <apex:pageBlockSectionItem id="segmentItem" rendered="{!cusField.fieldType == 'segment'}" dataStyleClass="{!if(p.columnsInt>1,'coloumn2Class','coloumn1Class')}">
		                <apex:outputLabel value="{!$Label.ps__msg_005_0061}"/>
		                <apex:outputPanel styleClass="requiredInput" layout="block">
		            		<apex:outputPanel styleClass="{!if(cusField.isRequired,'cusRepuiredClass','')}" layout="block"/>
		                	<apex:inputField id="segment" value="{!newLead.Segment__c}" styleClass="{!if(cusField.isRequired,'repuiredClass','')}" style="{!cusField.fieldStyle}"/>
		                </apex:outputPanel>
		            </apex:pageBlockSectionItem>
		            
		            <!-- コメント入力項目 -->
		            <apex:pageBlockSectionItem rendered="{!cusField.fieldType == 'comment3'}">
		                <apex:outputLabel value="{!$ObjectType.Lead__c.Fields.Comment3__c.label}"/>
		            	<apex:outputPanel styleClass="requiredInput" layout="block">
		            		<apex:outputPanel styleClass="{!if(cusField.isRequired,'cusRepuiredClass','')}" layout="block"/>
		            		<!-- 2018/05/08 特記事項に定型文をクリック一つで入力できる機能 zyz BEGIN -->		
		            		<c:CommentHelperComp commentId="comment3" commentFlg="true"/>
		            		<!-- 2018/05/08 特記事項に定型文をクリック一つで入力できる機能 zyz END -->
			               <apex:inputTextarea value="{!newLead.Comment3__c}" id="comment3" html-element="lead_{!cusField.localName}" richtext="false" rows="4" cols="160" style="{!cusField.fieldStyle}" styleClass="ckeditorClass {!if(cusField.isRequired,'repuiredClass','')}"/>
		            	</apex:outputPanel>
		            </apex:pageBlockSectionItem>
				</apex:repeat>
			</apex:pageBlockSection>
       </apex:repeat>
      </apex:pageBlock>
	<!-- 2016/11/16 見積明細設定機能対応 BEGIN by zh -->
      <!-- 予約見積明細 BEGIN-->
  	<apex:outputpanel id="detailPageBlock" rendered="{!isPlanDetailFlag}">
  	<apex:inputHidden value="{!curRows}" id="hidCurRows"/>
	<!-- 2020/04/30 複数のプランとそれぞれのプランの人数を選択し機能対応 WGCH BEGIN -->
	<apex:inputHidden value="{!addRowsMan}" id="hidaddRowsMan"/>
	<!-- 2020/04/30 複数のプランとそれぞれのプランの人数を選択し機能対応 WGCH END -->
    <apex:pageBlock >
    <apex:actionFunction name="addTranItemFun" action="{!addBookingItem}"
    	status="refStatusBlock" reRender="detailPageBlock,leadMessagePanel" oncomplete="JINYACONNECT.CUSTOM.detailBindEvent();_gotoLastDetailRow()"/>
        <table style="border-spacing: 0px;border-collapse: 0px;table-layout: fixed;width:100%">
			<tr>
				<td style="white-space: nowrap;">
					<!-- 2020/01/30 行追加ボタン機能対応 BY zyz BEGIN -->
					<!-- 行追加  -->
    				<!-- 2016/11/16 行追加機能対応 BEGIN by zh --> 
    				<input class="btn" value="{!$Label.MSG_011_0052}" type="button" onclick="refreshOrder(true);checkAddTranItem()" style="width: 100px;" />
    				<!-- 2016/11/16 行追加機能対応 END by zh --> 
					<!-- 2020/01/30 行追加ボタン機能対応 BY zyz END -->
					<!-- 2020/04/30 複数のプランとそれぞれのプランの人数を選択し機能対応 WGCH BEGIN -->
    				<input class="btn" value="プラン" type="button" onclick="openPlanWinFun();" style="width: 100px;display:{!IF(isBasePlanFlag,'','none;')}" />
    				<!-- 2020/04/30 複数のプランとそれぞれのプランの人数を選択し機能対応 WGCH END -->
    			</td>
            	<td style="width:75.5%; text-align: right;vertical-align: middle;text-align: right;">
	                <table style="width: 100%; border-spacing: 0px;border-collapse: 0px; font-size: 16px;font-weight: bold;table-layout: fixed;text-align: right;">
	                	<tr>
	                		<td style="height: 24px;">
	                			<!-- ご利用金額(税込)： -->
	                			<span>{!$Label.MSG_006_0250}</span>
	                		</td>
	                		<td style="width: 110px">
	                			<input type="hidden" class="detailClass" id="totalAmountExcTax" />
			                   	<apex:outputPanel style="margin-right: 2px;" id="usedAmount">
					    			<span id="usedAmountBlock" ></span>  	
			                   	</apex:outputPanel>
	                		</td>
	                	</tr>
	                	<tr>
	                		<td style="height: 24px;">
	                			<!-- ご請求金額(税込)： -->
	                			<span>{!$Label.MSG_006_0259}</span>
	                		</td>
	                		<td style="width: 110px">
			                   	<apex:outputPanel style="margin-right: 2px;" id="reqAmount">
					    			<span id="reqAmountBlock"></span>  	
			                   	</apex:outputPanel>
	                		</td>
	                	</tr>
	                </table>
	    		</td>
	   		</tr>
	   	</table>
	   	
	   	<apex:pageBlockTable value="{!oBookEstLst}" var="t" id="BookEstTable" columnsWidth="1%,3%,37%,10%,10%,9%,7%,7%,7%,9%" rowClasses="tranDetailRow">
				<apex:column width="1%">
				<!-- 移動 -->
					 <div title="{!$Label.MSG_011_0050}"  class="pointIndex {!t.addRowStr}" rowIndex = "{!t.index}">
					 	  <img title="" class="pointImg" alt="" src="{!URLFOR($Resource.AppImages, 'extend/blur.png')}" />  
				          <apex:inputHidden value="{!t.sobj.RowNo__c}" id="hidRowNo" /> 
					</div>
				</apex:column>
				
				<!-- アクション -->
			 	<apex:column headerValue="{!$Label.ps__msg_011_0061}" footerClass="totalRowCenCell" width="3%">
			 		<!-- クリア -->
					<input type="button" title="{!$Label.MSG_011_0062}" value="{!$Label.MSG_011_0062}" id="clearProduct" rowIndex="{!t.index}" />
				</apex:column>
		
			 	<!-- 商品コード -->
			 	<!-- 商品 -->
		        <apex:column headerValue="{!$Label.ps__msg_011_0063}">
		        		<span class="lookupInput">
		        		<!-- 
		                <input type="text" value="{!t.productNm}" id=":BookEstTable:{!t.index}:productName"
		                    readonly="readonly" style="background-color:#f1f1f1; background-image: url({!URLFOR($Resource.reportFiles, 'img/blank')});" /> -->
		                <apex:inputText value="{!t.productNm}" id="productName" maxlength="80" size="25" html-rowIndex="{!t.index}"/>
		                <img title="" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';"
			              onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';"
			              onfocus="this.className = 'lookupIconOn';"
			              onblur="this.className = 'lookupIcon';"
			              class="lookupIcon" alt="" src="/s.gif" style="cursor: pointer;"
			              name="productPopup"
			              rowIndex = "{!t.index}" />
			          	
			            <!-- 単価用ボタン -->
			            <!-- 展開 -->
		                <img title="{!$Label.MSG_011_0064}" src="{!URLFOR($Resource.AppImages, 'extend/jiahao.png')}"
		                    style="cursor: pointer;display: true; width: 18px; height: 18px; visibility:{!IF(t.isPlanProduct,'visible','hidden')}"
		                    id="showDetailEvent{!t.index}" onclick="showDetailFun(this)" openStatus="false"
		                    rowIndex = "{!t.index}" />
						</span>
					  <apex:inputHidden value="{!t.sobj.PlanDetailSyncInfo__c}" id="hidSyncInfo" />
		              <!-- 関連情報を一時保持するため、別の変数を定義する -->
		              	
		              <!-- 2018/07/27 宿泊税計算 WGCH BEGIN -->
		              <!-- <apex:inputHidden value="{!t.sobj.refAccountMaster__c}" id="hidProductId" /> -->
		              <!-- 2019/04/30 増税仮対応 WGCH BEGIN -->
		              <!-- <apex:inputHidden value="{!t.sobj.refAccountMaster__c}" id="hidProductId" html-rowNo="{!t.rowNo}" /> -->
		              <apex:inputHidden value="{!t.sobj.refAccountMaster__c}" id="hidProductId" html-rowNo="{!t.rowNo}" html-rowindex="{!t.index}" />
		              <!-- 2019/04/30 増税仮対応 WGCH END -->
		              <!-- 2018/07/27 宿泊税計算 WGCH END -->
		              <apex:inputHidden value="{!t.orgProductNm}" id="hidProductNm" />
		              <!-- 関連情報を一時保持するため、別の変数を定義する -->
		              <apex:inputHidden value="{!t.sobj.ActionType__c}" id="hidActionType" />
					  <!-- 支払種別 -->
					  <apex:inputHidden value="{!t.sobj.PaymentType__c}" id="hidPaymentType" />
					  <!-- 金額（税込み) -->
					  <apex:inputHidden value="{!t.amoutIncTax}" id="hidAmoutPriceIncTax" html-rowIndex="{!t.index}"/>
					  <!-- 金額（税抜き） -->
					  <apex:inputHidden value="{!t.amoutExcTax}" id="hidAmoutPriceExcTax" />
					  <!-- 単価定義区分 -->
					  <input type="hidden" value="{!t.sobj.UnitPriceDefKbCal__c}" id=":tran1Table:{!t.index}:hidUnitPriceKbn" />
					  <!-- 2015/10/16 プラン明細課税、非課税混在合計金額計算対応 BEGIN -->
					  <!-- 2016/11/21 行追加后課税商品计算错误 BEGIN by zh -->
					  <apex:inputHidden id="hidPlandetail" value="{!t.initPlanInfo}"/>
					  <!-- 2016/11/21 行追加后課税商品计算错误 END by zh -->
					  <!-- 2015/10/16 プラン明細課税、非課税混在合計金額計算対応 END -->
					  <input type="hidden" id=":BookEstTable:{!t.index}:hidHadRoomFlag" value=""/>
					  <!-- 2018/07/27 宿泊税計算 WGCH BEGIN -->
					  <input type="hidden" id="BookEstTable:{!t.index}:hidPDetailId" value=""/>
					  <!-- 2018/07/27 宿泊税計算 WGCH END -->
					  <!-- 2019/07/30 軽減税率機能対応 WGCH BEGIN -->
					  <input type="hidden" id=":BookEstTable:{!t.index}:hidPlanBrkInfoId" value=""/>
					  <!-- 2019/07/30 軽減税率機能対応 WGCH END -->
					  <!-- 2020/07/30 入湯税の自動入力機能について改善 zyz BEGIN -->
					  <!-- 第一笔Plan对应的入汤税商品Id -->
					  <apex:inputHidden value="{!t.bTaxAccMstId}" id="hidBTaxAccMstId" />
					  <!-- 入汤税商品对应关联PLANROWNO -->
					  <apex:inputHidden value="{!t.bTaxToPlanRowIndex}" id="hidBTaxToPlanRowIndex" />
					  <!-- 放大镜入汤税商品 -->
					  <apex:inputHidden value="{!t.bTaxAccMstItem}" id="hidBTaxAccMstItem" />
					  <!-- 2020/07/30 入湯税の自動入力機能について改善 zyz END -->
					  <!-- 2020/04/30 複数のプランとそれぞれのプランの人数を選択し機能対応 WGCH BEGIN -->
					  <apex:inputHidden value="{!t.sobj.SysSelBasePlanNums__c}" id="hidBasePlanNum" />
					  <apex:inputHidden value="{!t.sobj.GuestType__c}" id="hidEstGuestType" />
					  <!-- 2020/04/30 複数のプランとそれぞれのプランの人数を選択し機能対応 WGCH END -->
		        </apex:column>
		
				<!-- 単価-->
		        <apex:column headerValue="{!$Label.ps__msg_006_0404}" >
		            <!-- <apex:inputField value="{!t.sobj.UnitPrice__c}" id="price" style="width:80px"/> -->
		            <apex:inputText value="{!t.unitPrice}" id="price"  style="width:50px"/>
		        </apex:column>
		
				<!-- 数量-->
		        <apex:column headerValue="{!$Label.ps__msg_006_0405}" >
		            <apex:inputText value="{!t.prodNums}" id="orderNums" maxlength="8" style="width:35px"/>
		        </apex:column>
		
				<!-- 合計金額(税抜)-->
		        <apex:column headerValue="{!$Label.ps__msg_006_0258}" 
		        	style="text-align: right; background-color: #FFEBCD;min-width:68px" headerClass="smallTitle">
					<apex:outputText value="{0,number,{!numberFormat}}"  id="amoutPriceExcTax">
					<apex:param value="{!t.amoutExcTax}" />
					</apex:outputText>
		        </apex:column>
		
				<!-- 消費税 -->
		        <apex:column headerValue="{!$Label.ps__msg_006_0406}" style="text-align: right; min-width:50px">
					<!-- <apex:outputField value="{!t.sobj.TaxRate__c}" id="taxRateType"/> -->
					<apex:outputText value="{0,number, {!TaxNumberFormat}}" id="taxRateType">
		            <apex:param value="{!t.sobj.TaxRate__c/100}" />
		            </apex:outputText>
					<apex:inputHidden value="{!t.sobj.TaxRate__c}" id="hidTaxRateType" />
		        </apex:column>
		        <!-- サービス料 -->
		        <apex:column headerValue="{!$Label.ps__msg_006_0407}" style="text-align: right; min-width:40px" headerClass="smallTitle" >
					<!--<apex:outputText value="{0,number, {!TaxNumberFormat}}" id="serviceRate">
						<apex:param value="{!t.sobj.ServiceRate__c/100}" />
		            	</apex:outputText>-->
		            	<apex:outputField value="{!t.sobj.ServiceRate__c}" id="serviceRate" />
					<apex:inputHidden value="{!t.sobj.ServiceRate__c}" id="hidServiceRate" />
		        </apex:column>
		        <!-- 特別税 -->
		        <apex:column headerValue="{!$Label.ps__msg_006_0408}" style="text-align: right; min-width:50px">
		
		            <apex:outputText value="{0,number,{!numberFormat}}" id="specialTax">
		                <apex:param value="{!t.specialTax}" />
		            </apex:outputText>
					<apex:inputHidden value="{!t.sobj.SpecialTax__c}" id="hidSpecialTax" />
		        </apex:column>
		        <!-- 合計金額(税込) -->
		        <apex:column headerValue="{!$Label.ps__msg_006_0257}" style="text-align: right; background-color: #FFEBCD;min-width:68px" headerClass="smallTitle"
		        	footerClass="totalRowNumCell">
					<apex:outputText value="{0,number,{!numberFormat}}"  id="amoutPriceIncTax" >
						<apex:param value="{!t.amoutIncTax}" />
					</apex:outputText>
		        </apex:column>
			</apex:pageBlockTable>
		</apex:pageBlock>
		</apex:outputpanel>
  <!-- 予約見積明細 END-->
<!-- 2016/11/16 見積明細設定機能対応 END by zh -->
  </div>

  <!-- Footer -->
  <div class="ft" >
    <apex:outputPanel layout="block">
        <div style="text-align: right;" >
	<input type="reset" value="reset" id="createLeadFormresetbtn" style="display: none;"/>
	<!-- 2016/11/16 見積明細設定機能対応 BEGIN by zh -->
	<!-- 保存 -->
          <!--<apex:commandButton value="{!$Label.MSG_005_0062}" onclick="doBeforeSave();" oncomplete="leadCreateCallBack();"
            style="width: 100px"  action="{!bookingCreate}"  rerender="leadMessagePanel"/>-->
          <input type="button" value="{!$Label.MSG_005_0062}" class="btn" style="width: 100px"  onclick="doBeforeSave();"/>
           <apex:actionFunction name="saveLeadFun" oncomplete="leadCreateCallBack();" 
                            action="{!bookingCreate}"   reRender="leadMessagePanel"  />
	<!-- 2016/11/16 見積明細設定機能対応 BEGIN by zh -->
	<!-- キャンセル -->
          <input type="button" value="{!$Label.MSG_005_0063}" class="btn" style="width: 100px" 	onclick="YAHOO.force.com.hideCreateLead()" />
        </div>
    </apex:outputPanel>
  </div>
  </apex:form>
</div>
<div class="growlUI" style="display: none;">
	<table style="width:98%" class="notifyMsgTable">
		<tr>
			<td style="width:80px"><h2><!-- 到着時刻: -->{!$Label.MSG_005_0064}</h2></td>
			<td><h2 class="entryTime"></h2></td>
			<td style="width:80px"><h2><!-- 出発時刻: -->{!$Label.MSG_005_0065}</h2></td>
			<td><h2 class="departTime"></h2></td>
		</tr>
		<tr>
			<td ><h2><!-- 部屋 -->{!$Label.MSG_005_0066}</h2></td>
			<td colspan="3"><h2 class="roomLst" ></h2></td>
		</tr>
		<tr>
			<td><h2><!-- 部屋数 -->{!$Label.ps__msg_005_0056}</h2></td>
			<td colspan="3"><h2 class="roomCount" ></h2></td>
		</tr>
	</table>
</div>
<!-- 2016/11/22 故障部屋一括登録機能対応 BEGIN -->
<apex:form >
	<div class="floatBadRoom" style="display:none;">
		<div style="text-align: center;width: 100%">
			<apex:pageBlock id="badRoomPage">
			
				<div class="foot" style=" background: lightblue;">
					<table style="table-layout: fixed;border: 0px;" >
						<tr>
							<td>
								<apex:outputLabel value="{!$ObjectType.RoomsStatus__c.Fields.Name.label}" for="RoomName"  style="padding-top: 10px"/>
							</td>
							<td>
								<apex:outputPanel styleClass="requiredInput" layout="block">
            					<apex:outputPanel styleClass="requiredBlock" layout="block"/>
								<input type="text" id="RoomName" class="k-textbox" style="width:120px; heigth:26px; padding:0px;line-height:1em;border-spacing:0px;" />
								</apex:outputPanel>
							</td>
							<td>
								<apex:outputLabel value="{!$ObjectType.RoomsStatus__c.Fields.StatusBeginDate__c.label}" style="padding-top: 10px"/>
							</td>
							<td>
								<input type="text" id="roomBegingDate" class="k-textbox" style="width:120px; heigth:26px; padding:0px;line-height:1em;border-spacing:0px;" disabled="disabled" />
							</td>
							<!-- 2018/02/07 故障時刻登録　by zy BEGIN -->
							<td>
								<apex:outputLabel value="{!$ObjectType.RoomsStatus__c.Fields.BeginTime__c.label}" style="padding-top: 10px"/>
							</td>
							<td>
								<input type="text" id="roomBegingTime" class="k-textbox" style="width:60px; heigth:26px; padding:0px;line-height:1em;border-spacing:0px;" disabled="disabled" />
							</td>
							<td>
								<apex:outputLabel value="{!$ObjectType.RoomsStatus__c.Fields.StatusEndDate__c.label}"  style="padding-top: 10px"/>
							</td>
							<td>
								<input type="text" id="roomEndDate" class="k-textbox" style="width:100px; heigth:26px; padding:0px;line-height:1em;border-spacing:0px;" disabled="disabled" />
							</td>
							<td>
								<apex:outputLabel value="{!$ObjectType.RoomsStatus__c.Fields.OverTime__c.label}" style="padding-top: 10px"/>
							</td>
							<td>
								<input type="text" id="roomEndTime" class="k-textbox" style="width:60px; heigth:26px; padding:0px;line-height:1em;border-spacing:0px;" disabled="disabled" />
							</td>
							<td>
								<div style="text-align: center;width: 100%;">
								<input type="button" class="btn" style="font-size: 100%;width: 100px;" value="{!$Label.MSG_005_0062}" onclick="saveBadRoom(this)"/> 
								<!-- 2017/02/13 页面自动刷新功能 by wx begin-->
								<!--<input type="button" class="btn" style="font-size: 100%;width: 100px;" value="{!$Label.MSG_005_0063}" onclick="floatHide(this)"/>-->  
								<input type="button" class="btn" style="font-size: 100%;width: 100px;" value="{!$Label.MSG_005_0063}" onclick="floatHide(true)"/>
								<!-- 2017/02/13 页面自动刷新功能 by wx end-->
								</div>
							</td>
							<!-- 2017/12/11 故障部屋の時刻機能追加　by　zy END -->
						</tr>
					</table>
					
				</div>
			</apex:pageBlock>
		</div>
	</div>
</apex:form>
<!--  2016/11/22 故障部屋一括登録機能対応 END -->
<script>
//var timeArr = new Array();
var CONST_24H = 24*60;	// １日の分数
//右侧导航页是否显示flag
var isLoadUI = false;
// 鼠标位置是否在操作台上flag
var isMousInRightBody = false;
// 故障部屋マップ
var badRoomObj;
//拖拽时 hoverwindow 不显示
var isCanShowFlag = true;
// 2016/11/22 故障部屋一括登録機能対応 BEGIN
// 2018/02/07 故障時刻登録　by zy BEGIN
/*
var _BadMap = {
	Bad_Days:new Object(),
	Bad_Rows:new Object(),
	Bad_Expect:new Object()
}*/
// 2018/02/07 故障時刻登録　by zy END
// 2016/11/22 故障部屋一括登録機能対応 END
//一時保存のデータを作成する BEGIN
var InsertLeadLst = new Array();
var InsertMap = new Object();
var curBackClass = '';
var orgBgLst = new Array();
var EachRowHadAssign = new Object();
var beginIndex,endIndex;
//一時保存のデータを作成する END
// 複数データ「Ctrl」鍵ホールド押す
function InsertLead(bIndex,eIndex,roomId){
	// １列の分数単位
    var oneColLong = parseInt($j('input[id$="hidOneColLong"]').val());
	//pEntryTime = new Date(PositionMap[bIndex] ? PositionMap[bIndex].time : $j("col[cycIndex='" + bIndex + "']").attr("coldatetime"));
	//pDepartTime = new Date(PositionMap[eIndex] ? PositionMap[eIndex].time : $j("col[cycIndex='" + eIndex + "']").attr("coldatetime"));
	pEntryTime = getDateByIndex(bIndex);
	pDepartTime = getDateByIndex(eIndex);
	pDepartTime = pDepartTime.addMinutes(oneColLong);
	var key = bIndex + '_' + eIndex + '_' + roomId;
	var leadIndex = InsertMap[key];
	if(!leadIndex) {
		InsertMap[key] = InsertLeadLst.length;
		var lead = getLeadObj(pEntryTime,pDepartTime,roomId);
		if(lead) InsertLeadLst.push(lead);
	} else {
		if(roomId)
			InsertLeadLst[leadIndex] = getLeadObj(pEntryTime,pDepartTime,roomId);
	}
	var AssignArr = new Array();
	for (var i = bIndex ; i <= eIndex ; i++){
		AssignArr.push(i+"");
	}
	//複数データは作成場合
	if(EachRowHadAssign[roomId]){
		EachRowHadAssign[roomId] = EachRowHadAssign[roomId].concat(AssignArr);
	} else {
		EachRowHadAssign[roomId] = AssignArr;
	}
	//console.log(EachRowHadAssign[roomId]);
}
function getLeadObj(etm,dtm,id){
	var entryDt = kendo.parseDate(etm,JINYACONNECT.DateTmFormat);
	var departDt = kendo.parseDate(dtm,JINYACONNECT.DateTmFormat);
	return {
		entryDate:kendo.toString(entryDt,JINYACONNECT.DateFormat),
		entryTime:kendo.toString(entryDt,"HH:mm"),
		entrtDt : etm,
		departDate:kendo.toString(departDt,JINYACONNECT.DateFormat),
		departTime:kendo.toString(departDt,"HH:mm"),
		departDt : dtm,
		roomId:id
	}
}
function bindEvent(){
    hashMap.Clear();
    scrollFunInit();
}

function YahooToolsInit(){
    YAHOO.force.com.init();
    // *****************************
    // 予約新規登録機能起動（2014/04/15)
    // *****************************
    $j("img[name='accountPopup']").unbind("click");
     // お客様情報を選択する
    $j("img[name='accountPopup']").click(function() {
          var lkfmVal = $j("form[id$=':createForm']").attr("id");
          var lknmVal= $j("input[id$=':relcontact']").attr("id");
          var lktpVal ="003";
          // 2017/08/08 SFのJavascriptからパラメータ指定ENCODE化対応 by zh BEGIN
          //var lksrchVal =  escape($j("input[id$=':relcontact']").val());
          var lksrchVal =  encodeURIComponent($j("input[id$=':relcontact']").val());
          // 2017/08/08 SFのJavascriptからパラメータ指定ENCODE化対応  by zh END
          var url = "/_ui/common/data/LookupPage?lkfm=" + lkfmVal + "&lknm=" +lknmVal + "&lktp=" + lktpVal; 
          openLookup(url, 670, '1', "&lksrch=" + lksrchVal);
		// 2021/03/31 予約ポップやルームインジケータから予約作成する際に郵便番号検索が使えるようにして欲しい by zy BEGIN
		if ("jinyaZipCodeSearceBind" in window) {
			jinyaZipCodeSearceBind(curPopupWindow);
		}
		// 2021/03/31 予約ポップやルームインジケータから予約作成する際に郵便番号検索が使えるようにして欲しい by zy END
    });
    // お客名はクリアする場合、自動的にIDをクリアする
    $j("input[id$=':relcontact']").blur(function() {
        if ($j(this).val() == "") {
            $j("input[id$=':relcontact_lkid']").val("");
            $j("input[id$=':relcontact_lkold']").val("");
            $j("#relcontact_lkid_org").val("");
            $j("input[id$=':katakana']").val("");
            $j("input[id$=':kanaName']").val("");
            $j("input[id$=':custPhone']").val("");
        }
    });
    // お客名にて、自動予約名に設定を行う
    $j("input[id$=':leadName']").focus(function() {
        autoSetupLeadName();
    });
    // 顧客変更する場合、顧客情報を自動取得、基本情報を画面に設定する　
    $j("[id$=':relcontact']").on('blur', function(){
    	// 2017/02/14  お客様自定义关联的字段的值自动设定 FIX by zh BEGIN
		var mapContactPingField = $j("input[id$=hidContactMapFields]").val();
		var mapContactPingFieldLst = mapContactPingField.split(',');
		var contactFieldToPath = new Object();
		for (var i = 0; i < mapContactPingFieldLst.length ; i++) {
			if(mapContactPingFieldLst[i] == "" || mapContactPingFieldLst[i] == null) continue;
			var mapContactPingFieldSobj = mapContactPingFieldLst[i].split(':');
			contactFieldToPath[mapContactPingFieldSobj[0]] = mapContactPingFieldSobj[1];
		}
		// 2017/02/14  お客様自定义关联的字段的值自动设定 FIX by zh END
         var $this = $j(this);
         // 設定内容が存在する場合
         if ($this.val() != "") {
             // Content Changed
             if ($j("#relcontact_lkid_org").val().substring(0,15) != $j("input[id$=':relcontact_lkid']").val().substring(0,15)) {
                 // お客様情報のID情報を格納する
                 $j("#relcontact_lkid_org").val($j("input[id$=':relcontact_lkid']").val());
                 // 顧客情報を更新する
                 var contactId = $j("input[id$=':relcontact_lkid']").val();
                 var contactName = $this.val();
		 //2017/01/25 新規画面の項目自定義機能　by　zy　BEGIN
                 var contactFields = $j("input[id$=bHidContactFields]").val();
		 //2017/01/25 新規画面の項目自定義機能　by　zy　END
                 blockUi();
                 // 既に定義する売価はプランカラ取得、画面に設定する
                 Visualforce.remoting.Manager.invokeAction(
                 //2017/01/25 新規画面の項目自定義機能　by　zy　BEGIN
		 //"{!$RemoteAction.RoomScheduleReport.refreshContcatInfo}", contactId,contactName, function(result, event){
		 "{!$RemoteAction.RoomScheduleReport.refreshCustomContcatInfo}", contactId,contactFields, function(result, event){
                 //2017/01/25 新規画面の項目自定義機能　by　zy　END
		     if(event.type == 'exception') {
                         alert(event.message);
                     } else {
		     //2017/01/25 新規画面の項目自定義機能　by　zy　BEGIN
                     	 if (result != undefined){
                     		for (key in result){
                     			if (typeof(key) == 'string') {
                     				var resValue = result[key];
                     				var contactEle = $j("[class~='contact_" + key + "']","[id$=createPageBlock]");
                     				if(contactEle.length > 0){
                     					//$j("input,select,textarea",contactEle).val(resValue);
                     					if(contactFieldToPath[key] != undefined) {
                     						// お客様自定义关联的日期型字段
                     						if (contactFieldToPath[key] == "Date") {
                     							$j("input,select,textarea",contactEle).val(kendo.toString(new Date(resValue),'{!DateFormatStr}'));
                     						// お客様自定义关联的datetime型字段
                     						}else if (contactFieldToPath[key] == "DateTime") {
                     							$j("input,select,textarea",contactEle).val(kendo.toString(new Date(resValue),'{!DateTimeFormatStr}'));
                     						// お客様自定义关联的checkbox型字段
                     						}else if(contactFieldToPath[key] == "Boolean"){
                     							//チェック
                     							if(resValue){
													$j("input,select,textarea",contactEle).prop("checked",true);
									    		//チェックなし
									    		}else {
													$j("input,select,textarea",contactEle).prop("checked",false);
									    		}
                     						}else $j("input,select,textarea",contactEle).val(resValue);
                     						
                     					}else $j("input,select,textarea",contactEle).val(resValue);
                     				}
                     			}
                     		}
                     	}
		     //2017/01/25 新規画面の項目自定義機能　by　zy　END	
                         // 取得するお客様情報を画面に設定する
			 //2017/01/25 新規画面の項目自定義機能　by　zy　BEGIN
                         /*
                         $j("input[id$=':katakana']").val(result.KatakanaName);
                         $j("input[id$=':kanaName']").val(result.KanaName);
                         $j("input[id$=':custPhone']").val(result.phone);
                         */
			 //2017/01/25 新規画面の項目自定義機能　by　zy　END
                         // 予約名自動設定を行う
                         autoSetupLeadName();
                     }
                     // 画面解除する
                     unblockUi();
                 });
             }
	     //2017/01/25 新規画面の項目自定義機能　by　zy　BEGIN
            } else {
         	$j("[class*=contact_]","[id$=createForm]").each(function(){
         	});
         }
	 //2017/01/25 新規画面の項目自定義機能　by　zy　END
         clearAutoCompletePanel();
     });
     
     // 2016/12/29 连接plan页面替换标准页面  begin by wx
    $j("img[name='planPopup']").unbind("click");
    $j("img[name='planPopup']").click(function() {    		
    	ctrllId = $j("input:hidden[id$=':planItem:plan_lkid']").get(0);      
		ctrllNm = $j("input:text[id$=':planItem:plan']").get(0);
	    objs = new Array(ctrllId, ctrllNm);
	    commUtils.popup("/apex/PlanSearch" ,"PlanSearch",objs, null, null, popupplanCallback());
	   });	    
	// 2016/12/29 连接plan页面替换标准页面  end by wx   
		
 	// プランを切り替えする場合、関連のプラン明細・非表示制御追加
 	$j("input[id$=':plan']").unbind("change");
	$j("input[id$=':plan']").change(function () {
		//2016/12/29 连接plan页面替换标准页面  begin by wx
		// 2017/07/28 change清空id导致选择的plan也被清空 by zy BEGIN
		//$j("input:hidden[id$=':planItem:plan_lkid']").val("");
		// 2017/07/28 change清空id导致选择的plan也被清空 by zy END
		// 2016/12/29 连接plan页面替换标准页面  end by wx
		// 2015/10/28 プラン明細表示のRESET
		planRest();
	})
	// 2016/11/16 見積明細設定機能対応 BEGIN by zh
	if (detailEventFlag)
	    	JINYACONNECT.CUSTOM.detailBindEvent();
	else{
	// 2016/11/16 見積明細設定機能対応 END by zh
	$j("#planCustomeBtn").unbind("jinyaPlanExtend");
	$j("#planCustomeBtn").jinyaPlanExtend({
        selectorRoot : $j("#planCustomeBtn").parent().parent().parent().parent(),
        planInputField : $j("input[id$=':planItem:plan_lkid']"),
        //planId : planIdVal,
        colspanNum : 4,
        planSetupSyncField : $j("input[id$=':nl_hidPlanDetailInfo']"),
        startfun : blockUi,
        endfun : unblockUi,
		actionOpenImg : "{!URLFOR($Resource.AppImages, 'extend/jiahao.png')}",
		actionCloseImg: "{!URLFOR($Resource.AppImages, 'extend/jianhao.png')}",
        remotePlanQuery  : "{!$RemoteAction.RoomScheduleReport.getPlanDetailListById}",
        remoteProdQuery  : "{!$RemoteAction.RoomScheduleReport.getArrayProductItemInfo}",
        labels : {NOFOUND:"{!JSENCODE($Label.MSG_006_0235)}",PRODUCTNM:"{!JSENCODE($Label.MSG_006_0212)}",UNITPRICE:"{!JSENCODE($Label.MSG_006_0213)}",SUMMARY:"{!JSENCODE($Label.MSG_006_0402)}"}
	});
	// 2016/11/16 見積明細設定機能対応 BEGIN by zh
	}
	// 2016/11/16 見積明細設定機能対応 END by zh
	// 2020/06/15 予約ポップのデフォルト字段エラー修正 by zy BEGIN
	$j("#createLeadFormresetbtn").unbind('click');
	// レセット昨日対応
	$j("#createLeadFormresetbtn").bind("click",function(){
		// 該当予約新規画面の選択項目、デフォルト値再設定
		$j(this).closest("form").find("select").each(function(){
			// 選択項目フィルター
			$j("option",this).prop('selected', function() {
				return this.defaultSelected;
			});
		});
	});
	// 2020/06/15 予約ポップのデフォルト字段エラー修正 by zy END
}
// 2016/12/29 连接plan页面替换标准页面  begin by wx 
function popupplanCallback() {
	return function () {
		planRest();
	}
}
// 2016/12/29 连接plan页面替换标准页面  end by wx

function changeRoomFunAjax(roomId,orgroomId,roomMessage){
	// 2018/03/07 Security Check BEGIN
	var branchShopnm = "{!JSENCODE(branchShopNm)}";
	// 2018/03/07 Security Check END
	var queryDate = $j("[id$=queryDate]").val(),
		viewMode = $j("select[id$=viewModeSel]").val(),
		colSize = $j("#hidColSize").val(),
		curStatus = $j("select[id$=statusSelect]").val();
	blockUi();	
	// 既に定義する売価はプランカラ取得、画面に設定する
    Visualforce.remoting.Manager.invokeAction(
    "{!$RemoteAction.RoomScheduleReport.changeRoomByAjax}", roomId,orgroomId,roomMessage,branchShopnm,queryDate,viewMode,colSize,curStatus, function(result, event){
        if(event.type == 'exception') {
            alert(event.message);
        } else {
        	if (result.errorMsg != '') alert(result.errorMsg);
        	else {
        		var tdLst = result.tdInf;
        		if (tdLst.length > 0) refreshRow(tdLst);
        	}
        }
        // 2017/06/07 故障部屋の機能追加　by　zy BEGIN
        // 共通のcolumnのカラーのcssクラス 初期化
        orgBgLst.length = [];
        // 2017/06/07 故障部屋の機能追加　by　zy END
        // 画面解除する
    	unblockUi();
    });
   
}
function refreshRow(RowArr){
	var rightTable = $j("#right_body_table");
	setTimeout(function(){
		var filterArray = new Array();
		var filterTemplate = "tr[roomid='$roomid$']";
		var roomIdArr = new Array();
		for (var i = 0 ; i < RowArr.length ; i++) {
			var rowMessage = RowArr[i];
			roomIdArr.push(rowMessage.roomId);
			var $curTr = $j("tr[roomid='" + rowMessage.roomId +"']" ,rightTable);
       		var parseHtml = $j.parseHTML(rowMessage.tdHtml);
       		$curTr.html($j(parseHtml[0].textContent));
			$curTr.attr("assignedColIdx",rowMessage.assignTd);
			$j("#left_body_table tr[name='" + rowMessage.roomId + "'] td:eq(1)").height(rowMessage.width);
			filterArray.push(filterTemplate.replace('$roomid$',rowMessage.roomId));
		}
		loadTdDrag($j(filterArray.join(","),rightTable));
		refreshBadRoomMessage();
	},0);
}
//加载空格拖拽响应
function loadTdDrag(curRows){
	curRows.show();
    if(editModeFlag) return;
    //curRows.show();
    var tdCols = $j("td",curRows);
   	tdCols.kendoDropTarget({
        dragenter: function(e) {
            //if(!isLockAddCss)
            //{
            currentTd = e.dropTarget;
            if (dragType == "insertLead"){
            	//2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN
            	//原始显示背景色清除
            	$j("td." + getOrgClass()).removeClass(getOrgClass());
            	//2017/03/27 故障部屋一括解除機能対応　by　zy END
            	//$j('.orangeBackground').removeClass('orangeBackground');
                addCss();
           	} else if (dragType == "oneDayDrag"){
           		var curRow = currentTd.parent("tr");
           		//$j('.orangeBackground').removeClass('orangeBackground');
           		$j("div.isAssignedStatus",curRow).height(15);
           		currentTd.addClass(getCurClass());
           		
           	} else if (dragType == "moreDayDrag") {
           		var curRow = currentTd.parent("tr");
           		var orgIdx = orgTd.attr('cycindex')
           		$j("div.isAssignedStatus",curRow).height(15);
           		curRow.find("[cycindex='" + orgIdx + "']").addClass(getCurClass());
           	// 2018/02/22 未割り当て ワィンドウ追加　by　zy　BEGIN
           	} else if (dragType == "assignLead") {
           		var curRow = currentTd.parent("tr");
           		curRow.css("background","orange");
           	 // 2018/02/22 未割り当て ワィンドウ追加　by　zy　END
           	}
        },
        dragleave:function(e){
        	//2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN
        	// 2018/02/22 未割り当て ワィンドウ追加　by　zy　BEGIN
        	if (dragType == "assignLead") {
        		clearRowBack();
        	}
        	// 2018/02/22 未割り当て ワィンドウ追加　by　zy　END
        	//删除全部当前添加样式
        	$j("." + getCurClass()).removeClass(curBackClass);
        	//2017/03/27 故障部屋一括解除機能対応　by　zy END
        	// 如果是拖拽房间的場合
        	if (dragType == "oneDayDrag" || dragType == "moreDayDrag"){
        		// 当前行
           		var curRow = currentTd.parent("tr");
           		// 予約height恢复高度
           		$j("div.isAssignedStatus",curRow).height(23);
        	}
        }
    });
    var filterTdCols = tdCols.filter(".tdcolcls");
    //过滤重复绑定的问题
    var needKendoDrag = curRows.filter(function(){return !$j(this).data("role") || $j(this).data("role") == ""})
    needKendoDrag.kendoDraggable({
        filter:".tdcolcls:not(.disabled)",
        dragstart: function(e) {
			// 2019/04/30 タイムテーブルを開き、スクロール by zy BEGIN
        	if (("J_LOCK" in window) && J_LOCK) return event.preventDefault();
			// 2019/04/30 タイムテーブルを開き、スクロール by zy END
        	dragType = "insertLead";
        	//  2017/02/13 页面自动刷新功能 by wx begin
	        stopRunning();
	        //  2017/02/13 页面自动刷新功能 by wx end
            orgTd = e.currentTarget;
            //2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN
            //不按ctrl 删除上一次拖拽的
           	if (onShiftHold){
           		curBackClass = getCurClass(1);
            } else {
            	$j("td." + getCurClass()).removeClass(getCurClass());
            	if (pageMode == 'badRoomMode') {
            		clearCurClass();
					$j("input:button.badRoomDiv.badBtn.hadAssign").removeClass("hadAssign");
            	}
            }
            //2017/03/27 故障部屋一括解除機能対応　by　zy END
        },
        dragend: function(e) {
        	if (e.currentTarget.hasClass("disabled")) return;
        	//  2017/02/13 页面自动刷新功能 by wx begin 
        	//2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN
   			//startRunning();
   			//2017/03/27 故障部屋一括解除機能対応　by　zy END
			//  2017/02/13 页面自动刷新功能 by wx end
        	var orgIdx = parseInt(orgTd.attr('cycindex'));
            var curIdx = parseInt(currentTd.attr('cycindex'));
            var beginIdx = Math.min(orgIdx,curIdx);
        	var endIdx = Math.max(orgIdx,curIdx);
        	if(!onShiftHold) {
        		//2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN
            	if (pageMode != "badRoomMode") onInsertLeadDragEnd();
            	else if(curBackClass == "" || $j('.' + curBackClass).length > 0 ) {
            		// 2018/02/07 故障時刻登録　by zy BEGIN
            		// addBadRows();
            		// 2018/02/07 故障時刻登録　by zy END
            		showBadRoomPanel();
            	}
            	//2017/03/27 故障部屋一括解除機能対応　by　zy END
            	endIndex = null;
            	beginIndex = null;
            	// 2017/06/06 部屋故障バッグ改修する　by　zy　BEGIN
			    dragType = "dragEnd";
			    // 2017/06/06 部屋故障バッグ改修する　by　zy　END
            } else {
            	//  2017/02/13 页面自动刷新功能 by wx begin
		        stopRunning();
		        //  2017/02/13 页面自动刷新功能 by wx end
            	beginIndex = beginIdx;
	            endIndex = endIdx;
	            //2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN
	            if (pageMode != "badRoomMode") {
	            	//此处拖拽的数据有效时才会插入临时预约表中
	            	if($j('.' + curBackClass).length > 0 ){
		            	for(var i = 0; i < roomIds.length  ; i++){
		            		var roomId = roomIds[i];
		            		InsertLead(beginIndex,endIndex,roomId);
		            	}
	            	}
	            	//2017/03/27 故障部屋一括解除機能対応　by　zy END
            		setGrowUi(beginIndex,endIndex);
            	} else {
            		// 2018/02/07 故障時刻登録　by zy BEGIN
            		// addBadRows();
            		// 2018/02/07 故障時刻登録　by zy END
            		showBadRoomPanel();
            	}
            	//setGrowUi(beginIndex,endIndex);
            }
        }
    });
    
	var isDragging = false;
	var mouseDownFlag = false;
	var mousePoY = 0;
	var mousePoX = 0;
	filterTdCols.unbind("mousedown");
    filterTdCols.bind("mousedown",function(event){
    	// 2019/04/30 タイムテーブルを開き、スクロール by zy BEGIN
    	if (("J_LOCK" in window) && J_LOCK) return event.preventDefault();
		// 2019/04/30 タイムテーブルを開き、スクロール by zy END
    	var curRow = $j(this).parents("tr:eq(0)");
    	mouseDownFlag = true;
    	// 记录坐标位置，不需要根据条件判断
    	mousePoY = event.pageY;
	    mousePoX = event.pageX;
		// 2016/11/22 故障部屋一括登録機能対応 BEGIN
		if (pageMode == "badRoomMode"){
			if($j(this).is("[class*=badRoomClass]")){
				dragType = "mousedown";
				return;
			}
		}
		// 2016/11/22 故障部屋一括登録機能対応 END
		// 失效时故障部屋データあり
		if($j(this).hasClass("disabled")) return;
			// ctrl key hold status
	    	if (onShiftHold) {
		        var roomId = curRow.attr("roomid");
		        var cycindex =  kendo.parseInt($j(this).attr("cycindex"));
		        if(checkInRoom(roomId,cycindex,cycindex)) return ;
		        //$j('.orangeBackground').removeClass('orangeBackground');
		        //if(!onShiftHold) $j('.' + getCurClass()).removeClass(getCurClass());
		        $j("#right_body").focus();
		        isDragging = false;
	        //mousePoY = event.pageY;
	        //mousePoX = event.pageX;
	    	} else if(dragType == "insertLead"){
        	var assignedcolidx = curRow.attr("assignedcolidx");
        	if (assignedcolidx != "" ) {
        		var noassignArr = assignedcolidx.split(",");
        		for (var i = 0 ; i < noassignArr.length ; i++) {
        			if (noassignArr[i] >= beginIndex && noassignArr[i] <= endIndex) return;
        		} 
        	}
        	//2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN
        	if (pageMode != "badRoomMode") setGrowUi(beginIndex,endIndex);
        	//2017/03/27 故障部屋一括解除機能対応　by　zy END
        	event.stopImmediatePropagation();
        }
        //2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN
        $j("td." + getOrgClass()).removeClass(getOrgClass());
        //2017/03/27 故障部屋一括解除機能対応　by　zy END
        dragType = "mousedown";
        //2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN
        if(!onShiftHold) $j(this).addClass(getOrgClass());
        //2017/03/27 故障部屋一括解除機能対応　by　zy END
    }).mousemove(function(event) {
    	if(onShiftHold && dragType == "mousedown") {
    		if(Math.abs(mousePoY - event.pageY) > 5 || Math.abs(mousePoX - event.pageX) > 5){
     			isDragging = true;
     			//2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN
     			$j(this).addClass(getOrgClass());
     			//2017/03/27 故障部屋一括解除機能対応　by　zy END
    		}
    	}
	}).mouseup(function() {
	    var wasDragging = isDragging;
	    isDragging = false;
	    var curRow = $j(this).parents("tr:eq(0)");
	    if(dragType == "mousedown")   {
	    	if(onShiftHold) dragType = "";
		    if (!wasDragging && onShiftHold) {
		    	//2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN
		    	ctrlMouseDownFun(curRow,this);
		    } else if (!onShiftHold && pageMode == "badRoomMode"){
		    	if ($j(this).hasClass(getOrgClass())) {
		    		return;
		    	//2017/03/27 故障部屋一括解除機能対応　by　zy END
		    	}
		    	// 查找所有故障class不包含鼠标点击
		    	var orgBacks = $j("td[class*=badRoomClass]:not(.badRoomClass)");
	    		if(orgBacks.length > 0 ){
		    		rmvSelectDate(curRow,this);
		    		$j("." + getOrgClass()).removeClass(getOrgClass());
		    	}
		    	//2017/03/27 故障部屋一括解除機能対応　by　zy END
		    }
	    }
	    //2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN
	    /*
	    // 2016/11/22 故障部屋一括登録機能対応 BEGIN
	    else if(!onShiftHold && ){
			//warining icon is show or not by zy END
	    }
	    // 2016/11/22 故障部屋一括登録機能対応 END
	    */
	    //2017/03/27 故障部屋一括解除機能対応　by　zy END
	});
    filterTdCols.unbind("dblclick");
    filterTdCols.bind("dblclick",function(){
	var that = this;
	// 2016/11/22 故障部屋一括登録機能対応 BEGIN
		if(editModeFlag || dragType == "insertLead" || dragType == "shiftInsert" || onShiftHold || pageMode == "badRoomMode") return;
	// 2016/11/22 故障部屋一括登録機能対応 END
	    var roomId = $j(that).parents("tr").attr("roomid");
	    var cycindex =  kendo.parseInt($j(that).attr("cycindex"));
	    if(checkInRoom(roomId,cycindex,cycindex)) return ;
	    orgTd = $j(that);
	    currentTd = $j(that);
	    roomIds = new Array();
	    currentTr = $j(that).parent();
	    var assignedcolidx = currentTr.attr("assignedcolidx");
	    if (assignedcolidx != "") {
	    	var assArray =  assignedcolidx.split(",");
	    	if ($j.inArray(cycindex+"",assArray) >= 0 ) return;
	    }
	    var roomId = currentTr.attr('roomId');
	    roomIds.push(roomId);
	    if (!Room_Map[roomId] ) { 
	    	var leftRow = $j("#left_body_table tr[name='" + roomId + "']");
			Room_Map[roomId] = new Object();
	    	Room_Map[roomId].roomNm = leftRow.attr('roomname');
	    	Room_Map[roomId].roomTp = leftRow.attr('roomtype');
	    	Room_Map[roomId].typeId = leftRow.attr('typeId');
	    }
	    hashMap.Put(roomId,Room_Map[roomId].roomNm + '_' + Room_Map[roomId].roomTp);
	
	    // １列の分数単位
	    var oneColLong = parseInt($j('input[id$="hidOneColLong"]').val());
	    var colBeginIndex = orgTd.attr('cycIndex'),
	        colEndIndex = currentTd.attr('cycIndex');
	        
	    pEntryTime = getDateByIndex(colBeginIndex);
	    //new Date(PositionMap[colBeginIndex] ? PositionMap[colBeginIndex].time : $j("col[cycIndex='" + colBeginIndex + "']").attr("coldatetime"));
	    //new Date($j("col[cycIndex='" + beginIndex + "']").attr("coldatetime"));
	    pDepartTime =  getDateByIndex(colEndIndex);
	   	//new Date(PositionMap[colEndIndex] ? PositionMap[colEndIndex].time : $j("col[cycIndex='" + colEndIndex + "']").attr("coldatetime"));
	    //new Date($j("col[cycIndex='" + endIndex + "']").attr("coldatetime"));
	    //2017/11/07 店舗別泊数、到着時刻、出発時刻初期値自動設計できるように改善対応 by zy BEGIN
	    //pDepartTime = pDepartTime.addMinutes(oneColLong);
	    var defStayNum = {!defStaysNums};
	    if(oneColLong == CONST_24H && defStayNum == 0) pDepartTime = pEntryTime;
	    else pDepartTime = pDepartTime.addMinutes(oneColLong);
	    //2017/11/07 店舗別泊数、到着時刻、出発時刻初期値自動設計できるように改善対応 by zy END
	    showLeadWindow();
    });
    
    var filterLeadCols = tdCols.filter(":not(.tdcolcls)");
	filterLeadCols.unbind("mousedown");
	filterLeadCols.bind("mousedown",function(event){
		var curRow = $j(this).closest("tr");
		//2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN
    	if(pageMode == "badRoomMode"){
    	//2017/03/27 故障部屋一括解除機能対応　by　zy END
	    	var curIdx = $j(this).index();
	    	var roomId = $j(this).closest("tr").attr("roomid");
	    	var curDateString = PositionMap[curIdx].Date;
	    	$j("#right_body_table col[data-coldate='" + curDateString + "']").each(function(){
	    		var idx = $j(this).attr("cycindex");
	    		$j("td:eq(" + idx + ")",curRow).removeClass("badRoomClass");
	    	});
	    	// 2018/02/07 故障時刻登録　by zy BEGIN
	    	// 選択「日付、部屋ID」故障データ削除する
	    	//delDateByRoomId(roomId,curDateString);
	    	// 2018/02/07 故障時刻登録　by zy END
	    	// 日付表示変更
	    	changeBadRoomDate();
	    }
    });
    
	var DIV_ISASSIGNED = $j("div.isAssignedStatus",curRows);
	// dblクリック
	// 双击详细窗口打开
	// 手机端对应
	if (_isMobileOS) {
		DIV_ISASSIGNED.unbind("click");
		DIV_ISASSIGNED.bind("click",function(){
			var leadid = $j(this).attr("leadid");
			var curRow = $j(this).closest("tr.bodyRow");
			var roomId = curRow.attr("roomid");
			JINYACONNECT.DETAILWIN.detailWindow.windowOpen(roomId,leadid);
		});
	} else {
		DIV_ISASSIGNED.unbind("dblclick");
		DIV_ISASSIGNED.bind("dblclick",function(){
			var leadid = $j(this).attr("leadid");
			var curRow = $j(this).closest("tr.bodyRow");
			var roomId = curRow.attr("roomid");
			JINYACONNECT.DETAILWIN.detailWindow.windowOpen(roomId,leadid);
		});
	}
	
	/*
	var DIV_CHILD_A = $j("a",DIV_ISASSIGNED);
   	DIV_CHILD_A.unbind("focus");
   	DIV_CHILD_A.bind('focus',function(){
   		var leadId = $j(this).closest("div.isAssignedStatus").attr("leadid");
   		if(isCanShowFlag)
   		LookupHoverDetail.getHover(leadId, '/' + leadId + '/m?retURL=%2F' + leadId + '&isAjaxRequest=1').show();
   	});
   	DIV_CHILD_A.unbind("mouseover");
   	DIV_CHILD_A.bind('mouseover',function(){
   		var leadId = $j(this).closest("div.isAssignedStatus").attr("leadid");
   		//if(isCanShowFlag)
   		LookupHoverDetail.getHover(leadId, '/' + leadId + '/m?retURL=%2F' + leadId + '&isAjaxRequest=1').show();
   	});
   	*/
    DIV_ISASSIGNED.mouseenter(function(){
        var elementName = $j(this).attr("name");
        if (dragType != "oneDayDrag" || dragType != "moreDayDrag"){
	        var heightVal = $j(this).height();
	        $j("div[name=" + elementName + "]").addClass("opacityDiv");
        }
    });
    DIV_ISASSIGNED.mouseleave(function(){
        $j(".opacityDiv").removeClass("opacityDiv");
        var leadId = $j(this).attr("leadid");
        //var elementName = $j(this).attr("name");
        //var heightVal = $j(this).height();
        //$j("div[name='backcream_" + elementName + "']").hide();
        LookupHoverDetail.getHover(leadId).hide();
    });
    //拖拽
    DIV_ISASSIGNED.filter(".oneDayClass[isblocked=false]").kendoDraggable({
    	hint: function(element,e) {
    		var elementClone = element.clone().addClass("cloneClass");
    		// 2018/02/22 未割り当て ワィンドウ追加　by　zy　BEGIN
    		dragLeadElement = element;
    		// 2018/02/22 未割り当て ワィンドウ追加　by　zy　END
    		return elementClone;
	    },
        dragstart: function(e) {
        	//2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN
        	if (pageMode == "badRoomMode"){
        	//2017/03/27 故障部屋一括解除機能対応　by　zy END
        		e.preventDefault();
        		return false;
        	}
        	//  2017/02/13 页面自动刷新功能 by wx begin
	        stopRunning();
	        //  2017/02/13 页面自动刷新功能 by wx end
        	dragType = "oneDayDrag";
        	LookupHoverDetail.hideAllHovers();
   			var left = e.pageX - $j(".cloneClass").offset().left;
    		if (left > 0){
    			$j(".cloneClass").css("margin-left",left);
    		}
    		isCanShowFlag = false;
        	orgTd = $j(e.currentTarget).parent("td");
        },
        dragend: function(e) { 
        	dragType = "";
        	onShiftHold = false;
        	if (curBackClass == undefined || curBackClass == "") return false;
        	//2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN
        	var curClassTd = $j("." + curBackClass);
        	//2017/03/27 故障部屋一括解除機能対応　by　zy END
        	if (curClassTd.length <= 0 ) return false;
        	//  2017/02/13 页面自动刷新功能 by wx begin 
        	startRunning();
        	//  2017/02/13 页面自动刷新功能 by wx end 
        	var currentIdx = curClassTd.index();
        	var entryTime = getDateByIndex(currentIdx).getTime();
        	//(new Date(PositionMap[currentIdx] ? PositionMap[currentIdx].time : $j("col[cycIndex='" + currentIdx + "']").attr("coldatetime"))).getTime();
        	var orgIdx = orgTd.index();
        	var curRow = currentTd.parent();
        	var roomId = curRow.attr("roomid");
        	var orgRoomId = orgTd.parent().attr("roomid");
        	setTimeout(function(){isCanShowFlag = true;},500);
        	$j("div.isAssignedStatus",curRow).height(23);
        	$j('.' + curBackClass).removeClass(curBackClass);
        	if (currentIdx == orgIdx && roomId == orgRoomId){ 
        		return false;
        	}
        	// 2019/05/30 タイムテーブルの部屋移動場合、確認メッセージを表示機能が必要 by zy BEGIN
        	// 2019/09/19 Security Check BY zyz BEGIN
			var confirmFlg = $j("#hidTimeTableConfirmFlg").val();
			// 2019/09/19 Security Check BY zyz END
        	if (confirmFlg == "true" && !confirm(firmMessage(roomId,orgRoomId,currentIdx,orgIdx))) {
    			$j("div.isAssignedStatus",curRow).height(23);
    			$j('.' + curBackClass).removeClass(curBackClass);
    			return false;
    		}
			// 2019/05/30 タイムテーブルの部屋移動場合、確認メッセージを表示機能が必要 by zy END
        	var leadId = e.currentTarget.attr("leadid");
        	if (currentIdx == orgIdx) changeRoomId(roomId,leadId,orgRoomId);
        	else changeRoomId(roomId,leadId,orgRoomId,entryTime);
        }
    });
    DIV_ISASSIGNED.filter(".moreDayClass[isblocked=false]").kendoDraggable({
    	hint: function(element,e) {
    		var elementClone = element.clone().addClass("cloneClass");
    		// 2018/02/22 未割り当て ワィンドウ追加　by　zy　BEGIN
    		dragLeadElement = element.clone();
    		// 2018/02/22 未割り当て ワィンドウ追加　by　zy　END
    		return elementClone;
	    },
	    axis: "y",
        dragstart: function(e) {
        	//2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN
        	if (pageMode == "badRoomMode"){
        	//2017/03/27 故障部屋一括解除機能対応　by　zy END
        		e.preventDefault();
        		return false;
        	}
        	//  2017/02/13 页面自动刷新功能 by wx begin
	        stopRunning();
	        //  2017/02/13 页面自动刷新功能 by wx end
        	dragType = "moreDayDrag";
   			var left = e.pageX - $j(".cloneClass").offset().left;
    		if (left > 0){
    			//$j(".cloneClass").css("margin-left",left);
    		}
    		LookupHoverDetail.hideAllHovers();
    		isCanShowFlag = false;
        	orgTd = $j(e.currentTarget).parent("td");
        },
        dragend: function(e) {
        	dragType = "";
        	onShiftHold = false;
        	//2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN
        	var currentTd = $j("."+curBackClass);
        	//2017/03/27 故障部屋一括解除機能対応　by　zy END
        	if (currentTd.length <= 0 ) return false;
        	var currentIdx = currentTd.index();
        	var entryTime = getDateByIndex(currentIdx);
        	//(new Date(PositionMap[currentIdx] ? PositionMap[currentIdx].time : $j("col[cycIndex='" + currentIdx + "']").attr("coldatetime"))).getTime();
        	var orgIdx = orgTd.index();
        	var curRow = currentTd.parent();
        	var roomId = curRow.attr("roomid");
        	var orgRoomId = orgTd.parent().attr("roomid");
        	setTimeout(function(){isCanShowFlag = true;},500);
        	$j("div.isAssignedStatus",curRow).height(23);
        	$j('.' + curBackClass).removeClass(curBackClass);
        	if (currentIdx == orgIdx && roomId == orgRoomId){ 
        		return false;
        	}
        	// 2019/05/30 タイムテーブルの部屋移動場合、確認メッセージを表示機能が必要 by zy BEGIN
        	// 2019/09/19 Security Check BY zyz BEGIN
        	var confirmFlg = $j("#hidTimeTableConfirmFlg").val();
        	// 2019/09/19 Security Check BY zyz END
        	if (confirmFlg == "true" && !confirm(firmMessage(roomId,orgRoomId,currentIdx,orgIdx))) {
    			$j("div.isAssignedStatus",curRow).height(23);
    			$j('.' + curBackClass).removeClass(curBackClass);
    			return false;
    		}
			// 2019/05/30 タイムテーブルの部屋移動場合、確認メッセージを表示機能が必要 by zy END
        	var leadId = e.currentTarget.attr("leadid");
        	if (currentIdx == orgIdx) changeRoomId(roomId,leadId,orgRoomId);
        	else changeRoomId(roomId,leadId,orgRoomId,entryTime);
        }
    });
}
var onShiftHold = false;
var guidMap;
function setDefaultValue(){
	dragType = 'shiftInsert';
   	onShiftHold = true;
   	//  2017/02/13 页面自动刷新功能 by wx begin 
    stopRunning();
    //  2017/02/13 页面自动刷新功能 by wx end
   	$j("input[name=windowType]").attr("disabled","disabled");
	//初期化
	if((beginIndex == null || beginIndex == undefined) || (endIndex == null || endIndex == undefined)){
		// 如果存在拖拽样式
		if($j("td.orangeBackground").length > 0){
			var startIdx = null;
			var endIdx = null;
			var roomId = $j("td.orangeBackground").eq(0).closest("tr").attr('roomId');
			$j("td.orangeBackground").each(function(){
				var curIdx = $j(this).index();
				if(startIdx > curIdx || startIdx == null)  startIdx = curIdx;
				if(endIdx < curIdx || endIdx == null)  endIdx = curIdx;
				//2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN
				//$j(this).addClass(curBackClass);
				//2017/03/27 故障部屋一括解除機能対応　by　zy END
				$j(this).removeClass("orangeBackground");
			});
			beginIndex = startIdx ;
			endIndex = endIdx;
			if ($j("td[class*=orangeBackground]").length > 0) InsertLead(beginIndex,endIndex,roomId);
		}
	}
	
}
//拖拽结束显示预约操作页面
function onInsertLeadDragEnd(){
	guidMap = new Object();
	var moreRoomMessage = '';
	//drop機能定数の初期化
    dragType = "";
	if($j("td[class*=orangeBackground]").length == 0) {
		 $j.unblockUI();
		 isLoadUI = false;
		 // 2017/06/06 画面に自動更新機能の故障部屋モード場合下改修　by　zy　BEGIN
		 startRunning();
		 // 2017/06/06 画面に自動更新機能の故障部屋モード場合下改修　by　zy　END
		 return;
	}
    // 時間表の対象のmap
    var MessageObj = new Object();
    var $tbody = $j("<tbody/>");
    var mainMessage = '';
    //准备克隆用数据
    var _orgEntryTimeEl = $j("select[id$=entryTime]").clone();
    var _orgDepartTimeEl = $j("select[id$=departureTime]").clone();
    //2017/01/25 新規画面の項目自定義機能　by　zy　BEGIN
    _orgEntryTimeEl.show();_orgDepartTimeEl.show();
    //2017/01/25 新規画面の項目自定義機能　by　zy　END
    _orgEntryTimeEl.children("option").attr("selected",false);
    //为了防止被提交 覆盖原页面数据 删除属性 BEGIN
    _orgEntryTimeEl.removeAttr("id");
    _orgEntryTimeEl.removeAttr("name");
    _orgDepartTimeEl.children("option").attr("selected",false);
    _orgDepartTimeEl.removeAttr("id");
    _orgDepartTimeEl.removeAttr("name");
    // END
    
    var entryTimeEl = _orgEntryTimeEl.clone();
     if($j("#roomMessageTalbe .HeadRoomEntryTime select").length == 0){
    	$j("#roomMessageTalbe .HeadRoomEntryTime").append(entryTimeEl);
    	$j("#roomMessageTalbe .HeadRoomEntryTime select").bind('change',function(){
    		var curValue = $j(this).val();
    		var curTable = $j(this).closest("table");
    		$j(".entryTime",curTable).each(function(){
				$j("select",this).val(curValue);
			}); 
    	});
    }
    var entry_index = getNearTimeInArray('{!JSENCODE(defaultCheckinTime)}',_entryTimeArray,_entryTimeMap,true);
    //title 设置默认值
    entryTimeEl.children("option").eq(entry_index).attr("selected",true);
    
    var departTimeEl = _orgDepartTimeEl.clone();
    
    if( $j("#roomMessageTalbe .HeadRoomDepartTime select").length == 0){
    	$j("#roomMessageTalbe .HeadRoomDepartTime").append(departTimeEl);
    	$j("#roomMessageTalbe .HeadRoomDepartTime select").bind('change',function(){
    		var curValue = $j(this).val();
    		var curTable = $j(this).closest("table");
    		$j(".departTime",curTable).each(function(){
				$j("select",this).val(curValue);
			}); 
    	});
    }
    var def_index = getNearTimeInArray('{!JSENCODE(defaultCheckoutTime)}',_departTimeArray,_departTimeMap,true);
    departTimeEl.children("option").eq(def_index).attr("selected",true);
    
    var oneColLong = parseInt($j('input[id$="hidOneColLong"]').val());
    if(InsertLeadLst.length > 0 ){
    	//ctrlドルプの場合　時間表は表示する
     	$j("#parentTimeDiv").show();
    	//ctrl是 房间重新计算
      	roomIds.length = 0;
    	//選択の予約メッセージの時間表の作成する
    	for (var i = 0 ;i < InsertLeadLst.length; i++){
    		var lead = InsertLeadLst[i];
    		var message = '';
    		if(!lead) continue;
    		var guuid = kendo.guid();
    		var curSpan = $j("<tr class='timeSpan' id='" + guuid + "' name='" + lead.roomId + "' />");//onclick='changeWindowMessage(this)' 
    		var $td = $j("<td/>");
    		var curEntryEl = _orgEntryTimeEl.clone();
    		var depEl = _orgDepartTimeEl.clone();
    		// 2019/02/15 複数部屋でなくても）泊数の変更ができなくなってしまいます。 by zy BEGIN
    		var entryDate = new Date(lead.entrtDt.toDateString());
			var departDate = new Date(lead.departDt.toDateString());
			var diffDay = commUtils.mathNumDiv((departDate.getTime() - entryDate.getTime()) , (1000 * 3600 * 24));
    		// 2019/02/15 複数部屋でなくても）泊数の変更ができなくなってしまいます。 by zy END
    		//部屋対応の対象を存在の場合
    		if(MessageObj[lead.roomId]){
    			var curMessage = MessageObj[lead.roomId];
    			// 親部屋
    			curSpan.append($td.clone().append($j("<input type='radio' name='parentRoom' value='" + lead.roomId + "' onclick='changeMainRoom(this)'/>")));
    			// 部屋名
    			curSpan.append($td.clone().text(Room_Map[lead.roomId].roomNm));
    			// 2019/02/15 複数部屋でなくても）泊数の変更ができなくなってしまいます。 by zy BEGIN
    			// 泊数
    			curSpan.append($td.clone().append($j("<input type='text' name='diffDay' class='daysInput' value='" + diffDay + "' orgvalue='" + diffDay + "' onchange='daysChange()' />")));
    			curSpan.append($td.clone().addClass("entryDate").text(kendo.toString(lead.entrtDt,JINYACONNECT.DateFormat)));
    			// 2019/02/15 複数部屋でなくても）泊数の変更ができなくなってしまいます。 by zy END
    			curSpan.append($td.clone().addClass("entryTime").append(curEntryEl)); 
    			// 2019/02/15 複数部屋でなくても）泊数の変更ができなくなってしまいます。 by zy BEGIN
    			curSpan.append($td.clone().addClass("departDate").text(kendo.toString(lead.departDt,JINYACONNECT.DateFormat)));
    			// 2019/02/15 複数部屋でなくても）泊数の変更ができなくなってしまいます。 by zy END
    			curSpan.append($td.clone().addClass("departTime").append(depEl));
    			curMessage.after(curSpan);
    		}else{
            	if(i == 0) {
            		curSpan.addClass("mainRoomClass").addClass("curTimeRow");
            		$j("input[id$=hidMainRoomId]").val(lead.roomId);
            	}
    			curSpan.append($td.clone().append($j("<input type='radio' name='parentRoom' value='" + lead.roomId + "' onclick='changeMainRoom(this)'/>")));
    			curSpan.append($td.clone().text(Room_Map[lead.roomId].roomNm));
    			// 2019/02/15 複数部屋でなくても）泊数の変更ができなくなってしまいます。 by zy BEGIN
    			// 泊数
    			curSpan.append($td.clone().append($j("<input type='text' name='diffDay' class='daysInput' value='" + diffDay + "' orgvalue='" + diffDay + "' onchange='daysChange()' />")));
    			curSpan.append($td.clone().addClass("entryDate").text(kendo.toString(lead.entrtDt,JINYACONNECT.DateFormat)));
    			// 2019/02/15 複数部屋でなくても）泊数の変更ができなくなってしまいます。 by zy END
    			curSpan.append($td.clone().addClass("entryTime").append(curEntryEl)); 
    			// 2019/02/15 複数部屋でなくても）泊数の変更ができなくなってしまいます。 by zy BEGIN
    			curSpan.append($td.clone().addClass("departDate").text(kendo.toString(lead.departDt,JINYACONNECT.DateFormat)));
    			// 2019/02/15 複数部屋でなくても）泊数の変更ができなくなってしまいます。 by zy END
    			curSpan.append($td.clone().addClass("departTime").append(depEl));
    			curSpan.appendTo($tbody);
    			MessageObj[lead.roomId] = curSpan;
    			roomIds.push(lead.roomId);
    		}
    		guidMap[guuid] = lead;
    		if(oneColLong != CONST_24H) {
    			var select_index = getNearTimeInArray(lead.entryTime,_entryTimeArray,_entryTimeMap,true);
    			curEntryEl.children("option").eq(select_index).attr("selected",true);
	    		var selectDep_index = getNearTimeInArray(lead.departTime,_departTimeArray,_departTimeMap,false);
    			depEl.children("option").eq(selectDep_index).attr("selected",true);
	    	}else {
	    		var select_index = getNearTimeInArray("{!JSENCODE(defaultCheckinTime)}",_entryTimeArray,_entryTimeMap,true);
    			curEntryEl.children("option").eq(select_index).attr("selected",true);
	    		var selectDep_index = getNearTimeInArray("{!JSENCODE(defaultCheckoutTime)}",_departTimeArray,_departTimeMap,false);
    			depEl.children("option").eq(selectDep_index).attr("selected",true);
	    	}
    	
    	//curSpan.data("roomNm",);
    	}
    $j("#roomMessageTalbe thead").after($tbody);
    $j("#roomMessageTalbe").show();
    $j("#timeDiv").hide();
    $j("#flowMessageWindow").show();
	    //出现时刻列表的时候主画面不能选择时间
	    $j("select[id$=entryTime]").prop("disabled","enabled");
	    $j("select[id$=departureTime]").prop("disabled","enabled");
	    //2016/11/15 泊数失效处理
	    $j("input[id$=staysNums]").prop("disabled","enabled");
	    // 2019/02/15 複数部屋でなくても）泊数の変更ができなくなってしまいます。 by zy BEGIN
	    // 数字だけ入力可能の制御
	    $j("input[name='diffDay']").keyup(function(){
	        $j(this).val($j(this).val().replace(/[^\d\,]/g,''));
	    }).bind("paste",function(){
	        $j(this).val($j(this).val().replace(/[^\d\,]/g,''));
	    });
	    // 2019/02/15 複数部屋でなくても）泊数の変更ができなくなってしまいます。 by zy END
    }
    if(orgBgLst.length > 0)
    	showLeadWindow();
    marinRoomMessageChg();
    InsertLeadLst.length = 0;
    $j.unblockUI();
    $j("#left_body table tr.grayBackground").removeClass("grayBackground");
}
function changeMainRoom(that){
    //$j("tr.mainRoomClass input[name=parentRoom]").removeAttr("checked");
    $j("tr.mainRoomClass").removeClass("mainRoomClass");
	$j(that).closest("tr").addClass("mainRoomClass");
    marinRoomMessageChg();
}
function marinRoomMessageChg(){
	var curRow = $j("#roomMessageTalbe tr.mainRoomClass");
	//若无选中数据时默认选中第一个
	if(curRow.length == 0 ){
		curRow = $j("#roomMessageTalbe tr.timeSpan:eq(0)");
	}
    var curCheckBox = $j("input[name=parentRoom]",curRow);
    if(!curCheckBox.prop("checked")){
    	curCheckBox.attr("checked","true");
    }
    $j("input[id$=hidMainRoomId]").val(curCheckBox.val());
	var mainMessage = "{!strRoomDelegatePrefix}" + $j("td:eq(1)",curRow).text() ;
	$j("#timeDiv").text(mainMessage);
}
function getObjX(a) {
    var left = 0;       
    while(a){
        left += (a.offsetLeft - a.scrollLeft + a.clientLeft);
        a = a.offsetParent;
    }
    return left;
}
function getObjY(a) {
    var top = 0;        
    while(a){
        top += (a.offsetTop - a.scrollTop + a.clientTop);
        a = a.offsetParent;
    }
    return top;
}
//滚动条初始化
function scrollFunInit() {
     var contentBodyWidth = document.body.clientWidth;
     var rightWidth = contentBodyWidth- $j("#left_head").width();
     var RIGHT_BODY = $j("#right_body");
     var RIGHT_HEAD = $j("#right_head");
     
     var plusWidth = _isMobileOS ? 20 : 0;
     
     var rightBodyHeight = $j(window).height() - RIGHT_BODY.offset().top;
     RIGHT_BODY.css({width:rightWidth - (plusWidth+6)  + 'px',height:rightBodyHeight + 'px'});
     $j("#left_body").css({height:rightBodyHeight + 'px'});
     RIGHT_HEAD.css({width:rightWidth - plusWidth + 'px'});
	 // 2019/04/30 タイムテーブルを開き、スクロール by zy BEGIN
	 window.J_MINHT = RIGHT_BODY.offset().top;
	 window.J_MAXHT = RIGHT_BODY.height() + J_MINHT;
	 // 2019/04/30 タイムテーブルを開き、スクロール by zy END
     $j("#mock").css("height", (rightBodyHeight + $j("#mock").offset().top + 200) +"px");
     // 表示領域のスクロール
     $j('#right_body').scroll(function(e) {
        autoChangeBodyPosition();
     });
}
var timer;
//异步加载左边上边导航栏
function autoChangeBodyPosition(){
	clearTimeout(timer);
	timer = setTimeout(function(){
		var DIV_RIGHT_BODY_OFFSET = $j('#right_body div').offset();
	    $j('#left_body div.leftBody').offset( { top : DIV_RIGHT_BODY_OFFSET.top} );
	    $j('#right_head div.rightHead').offset( { left : DIV_RIGHT_BODY_OFFSET.left});
	    var scrollLeftValue = $j('#right_body').scrollLeft();
	    if(scrollLeftValue > 0) $j('#load_scrl').css('left', $j(window).width()/2 + scrollLeftValue);
	},0);
}
//自动追加
var addLength = {!roomInt}; 
function addLeadMessage(){
    //console.time('1');
    processingFlag = true;
    var RIGHT_TABLE_DRAG_TR = $j('#right_body tr.dragTr');
    var reLoadRoomArr = new Array();
    Process_Room_Arr = new Array();
    Process_idx = 0;
    if ( Auto_Add_Idx < roomLst.length) {
    	 reLoadRoomArr = roomLst[Auto_Add_Idx];
    	 Auto_Add_Idx++;
    } 
    if(reLoadRoomArr.length > 0){
    	//安全处理防止超限
		if (reLoadRoomArr.length > MAX_PROCESS_ROOM_LENGTH){
			var idx = 0;
	       	var messageArr = new Array();
	       	
	       	for (var i = 0 ; i < reLoadRoomArr.length ; i++) {
	       		messageArr.push(reLoadRoomArr[i]);
	       		if (idx >= MAX_PROCESS_ROOM_LENGTH) {
	       			Process_Room_Arr.push(messageArr);
	       			messageArr = new Array();
	       			idx = 0;
	       		}
	       		idx++;
	       	}
	       	if (idx != 0) {
	       		Process_Room_Arr.push(messageArr);
	       	}
		} else {
			Process_Room_Arr.push(reLoadRoomArr);
		}
		getAddLength();
    }
}
var Process_Room_Arr,Process_idx,RowInfs;
function getAddLength(){
	var loadRoomIds = Process_Room_Arr[Process_idx];
	if (loadRoomIds.length > 0 ){
		guuid = kendo.guid();	
		// 2018/03/07 Security Check BEGIN
		var branchShopnm = "{!JSENCODE(branchShopNm)}";
		// 2018/03/07 Security Check END
		// 有効な期間チェックを行う
        Visualforce.remoting.Manager.invokeAction(
           "{!$RemoteAction.RoomScheduleReport.preAddLeadMessage}", loadRoomIds.toString(),branchShopnm,$j("[id$=queryDate]").val(),$j("select[id$=viewModeSel]").val(),$j("#hidColSize").val(),guuid,$j("select[id$=statusSelect]").val(), function(result, event){
               // 異常
               if(event.type == 'exception') { 
                   console.log(event.message);
               } else {
               		//&& guuid == result.guuid
                   if(result && result.tdInf.length > 0 ){
                       var rsLst = result.tdInf;
                       RowInfs.push(rsLst);
                       //refreshRow(rsLst);
                   }
                   Process_idx++;
                   if (Process_Room_Arr.length > Process_idx)
                   	   getAddLength();
                   else
                   	   addLeadMessage();
           	   }
       });
	}
}


// kendoDropTarget->dragenter
function addCss(){
	var colspan = currentTd.attr('colspan');
	// 存在colspan并且colspan 小于1的情况不处理（现在版本已经不存在colspan）
	if (typeof(colspan) != "undefined" || colspan < 1)	
	{
		return;
	}
	// ドルプ変数設定
	var orgTrIndex = $j(orgTd).parent().index(),
		curTrIndex = $j(currentTd).parent().index(), 
		orgTdIndex = kendo.parseInt(orgTd.attr('cycindex')),
		curTdIndex = kendo.parseInt(currentTd.attr('cycindex'));
		endIndex = Math.max(orgTdIndex,curTdIndex),
		beginIndex = Math.min(orgTdIndex,curTdIndex);
	// 2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN 
	// 故障部屋のモード場合
	if (pageMode == "badRoomMode") {
		//临时表初始化
		// 2018/02/07 故障時刻登録　by zy BEGIN
		/*
		if (!("Bad_Temp_Expect" in _BadMap))_BadMap.Bad_Temp_Expect = {};
		if (!onShiftHold) {
			_BadMap.Bad_Temp_Expect = {};
			_BadMap.Bad_Expect = {};
		}*/
		var today = new Date();
		var nowDateIndex = $j("#right_body").find("col[data-coldate = '" + kendo.toString(today, JINYACONNECT.DateFormat) + "']").first().index();
        if ((nowDateIndex == -1 && getDateByIndex(0) < today)|| Math.min(orgTdIndex,curTdIndex) < nowDateIndex ) return false;
		//故障模式只能选一日不可以选时刻
		//changeBadMode();
		// 2018/02/07 故障時刻登録　by zy END
		//隐藏解除按钮
		chgBadRoomType('rmv');
		if (curBackClass == '' || curBackClass == undefined) getCurClass();
	}
	// 2017/03/27 故障部屋一括解除機能対応　by　zy END 
	if(roomIds.length>0)roomIds = new Array();
	// 開始の行目と終了行目
	$j(".dragTr").slice(Math.min(orgTrIndex,curTrIndex), Math.max(orgTrIndex,curTrIndex) + 1 ).each(function(){
			
		var $tr = $j(this),
			tdArray = $tr.attr('assignedColIdx').split(','),
			isClearRow = false,
			noLeadBlock = (tdArray.length == 0),
			roomId = $tr.attr('roomId');
		// 故障ありの場合、データ作成不可フィルター
		if(checkInRoom(roomId,Math.min(orgTdIndex,curTdIndex),Math.max(orgTdIndex,curTdIndex))) return true;
		// 選択した部屋情報を格納する
		if($j.inArray(roomId, roomIds) < 0)
		{
			if (!Room_Map[roomId] ) { 
		    	var leftRow = $j("#left_body_table tr[name='" + roomId + "']");
			    Room_Map[roomId] = new Object();
		    	Room_Map[roomId].roomNm = leftRow.attr('roomname');
		    	Room_Map[roomId].roomTp = leftRow.attr('roomtype');
		    	Room_Map[roomId].typeId = leftRow.attr('typeId');
		    }
			var roomName = Room_Map[roomId].roomNm,	
				roomTypeName = Room_Map[roomId].roomTp;
			roomIds.push(roomId);
			if(!hashMap.Contains(roomId)){
				hashMap.Put(roomId, roomName + '_' + roomTypeName);
			}
		}
		if(EachRowHadAssign[roomId])tdArray = tdArray.concat(EachRowHadAssign[roomId]);
			//dealWithCommonHead($tr,beginIndex,endIndex,roomId,tdArray);
		tdArray = chkLeadInCurRow($tr,beginIndex,endIndex,tdArray);
		for(var i = beginIndex ;i<= endIndex; i++) {
			var $colTd = $tr.children('[cycIndex="' + i + '"]');
			if (!noLeadBlock) {
				// 該当TDは既にアサイン済がどうかチエックする
				if(checkIndex(i,tdArray))
				{
					isClearRow = true;
					var roomIndex = $j.inArray(roomId , roomIds);
					if( roomIndex >= 0 )roomIds.remove(roomId);
				}
				if(isClearRow)
				{
				$tr.find('.' + curBackClass).removeClass(curBackClass);
					break;
				}
			}
			if(!isClearRow) {
				// 2019/04/30 JINYABUG-1631 bug fix by zy BEGIN
				var backClass = '';
				if (pageMode == "badRoomMode") backClass = ' dragClass';
				$colTd.addClass(curBackClass + backClass);
				// 2019/04/30 JINYABUG-1631 bug fix by zy END
			}
		}
	});
	// 故障モード下、日付変更
	if (pageMode == "badRoomMode") {
		// 故障モード変更
		// 2018/02/07 故障時刻登録　by zy BEGIN
		$j(".floatBadRoom td").slice(0,10).css("visibility","visible");
		// 2018/02/07 故障時刻登録　by zy END
		// 日付リアル
		changeBadRoomDate();
	}
	// titles表示
	setGrowUi(beginIndex,endIndex);
}
// 右側TOPドルプのメッセージ表示画面
function setGrowUi(bIndex,eIndex,refreshFlag){
	// 2017/06/08 故障部屋データは追加する　by　zy BEGIN
	//右侧提示页面不显示的时候
	if (pageMode != "badRoomMode") checkTitleIsShow();
	// 2017/06/08 故障部屋データは追加する　by　zy END
	var roomMsg = '';
	var RoomCount = 0;
	var isNeedShowFlag = false;
	var RoomRos = new Object();
	for (var i = 0; i < orgBgLst.length ; i++) {
		var orgClass = orgBgLst[i];
		$j("."+ orgClass).parent().each(function(){
			var roomId = $j(this).attr('roomId');
			var $tr = $j(this).parents("tr.dragTr");
			if (!Room_Map[roomId] ) { 
		    	var leftRow = $j("#left_body_table tr[name='" + roomId + "']");
				Room_Map[roomId] = new Object();
		    	Room_Map[roomId].roomNm = leftRow.attr('roomname');
		    	Room_Map[roomId].roomTp = leftRow.attr('roomtype');
		    	Room_Map[roomId].typeId = leftRow.attr('typeId');
		    }
		    //去重处理
		    if(!RoomRos[roomId]){
		    	RoomRos[roomId] = roomId;
		    	RoomCount ++;
		    }
		    isNeedShowFlag = true;
			var roomNm = Room_Map[roomId].roomNm;
			var roomTp =  Room_Map[roomId].roomTp;
			roomMsg += roomTp + '(' + roomNm +  ')、' ;
		});
	}
	if(!refreshFlag && isNeedShowFlag){
		// １列の分数単位
	    var oneColLong = parseInt($j('input[id$="hidOneColLong"]').val());
		pEntryTime = getDateByIndex(bIndex);
		//new Date(PositionMap[bIndex] ? PositionMap[bIndex].time : $j("col[cycIndex='" + bIndex + "']").attr("coldatetime"));
		pDepartTime = getDateByIndex(eIndex);
		//new Date(PositionMap[eIndex] ? PositionMap[eIndex].time : $j("col[cycIndex='" + eIndex + "']").attr("coldatetime"));
		pDepartTime = pDepartTime.addMinutes(oneColLong);
		$j("div.growlUI .entryTime").text(kendo.toString(pEntryTime, JINYACONNECT.DateTmFormat));
		$j("div.growlUI .departTime").text(kendo.toString(pDepartTime, JINYACONNECT.DateTmFormat));
	}
	$j("div.growlUI .roomLst").text(roomMsg);
	$j("div.growlUI .roomCount").text(RoomCount);
}
function setBeginAndEndTime()
{	
	if(pEntryTime && pDepartTime){
		var entryDate = new Date(pEntryTime.toDateString());
		var departDate = new Date(pDepartTime.toDateString());
		pDiffDays = commUtils.mathNumDiv((departDate.getTime() - entryDate.getTime()) , (1000 * 3600 * 24));
	}
}
// 該当列(TD)は既にアサイン済がどうかチエックする
function checkIndex(i,tdArray){
	return ($j.inArray(""+i, tdArray) >= 0);
}

// 予約名自動設定機能
function autoSetupLeadName() {
    var contactName = $j("input[id$=':relcontact']").val();
    var leadName = $j("input[id$=':leadName']").val();
    if (leadName == "" && contactName != "") {
        $j("input[id$=':leadName']").val(contactName);
    }
}
// AutoComplete項目選べるリストクリックする処理
function clearAutoCompletePanel() {
	$j(".ui-autocomplete").hide();
	$j(".ui-autocomplete").empty();
 }
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//2017/02/13 移除到着时间、出发时间 变更泊数 fix by zh BEGIN
function getELementValue(elementStr){
	var orgEle = $j(elementStr);
	//如果给定的查找条件不存在
	if (orgEle.length == 0) return '';
	if (orgEle.get(0).tagName == 'SPAN') return orgEle.html();
	else return orgEle.val();
}
//2017/02/13 移除到着时间、出发时间 变更泊数 fix by zh END

function setDepartureDateAuto(){
	//2017/02/13 移除到着时间、出发时间 变更泊数 fix by zh BEGIN
    //var starts = $j('div#createLeadPanel').find("[id$='entryDate']").html();
    var starts = getELementValue("div#createLeadPanel [id$='entryDate']");
    //2017/02/13 移除到着时间、出发时间 变更泊数 fix by zh END
    var stays = $j('div#createLeadPanel').find("[id$='staysNums']").val();
    $j('div#createLeadPanel').find("[id$='departureDate']").html(kendo.toString(kendo.date.addDays(kendo.parseDate(starts,JINYACONNECT.DateFormat),stays),JINYACONNECT.DateFormat));
}
// 保存前処理
function doBeforeSave() {
	// 2016/11/16 見積明細設定機能対応 BEGIN by zh
	if (!JINYACONNECT.CUSTOM.checkIfHadRequiredItem()) return false;
	// 2016/11/16 見積明細設定機能対応 END by zh
	blockUi();
	// CKEDITOR情報は実勢の項目にコピーする
	CKEDITOR.jinya.copyValue($j, "ckeditorClass");
	// 2017/02/15 自定义お客様boolean值的字段、checkbox的value的不显示 Fix by zh BEGIN
	var mapContactPingField = $j("input[id$=hidContactMapFields]").val();
	var mapContactPingFieldLst = mapContactPingField.split(',');
	var contactFieldToPath = new Object();
	for (var i = 0; i < mapContactPingFieldLst.length ; i++) {
		if(mapContactPingFieldLst[i] == "" || mapContactPingFieldLst[i] == null) continue;
		var mapContactPingFieldSobj = mapContactPingFieldLst[i].split(':');
		contactFieldToPath[mapContactPingFieldSobj[0]] = mapContactPingFieldSobj[1];
		if (mapContactPingFieldSobj[1] == 'Boolean') {
			//var element = contact_'result[0]';
			var contactEle = $j("[class~='contact_" + mapContactPingFieldSobj[0] + "']","[id$=createPageBlock]");
			var checkfield = $j("input:checkbox",contactEle);
			if (checkfield.is(":checked")){
					checkfield.attr("value",1); 
				}else {
					checkfield.attr("value",2);
				}
		}
	}
	// 2017/02/15 自定义お客様boolean值的字段、checkbox的value的不显示 Fix by zh END
    var hideItem = "{!$Component.createForm}:hidStartDays";
    //2017/01/25 新規画面の項目自定義機能　by　zy　BEGIN
    // 2017/02/06 移除到着日出发日项目 Fix by zh Begin
    //$j("input[id$='" + hideItem + "']").val($j('div#createLeadPanel').find("[id$='entryDate']").html());
    $j("input[id$='" + hideItem + "']").val(getELementValue("div#createLeadPanel [id$='entryDate']"));
    // 2017/02/06 移除到着日出发日项目 Fix by zh End
	//2017/01/25 新規画面の項目自定義機能　by　zy　END
	// 2020/04/30 複数のプランとそれぞれのプランの人数を選択し機能対応 WGCH BEGIN
    $j("[id$=BookEstTable] tbody tr.tranDetailRow").each(function(){
      // plan明细是否展开过
      var isPlanNumFlg = kendo.parseInt($j("input[id$=hidBasePlanNum]",this).val());
      if (isPlanNumFlg == null || isPlanNumFlg != 0){
        $j("input[id$=hidSyncInfo]",this).val("");
      }
    });
    // 2020/04/30 複数のプランとそれぞれのプランの人数を選択し機能対応 WGCH END
    makeDetailMessages();
    // 2016/11/16 見積明細設定機能対応 BEGIN by zh
    refreshOrder(true);
    // 2016/11/16 見積明細設定機能対応 END by zh
    clearAutoCompletePanel();
    // 2016/11/16 見積明細設定機能対応 BEGIN by zh
    saveLeadFun();
    // 2016/11/16 見積明細設定機能対応 END by zh
    return true;
}
var yahooLeadInitFlag = true;
function showLeadWindow(){
    if(yahooLeadInitFlag){
        yahooLeadInitFlag = false;
        YahooToolsInit();   
    }
    // 2018/06/06 all店舗の場合、新規予約エラー修正　by zy BEGIN
    $j("#right_body_table td.tdcolcls").addClass("disabled");
    // 2018/06/06 all店舗の場合、新規予約エラー修正　by zy END
	YAHOO.force.com.showCreateLead();
	isLoadUI = false;
}
// 画面Lockする
function blockUi() {
    $j.blockUI({
	//Processing...
         message: '<h1><img src="{!URLFOR($Resource.queryfiles, 'css/blockui/busy.gif')}" /> {!$Label.MSG_005_0067}</h1>'
    }); 
    return true;
}
// 画面Lock解除
function unblockUi() {
    $j.unblockUI({ fadeOut: 200 }); 
}
// プラン設定機能
function openMiniPlanSetup(item) {
	// プラン明細を展開する 
	var planItem = $j("#planCustomeBtn").data("jinyaPlanExtend");
	planItem.switchStatus();
}
// 指定の時刻が選択リストに存在チェック
function getNearTimeInArray(nowTime,timeArr,timeMap,isCheckMaxOrMin){
	// 画面指定する時刻は時刻の選択リストに非存在する場合
	
	if($j.inArray(nowTime, timeArr) < 0) {
		
   		var midTmIndex = Math.floor(timeArr.length/2),
   			middleTm = timeArr[midTmIndex],
   			bidx = 0,eidx = 0;
   		
  		if(middleTm > nowTime) {
   			eidx = midTmIndex;
		} else {
			bidx = midTmIndex;
			eidx = timeArr.length;
		} // End if(middleTm > nowTime) {
		var tempTime;
		if(isCheckMaxOrMin) {
			for(bidx;bidx < eidx; bidx++) {
				var timeInArr = timeArr[bidx];
				if(nowTime < timeInArr) break;
				tempTime = timeInArr;
			}
   		} else {
   			for(eidx;bidx < eidx; eidx-- ) {
				var timeInArr = timeArr[eidx];
				if(nowTime > timeInArr) break;
				tempTime = timeInArr;
			}
   		} // End if(isCheckMaxOrMin) {
		//nowTime = tempTime;
		return timeMap.get(tempTime);
   	} else {
   		return timeMap.get(nowTime);
   	}
}

// set kendo comobx width
function setDropDropDownWidth(el) {
	if (el.length == 0) return;
    var d = el;
    var p = d.data("kendoDropDownList").popup.element;
    var w = p.css("visibility","hidden").show().outerWidth();
    p.hide().css("visibility","visible");
    d.closest(".k-widget").width(w+30);
}
// 2017/06/28 DUMY機能、削除 BEGIN
/*
// 複数予約のICONをクリック関連処理
function openRoomindicatorWin(el) {
	var cycindex = $j(el).parent().parent().attr("cycindex");
    var entryDateTime = new Date(PositionMap[cycindex].time);
    //new Date($j("col[cycIndex='"+cycindex+"']").attr("coldatetime"));
	var strEntryDt = kendo.toString(entryDateTime, JINYACONNECT.DateFormat);
	var openUrl = '/apex/RoomIndicatorInfo?dt=' + strEntryDt;
	window.open(openUrl);
}
*/
// 2017/06/28 DUMY機能、削除 END
// 自動Focus設定を行う
function autoFocusContent(orgEleId) {
	if (orgEleId != null) {
		var $target = $j("[id$=':"+orgEleId+"']");
		if ($target.data("kendoDropDownList")) {
			$target.data("kendoDropDownList").wrapper.blur();
		} else {
			$target.blur();
		}
	}
    if(!firstLoad){ 
        scrollFunInit();
    }
	isMousInRightBody = true;
}
// ******************************************
// YAHOO UI BLOCK
// ******************************************
// Create a namespace for our custom functions
YAHOO.namespace("force.com");
// Function called when we want to show the dialog
YAHOO.force.com.showCreateLead = function() {
	multiSelectRest();
	
    document.getElementById("createLeadPanel").style.display = "block";
    // Clean Form Value to InitValue
    $j("#createLeadFormresetbtn").click();
	// 関連の項目情報をクリア処理を行う
	$j("input[id$=':relcontact']").val("");
	$j("input[id$=':relcontact_lkid']").val("");
	$j("input[id$=':relcontact_lkold']").val("");
	$j("#relcontact_lkid_org").val("");
	var roomNames = new Array(),roomTypes = new Array(),roomNum = 0,roomMsg = '';
	var roomAndTypeArr = new Array();
	var MainLead = new Object();
	for(var i = 0 ; i < roomIds.length ; i++) {
		var roomId = roomIds[i];
		if (!Room_Map[roomId] ) { 
	    	var leftRow = $j("#left_body_table tr[name='" + roomId + "']");
			Room_Map[roomId] = new Object();
	    	Room_Map[roomId].roomNm = leftRow.attr('roomname');
	    	Room_Map[roomId].roomTp = leftRow.attr('roomtype');
	    	Room_Map[roomId].typeId = leftRow.attr('typeId');
	    }
		var roomMessage = Room_Map[roomId];
		//hashMap.Get(roomId);
		//var nameAndType = roomMessage.split('_');
		// 部屋数COUNT
		roomNum++;
		// 部屋名格納する
		roomNames.push(roomMessage.roomNm);
		// 部屋タイプ存在チェック、格納する
		if($j.inArray(roomMessage.roomTp,roomTypes) < 0){
			roomTypes.push(roomMessage.roomTp);
		}
		var roomTypeId =  Room_Map[roomId].typeId;
		//$j('.dragTr[roomid = "' + roomIds[i] + '"]').attr('roomTypeId');
        roomMsg += (roomId + '_' + roomTypeId + ',');
	}
	// 2018/07/27 宿泊税計算 WGCH BEGIN
	if(roomIds.length > 0){
		var roomspcd = $j("#left_body_table tr[name='" + roomIds[0] + "']").attr('roomspcd');
		thisRoomSpcd = roomspcd == null || roomspcd == undefined ? "" : roomspcd;
	}
	// 2018/07/27 宿泊税計算 WGCH END
	//FIRST ROOM
	var guuid = $j("tr.timeSpan[name='" + roomIds[0] + "'] :eq(0)").attr("id");
	if(guidMap){
		MainLead = guidMap[guuid];
		if(MainLead){
			pEntryTime = MainLead.entrtDt;
			pDepartTime = MainLead.departDt;
		}
	}
	//泊数設定
	setBeginAndEndTime();
	setWindowMessge();
	roomNames = roomNames.toString();
	//roomNames.substring(0,roomNames.lastIndexOf(','));
	roomTypes = roomTypes.toString();
	//roomTypes.substring(0,roomTypes.lastIndexOf(','));
	$j("input[id $='hidRoomMsg']").val(roomMsg);
    // 予約人数
	$j("[id$=':stayPerson']").val(JS_StayPersons);
    // 部屋情報
    $j("span[id $='roomName']").text(roomNames);
    $j("span[id $='roomName']").attr('title',roomNames);
    $j("span[id $='roomNum']").text(roomNum);
    // 部屋他イプ
    $j("span[id $='refTypeOfRooms']").text(roomTypes);
    $j("span[id $='refTypeOfRooms']").attr('title',roomTypes);
	// RichTextArea Clear(2014/07/29)
	//if(typeof editor != "undefined") editor.setData("");
	// プラン設定情報クリア
	// 2016/11/16 見積明細設定機能対応 BEGIN by zh
	//$j("input[id$=':planItem:plan_lkid']").val("");
	var $planItem = $j("#planCustomeBtn");
	if ($planItem.length>0){
		// 2015/10/28 プラン明細表示のRESET
		planRest();
	}
	$j("tr.tranDetailRow").show();
	// 2016/11/16 見積明細設定機能対応 END by zh
	$j("input[id$=':planItem:plan_lkid']").val("");
	$j("input[id $='staysNums']").val(pDiffDays);
    $j("input[id $='hidStartDays']").val(kendo.toString(pEntryTime, JINYACONNECT.DateFormat));
	// 2015/10/28 プラン明細表示のRESET
	planRest();
    YAHOO.force.com.createLead.show();
    //  2017/02/13 页面自动刷新功能 by wx begin 
    stopRunning();
    //  2017/02/13 页面自动刷新功能 by wx end 
    // 2017/06/06 部屋故障バッグ改修する　by　zy　BEGIN
    //故障没有dragtype
    dragType = "dragEnd";
    // 2017/06/06 部屋故障バッグ改修する　by　zy　END
    // 2016/12/13 zyz CTI予約 BEGIN
	var $ctiContactInf = $j("input[id$=':ctiContactInf']");
	var ctiContactInf = $ctiContactInf.val();
	if(ctiContactInf != "") {
		cti_call_pasteInfo(null,ctiContactInf);
	}
	$ctiContactInf.val("");
	// 2016/12/13 zyz CTI予約 END
    // CKEDITOR処理の呼び出し
   	CKEDITOR.jinya.initInstance($j, "ckeditorClass");//initCkEditorItem();
}
function setWindowMessge(MainLead){
	// 2017/02/13 移除到着时间、出发时间 变更泊数 fix by zh begin
	var $inputPanel = $j('div#createLeadPanel');
	//$j("span[id $='entryDate']").text(kendo.toString(pEntryTime, JINYACONNECT.DateFormat));
	if($j("[id$=entryDate]").get(0).tagName == "INPUT"){
    	$inputPanel.find("[id$=':entryDate']").val(kendo.toString(pEntryTime, JINYACONNECT.DateFormat));
    }else if($j("[id$=entryDate]").get(0).tagName == "SPAN"){
    	$inputPanel.find("[id$=':entryDate']").text(kendo.toString(pEntryTime, JINYACONNECT.DateFormat));
    }
	// 2017/02/13 移除到着时间、出发时间 变更泊数 by zh fix end
    $j("span[id $='departureDate']").text(kendo.toString(pDepartTime, JINYACONNECT.DateFormat));
   	var oneColLong = parseInt($j('input[id$="hidOneColLong"]').val());
    if(oneColLong != CONST_24H) {
    	 if(MainLead){
	    	$j("select[id $='entryTime']").val(MainLead.entryTime);
	    }else{
    		var select_index = getNearTimeInArray(kendo.toString(pEntryTime,"HH:mm"),_entryTimeArray,_entryTimeMap,true);
    		$j("[id$=':entryTime'] > option:eq(" + select_index + ")").prop("selected", "selected");
    	}
    }else $j("select[id $='entryTime']").val('{!JSENCODE(defaultCheckinTime)}');
    if(oneColLong != CONST_24H) {
    	if(MainLead) {
    		$j("select[id $='entryTime']").val(MainLead.departTime);
    	} else {
    		var select_index = getNearTimeInArray(kendo.toString(pDepartTime,"HH:mm"),_departTimeArray,_departTimeMap,false);
    		$j("[id$=':departureTime'] > option:eq(" + select_index + ")").prop("selected", "selected");
    	}
    } else $j("select[id $='departureTime']").val('{!JSENCODE(defaultCheckoutTime)}');
}
// 2015/10/28 CTI->PAST機能対応
function _call_pasteInfo() {
	$j("[id$=':relcontact']").unbind('paste');
	$j("[id$=':relcontact']").bind('paste',function(e){
        // 2017/09/23 新規予約ウインドウ、お客様情報反映されない不具合改修 WGCH BEGIN
        var $relcontact = $j(this);
        $relcontact.autocomplete('search', this.value);
        // 2017/09/23 新規予約ウインドウ、お客様情報反映されない不具合改修 WGCH END
		var pastedText = undefined;
		if (window.clipboardData && window.clipboardData.getData) {
			pastedText = window.clipboardData.getData('Text');
		}else {
			pastedText = e.originalEvent.clipboardData.getData('Text');
		}
		/* 2015/11/09 CTI->PAST機能対応
		if (pastedText.indexOf('#') > 0) {
			e.preventDefault();
			$j("[id$=':relcontact']").val(pastedText.split('#')[0]);
			$j("input[id$=':relcontact_lkid']").val(pastedText.split('#')[1]);
			$j("[id$=':relcontact']").blur();
		}*/
		cti_call_pasteInfo(e, pastedText);
	});
}
// 2015/11/09 CTI->PAST機能対応
function cti_call_pasteInfo(e, pastedText) {
	if ($j("#createLeadPanel_c").css("visibility") == "hidden") return false;
	if (pastedText != undefined && pastedText.indexOf('#') > 0) {
		if (e != null) e.preventDefault();
		$j("[id$=':relcontact']").val(pastedText.split('#')[0]);
		$j("input[id$=':relcontact_lkid']").val(pastedText.split('#')[1]);
		$j("[id$=':relcontact']").blur();
	}
	return true;
}
// Function called when we want to hide the dialog
YAHOO.force.com.hideCreateLead = function() {
	// 2016/11/16 見積明細設定機能対応 BEGIN by zh
	// 2016/11/22 plan明细窗口不关闭 fix BEGIN by zh
	clearBookingItem();
	//$j(".rowStr").closest("tr.dataRow").remove();
	// 2017/01/16 统一行追加功能改修 by zy BEGIN
	lastBookingDetail();
	// 2017/01/16 统一行追加功能改修 by zy END
	// 2020/07/30 7117 bug fixed by zy BEGIN 
	if (("ACTCUSTOM" in window) && ("OBJ" in ACTCUSTOM))
          ACTCUSTOM.OBJ.ADDROWCALLBACKRES = null;
    // 2020/07/30 7117 bug fixed by zy END
	$j("input[id$=hidCurRows]").val("");
	// 2016/11/22 plan明细窗口不关闭 fix END by zh
	// 2016/11/16 見積明細設定機能対応 END by zh
	// ErrMessage Clear
	setTimeout(function(){ 
		$j("span[id$=':inputLeadFormMsg']").hide();
		hashMap.Clear();
		//roomIds = new Array();
		/*
		//$j('.' + curBackClass).removeClass(curBackClass);
		for (var i = 0; i < orgBgLst.length ; i++){
			$j("." + orgBgLst[i]).removeClass(orgBgLst[i]);
		}*/
		clearCurClass();
		//页面预约显示用数据清除
		EachRowHadAssign = {};
		//时刻表隐藏
		hideShowRoomTabl();
		//beginIndex = undefined;
		//endIndex = undefined;
		// 清除拖拽相关変数
		clearDragRelateData();
		//InsertMap = new Object();
		$j("#timeDiv").html("");
		$j("#roomMessageTalbe tbody").remove();
		$j("#parentTimeDiv").hide();
		// 2017/06/08 故障部屋データは追加する　by　zy BEGIN
		$j("td." + getOrgClass()).removeClass(getOrgClass());
		// 2017/06/08 故障部屋データは追加する　by　zy END
		$j("select[id$=entryTime]").removeAttr("disabled");
	    $j("select[id$=departureTime]").removeAttr("disabled");
	    //2016/11/15 泊数失效处理
	    $j("input[id$=staysNums]").removeAttr("disabled");
	},500);
	//more select clear END
	// 2018/06/06 all店舗の場合、新規予約エラー修正　by zy BEGIN
	$j("td.tdcolcls").removeClass("disabled");
	// 2018/06/06 all店舗の場合、新規予約エラー修正　by zy END
	YAHOO.force.com.createLead.hide();
	//  2017/02/13 页面自动刷新功能 by wx begin 
   	startRunning();
	//  2017/02/13 页面自动刷新功能 by wx end
}

// Function called when the DOM is ready to create the dialog,
// render the dialog into the document body, add our dialog skin
// css to the body tag, and wire up the buttons on our dialog
YAHOO.force.com.init = function() { 
    document.body.className = document.body.className + " yui-skin-sam";

// Create Lead Input Panel
    YAHOO.force.com.createLead = new YAHOO.widget.Panel(
        "createLeadPanel",  // The id of our dialog container
        {
                width           :   660,    // You can play with this until it's right
                visible         :   false,  // Should be invisible when rendered
                draggable       :   true,   // Make the dialog draggable
                close           :   false,  // Don't include a close title button
                modal           :   true,   // Make it modal
                fixedCenter     :   true,   // Keep centered if window is scrolled
                zindex          :   8,     // Make sure it's on top of everything
                // This line adds the appear/vanish fade effect
                effect          :   {
                                      effect:YAHOO.widget.ContainerEffect.FADE,
                                      duration:0.35
                                    }
        }
     );
    // Render the dialog to the document.body level of the DOM
    YAHOO.force.com.createLead.render(document.body);  
}
// *********** Add the init method to the window.load event
//YAHOO.util.Event.addListener(window, "load", YAHOO.force.com.init);
// 2015/10/28 MulitiSelect Clear Bug Fix
function multiSelectRest(){
	var selectOptins = $j("select[id$='_selected'][multiple='multiple'] option","#createLeadPanel");
	if(selectOptins.length > 0){
		selectOptins.each(function(){
			this.selected = true;
		});
		$j("select[multiple='multiple']:not([id$='_selected'],[id$='_unselected'])","#createLeadPanel").each(function(){
			var elementId = $j(this).attr("id");
			MultiSelectPicklist.handleMSPUnSelect(elementId);
		});
	}
}
// 2015/10/28 プラン明細表示のRESET
function planRest(){
	// 前に設定するプラン商品と金額情報をクリアする
	var planItem = $j("#planCustomeBtn").data("jinyaPlanExtend");
	// MITUMORIFLAG:TRUE、見積明細部分进行plan检索出现脚本错误 fix by zh BEGIN
	if (planItem != undefined) planItem.reset();
	// MITUMORIFLAG:TRUE、見積明細部分进行plan检索出现脚本错误 fix by zh END
}

function initRoomMap(){
	//2016/11/15 no shop code fixed BEGIN
	var branchCd = $j("select[id$=':branchShopCd']").length > 0 ? $j("select[id$=':branchShopCd']").val() : "";
   // 部屋メッセージ取得、画面に設定する
   Visualforce.remoting.Manager.invokeAction(
	// 2016/10/25 部屋タイプは複数選択できる機能対応 BEGIN
   "{!$RemoteAction.RoomScheduleReport.getRoomMessageJson}",branchCd ,getRoomTypeNameVals($j("select[id$=':search:roomTypeSelectId']")), function(result, event){
	//2016/11/15 no shop code fixed END
	// 2016/10/25 部屋タイプは複数選択できる機能対応 END
       if(event.type == 'exception') {
       	   //エラーの場合下
           setTimeout(function(){ initRoomMap(); },5000);
       } else {
			//var jsMap = '{!roomInfos}';
			//console.debug(result);
			Room_Map = result;
       }
   });
}
function refreshRoom(refreshRoomIds){
	// 2018/03/07 Security Check BEGIN
	var branchShopnm = "{!JSENCODE(branchShopNm)}";
	// 2018/03/07 Security Check END
	var queryDate = $j("[id$=queryDate]").val(),
		viewMode = $j("select[id$=viewModeSel]").val(),
		colSize = $j("#hidColSize").val(),
		curStatus = $j("select[id$=statusSelect]").val();
   // 部屋メッセージ取得、画面に設定する
   Visualforce.remoting.Manager.invokeAction(
   "{!$RemoteAction.RoomScheduleReport.refreshRoomByIds}",refreshRoomIds,branchShopnm,queryDate,viewMode,colSize,curStatus , function(result, event){
       if(event.type == 'exception') {
       	   //エラーの場合下
           //setTimeout(function(){ initRoomMap(); },5000);
       } else {
			if (result.errorMsg != '') alert(result.errorMsg);
        	else {
        		var tdLst = result.tdInf;
        		if (tdLst.length > 0) refreshRow(tdLst);
        	}
       }
       unblockUi();
   });
}
var MAX_PROCESS_ROOM_LENGTH = 100;
// 予約新規作成後のスケータすチェツク
// 予約データを登録処理後の自動処理
function leadCreateCallBack() {
    var createResult = $j("input[id$=':lead_hidDataCreateOK']").val();
    // 2016/12/07 タイムテーブル新規後一画面へ遷移 BEGIN by zh
	var strId = $j("input[id$='IndexId']").val(); 
	// 2016/12/07 タイムテーブル新規後一画面へ遷移 END by zh
    if (createResult.toLowerCase() == "true") {
        $j("input[id$=':lead_hidDataCreateOK']").val("");
        var rowArray = new Array();
        var AllArray = new Array();
        var roomStr = $j("input[id$=hidRoomMsg]").val();
        roomIds = roomStr.split(",");
        if(roomIds.length > MAX_PROCESS_ROOM_LENGTH) {
        	var idx = 0;
			for (var i = 0 ; i < roomIds.length; i++){
				rowArray.push(roomIds[i]);
				if (idx >= MAX_PROCESS_ROOM_LENGTH) {
					AllArray.push(rowArray);
					rowArray = new Array();
					idx = 0;
				}
				idx++;
			}
			if (rowArray.length > 0) AllArray.push(rowArray);
		} else {
			AllArray.push(roomIds);
		}
		for(var i = 0 ; i < AllArray.length; i++){
			setTimeout((function(i){
				return function(){
					//console.log(i);
					refreshRoom(AllArray[i].toString());
				}
			})(i), 400*i);
		}
		YAHOO.force.com.hideCreateLead();
		// 2016/12/07 タイムテーブル新規後一画面へ遷移 BEGIN by zh
		var isIncludeMode = {!isIncludeMode};
       	if(isIncludeMode == false) gotoBookingFlexApp(strId);
        // 2016/12/07 タイムテーブル新規後一画面へ遷移 END by zh
    } else unblockUi();
}
function getBadRoomMessage(){
	var queryDate = $j("[id$=queryDate]").val(),
		viewMode = $j("select[id$=viewModeSel]").val();
   // 部屋メッセージ取得、画面に設定する
   Visualforce.remoting.Manager.invokeAction(
   "{!$RemoteAction.RoomScheduleReport.getBadRoomMessage}",queryDate,viewMode , function(result, event){
       if(event.type == 'exception') {
       	   //エラーの場合下
       	   alert(result);
       } else {
        	if (result.length > 0) {
        		badRoomSetPosition(result);
        	}
       }
       badRoomFlag = true;
   });
}
// 2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN 
//单泊故障
var badRoomTemplate = '<div class="badroom" id="badRoom_$id$" rid="$roomid$" onclick="expact(this)" date="$date$" style="background:{!statusColor.RS_RoomBad};position: absolute;z-index:1;display: none;"> <a target="_top" href="/$id$" id="$id$" onblur="LookupHoverDetail.getHover(\'$id$\').hide();" onfocus="LookupHoverDetail.getHover(\'$id$\', \'/$id$/m?retURL=%2F$roomid$&isAjaxRequest=1\').show();" onmouseout="LookupHoverDetail.getHover(\'$id$\').hide();" onmouseover="LookupHoverDetail.getHover(\'$id$\', \'/$id$/m?retURL=%2F$id$&isAjaxRequest=1\').show();">$roomNm$</a></div>';// 2017/03/03 故障一括解除　by　zy BEGIN
//多泊故障
var badDatesRoomTemplate = '<div class="more" id="badRoom_$id$" rid="$roomid$" style="position: absolute;z-index:1;display: none;"></div>';
var badA = '<a target="_top" href="/$id$" id="$id$" onblur="LookupHoverDetail.getHover(\'$id$\').hide();" onfocus="LookupHoverDetail.getHover(\'$id$\', \'/$id$/m?retURL=%2F$roomid$&isAjaxRequest=1\').show();" onmouseout="LookupHoverDetail.getHover(\'$id$\').hide();" onmouseover="LookupHoverDetail.getHover(\'$id$\', \'/$id$/m?retURL=%2F$id$&isAjaxRequest=1\').show();">$roomNm$</a>';
var badSpan = '<div class="badroom" onclick="expact(this)"  ondblclick="expactAll(this)" date="$date$" rid="$roomid$" style="background:{!statusColor.RS_RoomBad};position: absolute;" />';
// 2017/03/27 故障部屋一括解除機能対応　by　zy END 
function badRoomSetPosition(badRoomMessage){
    var RIGHT_HEAD = $j("#right_head");
    var RIGHT_BODY = $j("#right_body");
    // 2018/02/07 故障時刻登録　by zy BEGIN
    var colBeginDate = new Date(kendo.parseFloat(RIGHT_HEAD.find("col:first").attr("coldatetime")));
	var colEndDate = new Date(kendo.parseFloat(RIGHT_HEAD.find("col:last").attr("coldatetime")));
    // １列の分数単位
 	var oneColLong = parseInt($j('input[id$="hidOneColLong"]').val());
 	colEndDate = colEndDate.addMinutes(oneColLong);
    lastElement = RIGHT_BODY.find("col:last");
    // 2018/02/07 故障時刻登録　by zy END
	for(var i = 0 ; i < badRoomMessage.length; i++){
		// 2018/02/07 故障時刻登録　by zy BEGIN
		var badRoom = badRoomMessage[i];
		var roomIdTr = RIGHT_BODY.find("table.detailList tr[roomid=" + badRoom.roomId + "]");
		if (roomIdTr.length == 0 ) continue;      
		var rs_BeginDate = new Date(badRoom.beginDate)//kendo.parseDate(new Date(badRoom.beginDate))
		// 2018/02/07 故障時刻登録　by zy END  
		   ,rs_EndDate = new Date(badRoom.endDate)//kendo.parseDate(new Date(badRoom.endDate))
		   ,parseDate = badRoom.beginDateStr
		   ,parserEndDate = badRoom.endDateStr
		// 2018/02/07 故障時刻登録　by zy BEGIN
           //,roomIdTr = RIGHT_BODY.find("table.detailList tr[roomid=" + badRoom.roomId + "]")
		// 2018/02/07 故障時刻登録　by zy END
		   ,elementId = "badRoom_" + badRoom.Id;
		if(rs_BeginDate > rs_EndDate) continue;
		// 2018/02/07 故障時刻登録　by zy BEGIN
		// 如果结束时间小于页面开始时间、开始时间小于页面结束时间不处理 
		if(rs_EndDate <= colBeginDate || rs_BeginDate >= colEndDate) continue;
		// 2018/02/07 故障時刻登録　by zy END
		if(rs_BeginDate < colBeginDate)
			parseDate = kendo.toString(colBeginDate,JINYACONNECT.DateFormat);
		if(colEndDate < rs_EndDate)
			parserEndDate =  kendo.toString(colEndDate,JINYACONNECT.DateFormat);
		// 2018/02/07 故障時刻登録　by zy BEGIN
		var begDateCols = RIGHT_BODY.find("col[data-coldate = '" + parseDate + "']");
		var endDateCols = RIGHT_BODY.find("col[data-coldate = '" + parserEndDate + "']");
		var leftElement,widthValue = 0
        ,colBeginElement = begDateCols.first()   //$j("#right_body col[data-coldate = '" + parseDate + "']:eq(0)")
        ,colEndElement = (endDateCols.length == 0 && rs_EndDate > colEndDate) ? lastElement : endDateCols.last();    
        // 2018/02/07 故障時刻登録　by zy END
		if(colBeginElement.length == 0 ) continue;
		// 2018/02/07 故障時刻登録　by zy BEGIN
		//时刻情况下处理
		//if (badRoom.isOneDay) {
			var tempElement = getBegNearTime(badRoom.beginDate,begDateCols);
			//RIGHT_BODY.find("col[coldatetime = '" + badRoom.beginDate + "']");
			if ( tempElement.length > 0 ) colBeginElement = tempElement;
			tempElement = getEndNearTime(badRoom.endDate,endDateCols);
			if ( tempElement.length > 0 ) colEndElement = tempElement;
		//}
		// 2018/02/07 故障時刻登録　by zy END
		// 2017/03/03 故障一括解除　by　zy BEGIN
		var el_head = $j(".funcHead .clearBtn[data-date='" + parseDate + "']");
		//判断是否应该显示解除按钮
		if (!el_head.hasClass("hadData")) {
			el_head.addClass("hadData");
		}
		// 2017/03/03 故障一括解除　by　zy END
		// 2017/03/03 故障一括解除の多泊対応　by　zy BEGIN
		// 2018/02/07 故障時刻登録　by zy BEGIN
		//var diffDays = (rs_EndDate.getTime() - rs_BeginDate.getTime()) / (24*60*60*1000);
		if (badRoom.isOneDay) {
		// 2018/02/07 故障時刻登録　by zy END
		// 2017/03/03 故障一括解除の多泊対応　by　zy END
			var templateElement = badRoomTemplate.replaceAll('$roomNm$',badRoom.Name);
			templateElement = templateElement.replaceAll('$roomid$',badRoom.roomId);
			templateElement = templateElement.replaceAll('$id$',badRoom.Id);
			templateElement = templateElement.replaceAll('$date$',parseDate);
			$j(templateElement).appendTo($j("#badroomcontents"));
		// 2017/03/03 故障一括解除の多泊対応　by　zy BEGIN
		} else {
			// 2018/02/07 故障時刻登録　by zy BEGIN
			// 2018/05/23 故障効率UP by zy　BEGIN
			var begDt = rs_BeginDate > colBeginDate ? rs_BeginDate : colBeginDate;
			var endDt = rs_EndDate > colEndDate ? colEndDate : rs_EndDate;
			//var diffDays = commUtils.mathNumDiv((colEndDate.getTime() - rs_BeginDate.getTime()) , (1000 * 3600 * 24));
			var diffDays = commUtils.mathNumDiv((endDt.getTime() - begDt.getTime()) , (1000 * 3600 * 24));
			// 2018/05/23 故障効率UP by zy　END
			diffDays = Math.ceil(diffDays);
			// 2018/02/07 故障時刻登録　by zy END
			var temp_div = badDatesRoomTemplate.replaceAll('$roomid$',badRoom.roomId);
			temp_div = temp_div.replaceAll('$id$',badRoom.Id);
			var curDiv = $j(temp_div).appendTo($j("#badroomcontents"));
			var temp_a = badA.replaceAll('$id$',badRoom.Id);
			temp_a = temp_a.replaceAll('$roomNm$',badRoom.Name);
			var cur_el;
			for (var j = 0;	j <= diffDays ;j++) {
				// 2018/05/23 故障効率UP by zy　BEGIN
				//var cloneDt = rs_BeginDate.clone();
				var cloneDt = begDt.clone();
				// 2018/05/23 故障効率UP by zy　END
				var curDt = cloneDt.addDays(j);
				// 2018/06/07 多日故障数据时刻显示有误改正 by zy　BEGIN
				//if (rs_EndDate < curDt ) continue;
				if (kendo.toString(rs_EndDate,JINYACONNECT.DateFormat) < kendo.toString(curDt,JINYACONNECT.DateFormat) ) continue;
				// 2018/06/07 多日故障数据时刻显示有误改正 by zy　END
				var temp_spn = badSpan.replace('$date$',kendo.toString(curDt,JINYACONNECT.DateFormat)).replace('$roomid$',badRoom.roomId);
				if (j == 0) {
					cur_el = $j(temp_spn).append($j(temp_a)).appendTo(curDiv);
					cur_el.css({"z-index":1});
					continue;
				}
				cur_el.after($j(temp_spn));
				cur_el = cur_el.next();
			}
		}
		// 2017/03/03 故障一括解除の多泊対応　by　zy END
		
		badRoom["beginIndex"] = colBeginElement.index();
		badRoom["endIndex"] = badRoom.beginIndex;
		badRoom.endIndex += Math.abs(colEndElement.index() - colBeginElement.index());
		//badRoom["endIndex"] +=1;
		if(!badRoomObj[badRoom.roomId]) {
			badRoomObj[badRoom.roomId] = new Object();
			badRoomObj[badRoom.roomId]["messageIdx"] = 0;
			badRoomObj[badRoom.roomId]["messageArr"] = new Array();
		}
		var badRoom =  eval(badRoom);
		badRoomObj[badRoom.roomId]["messageIdx"]++;
		badRoomObj[badRoom.roomId]["messageArr"].push(badRoom);
	}
}
// 2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN 
//刷新故障预约数据
function refreshBadRoomMessage(rmArr){
// 2017/03/27 故障部屋一括解除機能対応　by　zy END 
	// 2018/02/07 故障時刻登録　by zy BEGIN
	var lastIndex = $j("#right_body_table col").last().index();
	// 2018/02/07 故障時刻登録　by zy END
	for (var roomId in badRoomObj) {
		var badRoomMsg = badRoomObj[roomId];
		if (badRoomMsg){
			var messageArr = badRoomMsg["messageArr"];
			if(badRoomMsg["messageIdx"] <= 0) continue;
			var curTr = $j("tr.dragTr[roomid='" + roomId + "']");
			//	2016/11/16 空行のエラー修正 BEGIN
			if(curTr.length <= 0 || curTr.children().length <= 0 ) continue;
			//	2016/11/16 空行のエラー修正 END
			var assignedCol = curTr.attr("assignedcolidx");
			var assignedArr = assignedCol.split(",");
			if (curTr.length > 0 && curTr.children("td").length >1) {
				for (var i = 0 ; i < messageArr.length ; i++ ){
					var heightValue = 23;
					var badRoom = messageArr[i];
					//2017/03/08　故障解除する　by zy BEGIN
					if (rmArr != undefined){
						//已解除数据
						if($j.inArray(badRoom.Id,rmArr) >= 0){
							//删除不添加
							messageArr.splice(i,1);
							badRoomObj[roomId]["messageIdx"]--;
							//更新不可分配
							var newAssinedArr = new Array();
							for (var j = 0 ; j < assignedArr.length ; j++){
								var c_idx = assignedArr[j];
								if (c_idx == "" || c_idx == null) continue;
								var curInt = kendo.parseInt(c_idx);
								if( badRoom.beginIndex > curInt || badRoom.endIndex <  curInt){
									newAssinedArr.push(curInt);
								}
							} 
							curTr.attr("assignedcolidx",newAssinedArr.toString());
							continue;
						}
					}
					//2017/03/08　故障解除する　by zy END
					var elementId = "badRoom_" + badRoom.Id;
					var badRoomELement = $j("#" + elementId);
					//若数据不存在则自己插入一次
					if (badRoomELement.length == 0) {
						var templateElement = badRoomTemplate.replaceAll('$roomNm$',badRoom.Name);
						templateElement = templateElement.replaceAll('$roomid$',badRoom.roomId);
						templateElement = templateElement.replaceAll('$id$',badRoom.Id);
						$j(templateElement).appendTo($j("#badroomcontents"));
						badRoomELement = $j("#" + elementId);
					}
					
					var leftElement = $j("td:eq(" + badRoom.beginIndex + ")",curTr);
					var elementLeftValue = leftElement.position().left+ $j('#right_body').scrollLeft();
					var elementTopValue = curTr.position().top + $j('#right_body').scrollTop();
					//console.log(elementTopValue);
					// 2018/02/07 故障時刻登録　by zy BEGIN
					if (lastIndex <= badRoom.endIndex ) //|| !badRoom.isOneDay
					// 超过页面最大数显示
					widthValue = ($j("td:eq(" + lastIndex + ")",curTr).position().left + $j("td:eq(" + lastIndex + ")",curTr).width() - leftElement.position().left); 
					else widthValue = ($j("td:eq(" + badRoom.endIndex + ")",curTr).position().left - leftElement.position().left); 
					// 2018/02/07 故障時刻登録　by zy END
					var heightFlag = false;
					//首尾是否在被占用
					// 2018/02/07 故障時刻登録　by zy BEGIN
					if ($j.inArray(badRoom.beginIndex+'',assignedArr) >= 0 || 
						($j.inArray(badRoom.endIndex-1 + '',assignedArr) >= 0 && $j.inArray(badRoom.endIndex + '',assignedArr) >= 0))
					// 2018/02/07 故障時刻登録　by zy END	
						heightFlag = true;
					//中间是否有占用
					if (!heightFlag){
						// 2018/02/07 故障時刻登録　by zy BEGIN
						var divElements = $j("td",curTr).slice(badRoom.beginIndex,badRoom.endIndex).find("div.isAssignedStatus");
						if (divElements.length > 0) heightFlag = true;
						/*
						$j("td",curTr).slice(badRoom.beginIndex,badRoom.endIndex).each(function(){
							var divElements = $j(this).find("div.isAssignedStatus");
							if (divElements.length > 0){ 
								heightFlag = true;
								return false;
							}else return true; 
						});*/
						// 2018/02/07 故障時刻登録　by zy END
					}
					var startTime = kendo.toString(new Date(getDateByIndex(badRoom.beginIndex)),'HH:mm');
					var endTime = kendo.toString(new Date(getDateByIndex(badRoom.endIndex)),'HH:mm');
					var chkTime = "00:00";
					if (curTr.find("td").length > 0){
						var tdRowByIndex = curTr.find("td:eq(0)");
						var topValue = tdRowByIndex.height() ;
						if (heightFlag) heightValue = heightValue/2;
						topValue -= heightValue;
						elementTopValue += topValue;
						// 2018/02/07 故障時刻登録　by zy BEGIN
						badRoomELement.css({width:widthValue - 1,left:elementLeftValue + 1,top:elementTopValue + 1,height:heightValue}).show();
						// 2018/02/07 故障時刻登録　by zy END
						// 2017/03/03 故障一括解除の多泊対応　by　zy BEGIN
						if (badRoomELement.hasClass("more")) {
							var child_div = $j("div",badRoomELement);
							var c_width; 
							//= widthValue/child_div.length;
							// 2018/02/07 故障時刻登録　by zy BEGIN
							var c_left = 1;
							// 2018/02/07 故障時刻登録　by zy END
							child_div.each(function(idx){
								var r_date = $j(this).attr("date");
								var c_el = $j("th.dayColumn[data-date='" + r_date + "']");
								var n_el = c_el.next();
								if (n_el.length > 0){
									c_width = n_el.position().left - elementLeftValue;
									if (child_div.length == idx + 1) c_width -= 1;
									elementLeftValue = n_el.position().left;
									// 2018/02/07 故障時刻登録　by zy BEGIN
									$j(this).css({width:c_width,left:c_left ,height:heightValue,top:1});
									// 2018/02/07 故障時刻登録　by zy END
								} else {
									c_width = c_el.width();
									if (child_div.length == idx + 1) c_width -= 1;
									// 2018/02/07 故障時刻登録　by zy BEGIN
									$j(this).css({width:c_width,left:c_left ,height:heightValue,top:1});
									// 2018/02/07 故障時刻登録　by zy END
								}
								c_left += c_width;
							});
							// 2018/02/07 故障時刻登録　by zy BEGIN
							//badRoomELement.show();
							if (startTime != chkTime) child_div.first().addClass("timeClass");
							if (endTime != chkTime) child_div.last().addClass("timeClass");
						} else if (startTime != chkTime || endTime != chkTime ) badRoomELement.addClass("timeClass");
						// 2018/02/07 故障時刻登録　by zy END
						// 2017/03/03 故障一括解除の多泊対応　by　zy END
					}
				}
			}
		}
	}
	
}
function autoProcessFun(){
	//加载以后
	var daraRowCount = $j('#right_body tr.dragTr').length;
	var showLength = $j('#right_body tr.dragTr:visible').length;
	if(showLength == daraRowCount && badRoomFlag){
		// hidden loading box	
		$j('#load_scrl').hide();
		refreshBadRoomMessage();
		// YAHOO WINDOW INIT
		if(yahooLeadInitFlag){
			yahooLeadInitFlag = false;
        	YahooToolsInit();
		}
		//  2017/02/13 页面自动刷新功能 by wx begin
		startRunning();
		//  2017/02/13 页面自动刷新功能 by wx end
		// 2016/11/22 故障部屋一括登録機能対応　BEGIN
		if({!isShowTierHeader} && !editModeFlag){
			$j("span.badRoomSpan").css("visibility","visible");
		}
		// 2016/11/22 故障部屋一括登録機能対応　END
		if (lazyLoadingInterval) clearInterval(lazyLoadingInterval);
	}
	if (RowInfs.length <= autoProcessIdx) {
		return;
	}
	var autoAddLen = addLength;
	if (dragType != "") autoAddLen = 20;
	
	//var curIdx = autoProcessIdx;
	//autoProcessIdx += autoAddLen;
	//if (RowInfs.length < autoProcessIdx) autoProcessIdx = RowInfs.length;
	refreshRow(RowInfs[autoProcessIdx]);
	autoProcessIdx++;
	
}
function checkInRoom(roomId,beginIdx,endIdx){
	if(badRoomObj[roomId] && badRoomObj[roomId].messageIdx > 0 ){
		var badRoomInfo = badRoomObj[roomId];
		for(var i = 0 ; i < badRoomInfo.messageIdx; i++){
			var badRoom = badRoomInfo.messageArr[i];
			
			var roomBegin = badRoom["beginIndex"],roomEnd = badRoom["endIndex"],
				selectStartIndex = beginIdx,selectEndIndex = endIdx;
			//含む   
			if(selectStartIndex <= roomBegin && roomBegin <= selectEndIndex)
				return true;
			// 2018/02/07 故障時刻登録　by zy BEGIN
			// bug修复 房间的结束位置应该不能
			//if(selectStartIndex <= roomEnd && roomEnd <= selectEndIndex)
			if(selectStartIndex < roomEnd && roomEnd <= selectEndIndex)
			// 2018/02/07 故障時刻登録　by zy END
				return true;
			if(roomBegin < selectStartIndex && roomEnd > selectStartIndex)
				return true;
			if(roomBegin < selectEndIndex && roomEnd > selectEndIndex)
				return true;
		}
	}
	return false;
}
function hideMw(that){
	var leadId = $j(that).closest("div.isAssignedStatus").attr("leadid");
	LookupHoverDetail.getHover(leadId).hide();
}
function showMw(that){
	var leadId = $j(that).closest("div.isAssignedStatus").attr("leadid");
//console.log("over");
  		//if(isCanShowFlag)
  	LookupHoverDetail.getHover(leadId, '/' + leadId + '/m?retURL=%2F' + leadId + '&isAjaxRequest=1').show();
  	if (LookupHoverDetail.hovers[leadId]) {
		if (!$j(LookupHoverDetail.hovers[leadId].hover.div).is(":visible")){
			delete LookupHoverDetail.hovers[leadId];
			//LookupHoverDetail.getHover(leadId, '/' + leadId + '/m?retURL=%2F' + leadId + '&isAjaxRequest=1').show();
		}
	}
  	
}
// 2017/06/08 故障部屋データは追加する　by　zy BEGIN
function getOrgClass(){
	var dragShowClass = "orangeBackground";
	if (pageMode == 'badRoomMode') {
		dragShowClass = 'badRoomClass';
	}
	return dragShowClass;
}
//获取当前class
function getCurClass(index){
	// 2017/05/03 badRoom drag 機能追加　by　zy BEGIN
	var dragShowClass = getOrgClass();
	// next class
	if (index == 1) {
		curBackClass = dragShowClass + orgBgLst.length;
		orgBgLst.push(curBackClass);
	// prev class
	} else if (index == -1) {
		var orgLen = orgBgLst.length - 2;
		var prevClass = '';
		//if (orgLen == 0 ) prevClass = dragShowClass;
		//else 
		if (orgLen >= 0) prevClass = orgBgLst[orgLen];
		return prevClass;
	} else if (index == 0) {
		if (orgBgLst.length == 0) {
			orgBgLst.push(dragShowClass + orgBgLst.length);
		}
		return orgBgLst[0];
	} else if (curBackClass == undefined || curBackClass == "" || orgBgLst.length == 0) {
		curBackClass = dragShowClass + orgBgLst.length;
		orgBgLst.push(curBackClass);
	}
	return curBackClass;
}
//清楚选中的色块
function clearCurClass(){
	for (var i = 0; i < orgBgLst.length ; i++){
		$j("td." + orgBgLst[i]).removeClass(orgBgLst[i]);
	}
	$j("td." + getOrgClass()).removeClass(getOrgClass());
	orgBgLst.length = 0;
	curBackClass = "";
}
// 2017/06/08 故障部屋データは追加する　by　zy END
//删除ctrl中选择行
function removeSelect(curRow,roomId,that){
	var classList = that.className.split(/\s+/);
	// 2017/06/08 故障部屋データは追加する　by　zy BEGIN
	var curCss =  getTdClass('orangeBackground',that);
	// 2017/06/08 故障部屋データは追加する　by　zy END
	var hadAssignArr = EachRowHadAssign[roomId];
	if(curCss != ''){
		var selectRows = $j("td." + curCss,curRow);
		var beginIdx = selectRows.first().index();
		var endIdx = selectRows.last().index();
		selectRows.each(function(){
			var idx = $j(this).index();
//console.log(idx);
			var roomRow = $j.inArray(idx+"",hadAssignArr);
//console.log(roomRow);
// console.log(EachRowHadAssign[roomId]);
			if(roomRow >= 0 ){
				EachRowHadAssign[roomId].splice(roomRow,1);
			}
	 	});
	 	var key = beginIdx + '_' + endIdx + '_' + roomId;
	 	var idx = InsertMap[key];
//console.log(InsertLeadLst[idx]);
		if( idx !== undefined && idx >= 0 ) InsertLeadLst[idx] = undefined;
		selectRows.removeClass(curCss);
	}
	setGrowUi(0,0,true);
}
function showRoomMessageTable(){
	if($j("#roomMessageTalbe").is(":visible")){
		$j("#roomMessageTalbe").hide();
        $j("#moreSpan").addClass("k-i-arrow-s"); 
        $j("#moreSpan").removeClass("k-i-arrow-n");
         clearRoomMessageBind();
        $j("#timeDiv").show();
        $j("#flowMessageWindow").hide();
	}else {
		$j("#roomMessageTalbe").show();
		$j("#flowMessageWindow").show();
        $j("#moreSpan").addClass("k-i-arrow-n"); 
        $j("#moreSpan").removeClass("k-i-arrow-s");
        $j("#timeDiv").hide();
	}
}
function clearRoomMessageBind(){
	 $j(window).unbind("mousedown");
	 $j("#createLeadPanel .bd").unbind("mousedown");
}
function hideShowRoomTabl(){
	if($j("#roomMessageTalbe").is(":visible")){
		$j("#roomMessageTalbe").hide();
        $j("#moreSpan").addClass("k-i-arrow-s"); 
        $j("#moreSpan").removeClass("k-i-arrow-n");
        clearRoomMessageBind();
	}
}
function makeDetailMessages(){
	var moreRoomMessage = '';
	$j("#roomMessageTalbe tr.timeSpan").each(function(){
		var guuid = $j(this).attr("id");
		var lead = guidMap[guuid];
		var entryDt = kendo.parseDate(lead.entryDate + ' ' + lead.entryTime, JINYACONNECT.DateTmFormat);
   		var depDt = kendo.parseDate(lead.departDate + ' ' + lead.departTime, JINYACONNECT.DateTmFormat);
		moreRoomMessage += Room_Map[lead.roomId].typeId + '_' + lead.entryDate + '_' + $j("td.entryTime select",this).val() + '_' + lead.departDate + '_' + $j("td.departTime select",this).val()  + '_'  + Room_Map[lead.roomId].roomId + ','
	});
   	console.log(moreRoomMessage);
    $j("input[id$=hidMoreRoomMessage]").val(moreRoomMessage);
}
function changTime(that){
	if($j(that).closest("th").hasClass("HeadRoomEntryTime")){
		var curValue = $j(that).val();
		$j(".entryTime").each(function(){
			$j("select",this).val(curValue);
		}); 
	}
}
//右侧提示栏显示页定义及出现
function checkTitleIsShow(){
	var messgeDiv = $j('div.growlUI');
	if(!isLoadUI && !messgeDiv.is(":visible")){
		$j.blockUI({
	         message: messgeDiv,
	         fadeIn: 700,
	         fadeOut: 700,
	         //timeout: 2000,
	         showOverlay: false,
	         centerY: false,
	         css: {
	             width: '450px',
	             top: '10px',
	             right: '10px',
	             left: '',
	             border: 'none',
	             padding: '5px',
	             backgroundColor: '#000',
	             '-webkit-border-radius': '10px',
	             '-moz-border-radius': '10px',
	             opacity: .8,
	             color: '#fff'
	         }
	     });
	     isLoadUI = true;
     }
}
// 2016/11/22 故障部屋一括登録機能対応 BEGIN
//故障部屋のチックボックスのクリック対応
function badRoomShow(that){
	//加载以后
	$j(".badRoomDiv").toggleClass("badRoomToggleClass");
	if($j(".badRoomDiv").hasClass("badRoomToggleClass")){
		//  2017/02/13 页面自动刷新功能 by wx begin
		// floatHide();
		floatHide(true);
		//  2017/02/13 页面自动刷新功能 by wx end
	} else {
	//  2017/02/13 页面自动刷新功能 by wx begin 
		stopRunning();
	//  2017/02/13 页面自动刷新功能 by wx end 
	// 2017/05/03 badRoom drag 機能追加　by　zy BEGIN
		pageMode = "badRoomMode";
		curBackClass = undefined;
		//$j(".tdcolcls").addClass("disabled");
		// 2017/05/03 badRoom drag 機能追加　by　zy END
		$j("td.orangeBackground").removeClass("orangeBackground");
		// 2018/02/22 未割り当て ワィンドウ追加　by　zy　BEGIN
		var win = $j("#noAssignLeadListWindow").data("kendoWindow");
		if (win != undefined) win.close();
		// 2018/02/22 未割り当て ワィンドウ追加　by　zy　END
	}
}
// 2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN 
//故障解除btn
function clearRoomShow(that) {
	//加载以后
	$j(".badRoomDiv").toggleClass("badRoomToggleClass");
	if($j(".badRoomDiv").hasClass("badRoomToggleClass")){
		//  2017/03/28 页面自动刷新功能 by wx begin 
		floatHide(true);
		//  2017/03/28 页面自动刷新功能 by wx end 
	} else {
// 2017/05/03 badRoom drag 機能追加　by　zy BEGIN
		pageMode = "badRoomMode";
// 2017/05/03 badRoom drag 機能追加　by　zy END
		$j(".tdcolcls").addClass("disabled");
		$j("td.orangeBackground").removeClass("orangeBackground");
	}
	if(!$j("div.floatBadRoom").is(":visible")){
		$j("div.floatBadRoom").slideDown();
	}
	$j(".hadData").toggleClass("badRoomToggleClass");
}
//故障解除处理对象
var RmvBadObj = { 
	 //内置数据存储用
	 data:{},
	 isEmpty:true,
	 //存入badid
	 //2017/06/09 跨天数据判断追加 by zy BEGIN
	 set:function(id,date,flag){
	 //2017/06/09 跨天数据判断追加 by zy END
	 	if(!this.hadData(id)){
	 		this.data[id] = new Object();
	 		this.isEmpty = false;
	 	}
	 	//存在date参数,多天数故障数据拆分用
 		if (date != undefined){
 			this.data[id][date] = true;
 		}
 		//2017/06/09 跨天数据判断追加 by zy BEGIN
 		//if (flag) this.data[id]["more"] = true
 		//2017/06/09 跨天数据判断追加 by zy END
	 },
	 //判断是否寄存
	 hadData:function(id){
	 	var ex = this.data[id];
	 	if( ex != "" && ex != undefined){
	 		return true;
	 	}
	 	return false;
	 },
	 //删除
	 remove:function(id){
	 	if (this.hadData(id)) {
	 		delete this.data[id];
	 	}
	 },
	 //返回json串
	 result:function(){
	 	return JSON.stringify(data);
	 },
	 //清空数据
	 clear: function(){
	 	this.isEmpty = true;
	 	this.data = new Object();
	 }
};
// 故障部屋处理json数据对象
function BadObj(roomId,dateArr,objType){
	// 2018/02/07 故障時刻登録　by zy BEGIN
	var dateLst = dateArr.dataLst;
	//故障部屋
	if (objType == 'bad') {
		var obj = {rid:roomId,bid:'',otp:'bad',dates:dateLst};
		if (dateArr.begin != undefined ) obj.start = dateArr.begin;
		if (dateArr.end != undefined) obj.endtime = dateArr.end;
		return obj;
	}
	// 2018/02/07 故障時刻登録　by zy END
	//故障解除
	else if (objType == 'exp') {
		if (dateLst.length == 0) return {rid:'',bid:roomId,dates:dateLst,otp:'exp'};
		else return {rid:roomId,bid:'',dates:dateLst,otp:'exp'};
	}
	//その他
	else return new Object();
}
//单独解除故障
function expact(that){
	//$j(that).hide();
// 2017/05/03 badRoom drag 機能追加　by　zy BEGIN
	if (pageMode != "badRoomMode") return;
// 2017/05/03 badRoom drag 機能追加　by　zy END
	var p_date = $j(that).attr("date");
	var roomId = $j(that).attr("rid");
	// 时刻字段直接取消
	if ($j(that).hasClass("timeClass")) {
		var badId = $j(that).attr("id");
		if (badId == undefined) {
			badId = $j(that).closest("div.more").attr("id");
			badId = badId.replace('badRoom_','');
			RmvBadObj.set(roomId,p_date);
			RmvBadObj.data[roomId]["bid"] = badId;
	    } else {
	    	badId = badId.replace('badRoom_','');
	    	RmvBadObj.set(badId);
	    	RmvBadObj.data[badId]["rid"] = roomId;
	    }
	    $j(that).addClass("badRoomToggleClass");
	    //显示保存按钮
	    if(!RmvBadObj.isEmpty) if(!$j("div.floatBadRoom").is(":visible")) $j("div.floatBadRoom").slideDown();
	    //解除模式下隐藏故障房间(不包括点选的)
	    if ($j("td[class*=badRoomClass]:not('.badRoomClass')").length == 0) chgBadRoomType('bad');
	    //解除的时候不进行拖拽
	    if ($j("td.tdcolcls:not('.disabled')")) $j(".tdcolcls").addClass("disabled");
	 } else removeMsgByDate(p_date,roomId);
}

//解除按钮响应
function setClearRoomStatus(that){
	var tb_date = $j(that).data("date");
	var prev_input = $j(that).prev();
	//解除选择故障
	if(prev_input.hasClass("hadAssign")) setBadRoomStatus (prev_input,false);
	removeMsgByDate(tb_date);
}
//故障登录切换
function chgBadRoomType(flag){
	//故障
	if (flag == 'bad'){
		$j(".badBtn").hide();
		//2017/03/28 故障登录信息隐藏と显示 by zy BEGIN
		// 2018/02/07 故障時刻登録　by zy BEGIN
		$j(".floatBadRoom td").slice(0,10).css("visibility","hidden");
		// 2018/02/07 故障時刻登録　by zy END
		//2017/03/28 故障登录信息隐藏と显示 by zy END
	//故障解除
	} else if (flag == 'rmv'){
		$j(".clearBtn").hide();
		//2017/03/28 故障登录信息隐藏と显示 by zy BEGIN
		// 2018/02/07 故障時刻登録　by zy BEGIN
		$j(".floatBadRoom td").slice(0,10).css("visibility","visable");
		// 2018/02/07 故障時刻登録　by zy END
		//2017/03/28 故障登录信息隐藏と显示 by zy END
	//初期化
	} else {
		$j(".badBtn").show();
		$j(".clearBtn").show();
		//2017/03/28 故障登录信息隐藏と显示 by zy BEGIN
		// 2018/02/07 故障時刻登録　by zy BEGIN
		$j(".floatBadRoom td").slice(0,10).css("visibility","visible");
		// 2018/02/07 故障時刻登録　by zy END
		//2017/03/28 故障登录信息隐藏と显示 by zy END
	}
}
//清除现有数据
function removeMsgByDate(tb_date,roomId){
	var isChildFlag = roomId != undefined && roomId != "" && roomId != null;
	//2017/03/28 type切换多删数据bug fix by zy BEGIN
	var selector = ".badroom[date='" + tb_date + "']:visible";
	if ( isChildFlag ) selector = ".badroom[date='" + tb_date + "'][rid='" + roomId + "']:visible";
	//2017/03/28 type切换多删数据bug fix by zy BEGIN
	$j(selector).each(function(){
		$j(this).addClass("badRoomToggleClass");
		//2017/06/09 跨天数据判断追加 by zy BEGIN
		var hadMoreFlag = false;
		//2017/06/09 跨天数据判断追加 by zy END
		if(isChildFlag){
			var par_el = $j(this).closest(".more");
			if(!par_el.hasClass("badRoomToggleClass")){
				//par_el.addClass("badRoomToggleClass");
				//2017/06/09 跨天数据判断追加 by zy BEGIN
				hadMoreFlag = true;
				//2017/06/09 跨天数据判断追加 by zy END
			}
		}
		var roomId = $j(this).attr("rid");
		//2017/06/09 跨天数据判断追加 by zy BEGIN
		RmvBadObj.set(roomId,tb_date,hadMoreFlag);
		//2017/06/09 跨天数据判断追加 by zy END
		//删除内存中的故障数据数据
		//if(badRoomObj[roomId] != undefined) delete badRoomObj[roomId];
	});
	//$j(".badroom[date='" + tb_date + "']").addClass("badRoomToggleClass");
	
	//显示保存按钮
	if(!RmvBadObj.isEmpty){
		if(!$j("div.floatBadRoom").is(":visible")) $j("div.floatBadRoom").slideDown();
	}
	//解除模式下隐藏故障房间(不包括点选的)
	if ($j("td[class*=badRoomClass]:not('.badRoomClass')").length == 0) chgBadRoomType('bad');
	//解除的时候不进行拖拽
	if ($j("td.tdcolcls:not('.disabled')")) $j(".tdcolcls").addClass("disabled");
}
// 2017/03/27 故障部屋一括解除機能対応　by　zy END 
// flag:false 故障添加，true 故障解除
function setBadRoomStatus(that,flag){
	//故障解除
	if(flag){
		var roomId = $j(that).closest("tr").attr("name");
		//添加点击class
		$j(that).toggleClass("hadAssign");
		var curRow = $j("tr[roomid='" + roomId + "']");
		//未点击
		if($j(that).hasClass("hadAssign")){
			curRow.children().addClass("badRoomClass");
			var assignColIdx = curRow.attr("assignedcolidx");
			if(assignColIdx != "" && assignColIdx != null) $j(".warinIcon",$j(that).closest("tr")).show();
			// 2018/02/07 故障時刻登録　by zy BEGIN
			//_BadMap.Bad_Rows[roomId] = true;
			// 2018/02/07 故障時刻登録　by zy END
		//如果已经点击过
		} else {
			// 2018/02/07 故障時刻登録　by zy BEGIN
			/*
			if(_BadMap.Bad_Rows[roomId] != undefined && _BadMap.Bad_Rows[roomId])
				_BadMap.Bad_Rows[roomId] = false;*/
			// 2018/02/07 故障時刻登録　by zy END
			curRow.children().removeClass("badRoomClass");
			$j(".warinIcon",$j(that).closest("tr")).hide();
		}
	//故障添加
	}else{
		//隐藏解除按钮
		chgBadRoomType('rmv');
		var parTd = $j(that).closest("th");
		var parTr = $j(that).closest("tr");
		var idx = parTd.index();
		var endIndex = 0;
		//没有可拖拽的直接退出
		if($j("#right_body_table tr.dragTr").length == 0 ) return;
		//查看按钮包含多少格
		$j("th",parTr).slice(0,idx + 1).each(function(){
			endIndex += kendo.parseInt($j(this).attr("colspan"));
		});
		var beginIndex = endIndex - kendo.parseInt(parTd.attr("colspan"));
		$j(that).toggleClass("hadAssign");
		//var isBadRowHadLeadFlag = false;
		var curDate = $j(that).data("date");
		// 2019/04/30 JINYABUG-1631 bug fix by zy BEGIN
		$j("." + getCurClass(0) + '.dragClass').removeClass(getCurClass(0) + ' dragClass');
		// 2019/04/30 JINYABUG-1631 bug fix by zy END
		//第一次点击，为一列添加故障数据
		if($j(that).hasClass("hadAssign")){
			$j("#right_body_table tr.dragTr").each(function(){
				// if had lead jump by zy BEGIN
				var notAssignStr = $j(this).attr("assignedcolidx");
				var roomId = $j(this).attr("roomid");
				//结尾位置 与slice位置不同
				if (checkInRoom(roomId,beginIndex,endIndex-1)) return true;
				//既存予約skip
				var tdArr = notAssignStr.split(",");
				tdArr = chkLeadInCurRow($j(this),beginIndex,endIndex,tdArr);
				for (var i = beginIndex; i < endIndex ; i++){
					if($j.inArray(i + "",tdArr) >= 0){
						return true;
					}
				}
				// 2018/02/07 故障時刻登録　by zy BEGIN
				//addDateByRoomId(roomId,curDate);
				var curCss = getTdClass('badRoomClass',this);
				if (curCss != "") $j(this).removeClass("curCss"); 
				// 2018/02/07 故障時刻登録　by zy END
				$j(this).children().slice(beginIndex,endIndex).addClass(getCurClass(0));
			});
		} else {
			$j("#right_body_table tr.dragTr").each(function(){
				$j(this).children().slice(beginIndex,endIndex).removeClass(getCurClass(0));
				var roomId = $j(this).attr("roomId");
				// 2018/02/07 故障時刻登録　by zy BEGIN
				// delDateByRoomId(roomId,curDate);
				// 2018/02/07 故障時刻登録　by zy END
			});
			//2017/06/06 过滤当日开始结束是否还存在故障数据 by zy BEGIN
			chkcurDateHadData(beginIndex,endIndex,curDate);
			//2017/06/06 过滤当日开始结束是否还存在故障数据 by zy END
		}
		$j(".badroom[date='" + curDate + "']").each(function(){
			$j(this).removeClass("badRoomToggleClass");
			var badId = $j(this).attr("id");
			if (badId == "" || badId == undefined){
				var p_el = $j(this).closest("div.more");
				badId = p_el.attr("id");
			}
			badId = badId.replace('badRoom_','');
			RmvBadObj.remove(badId);
		});
		changeBadRoomDate();
		/*
		if(isBadRowHadLeadFlag){
			$j(".warinIcon",parTd).show();
		}*/
	}
	if(!$j("div.floatBadRoom").is(":visible")){
		$j("div.floatBadRoom").slideDown();
	}
}
//画面表示のメッセージの日付の設定機能
function changeBadRoomDate(){
	//var rows = $j("tr.headerRow .hadAssign");
	var rows = $j("tr.dragTr:has([class*=badRoomClass])");
	if(rows.length > 0){
		// 清空时不处理
		var max,min; 
		rows.filter(function(){ 
			var badCols = $j("td[class*=badRoomClass]:not('.badRoomClass')",this);
			// 選択故障部屋あり
			if ( badCols.length > 0) {
				var curIndex = badCols.first().attr("cycindex"); 
				var lastIndex = badCols.last().attr("cycindex");
				if (min == undefined || parseInt(min) > parseInt(curIndex)) min = curIndex ; 
				if (max == undefined || parseInt(max) < parseInt(lastIndex)) max = lastIndex ;
			}
		});
		if ( min != undefined && max != undefined) {
			$j("input[id$=roomBegingDate]").val(kendo.toString(getDateByIndex(min),JINYACONNECT.DateFormat));
			// 2018/02/07 故障時刻登録　by zy BEGIN
			$j("input[id$=roomBegingTime]").val(kendo.toString(getDateByIndex(min),'HH:mm'));
			var curDepartTime = getDateByIndex(max);
			// １列の分数単位
    		var oneColLong = parseInt($j('input[id$="hidOneColLong"]').val());
    		curDepartTime = curDepartTime.addMinutes(oneColLong);
    		$j("input[id$=roomEndDate]").val(kendo.toString(curDepartTime,JINYACONNECT.DateFormat));
			$j("input[id$=roomEndTime]").val(kendo.toString(curDepartTime,'HH:mm'));
	 		// 2018/02/07 故障時刻登録　by zy END
			return;
		}
	}
		$j("input[id$=roomBegingDate]").val("");
		$j("input[id$=roomEndDate]").val("");
	/*
	if($j(".badRoomClass").length == 0)
		$j("div.floatBadRoom").slideUp();
	*/
	// 2017/03/27 故障部屋一括解除機能対応　by　zy END 
}
//  2017/02/13 页面自动刷新功能 by wx begin
//浮动故障房间窗口隐藏功能 
// flag : true 页面自动刷新启动,false 不启动
//function floatHide(flag){
function floatHide(flag){
//  2017/02/13 页面自动刷新功能 by wx end
	// 2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN 
	if (pageMode == "badRoomMode") chgBadRoomType();
	// 2017/03/27 故障部屋一括解除機能対応　by　zy END 
	//动画效果向上收回
	$j("div.floatBadRoom").slideUp();
	$j(".badRoomDiv").addClass("badRoomToggleClass")
	$j(".hadAssign").removeClass("hadAssign");
	$j(".warinIcon").hide();
	dragType = "";
//2017/05/05 故障部屋ドルプ機能追加　by zy BEGIN
	// 根据pageMode 判断清除页面上的色块
	clearCurClass();
	pageMode = "";
	$j.unblockUI();
//2017/05/05 故障部屋ドルプ機能追加　by zy END
	$j(".tdcolcls.disabled").removeClass("disabled");
	$j("input[name=windowType]").removeAttr("checked");
	// 2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN 
	$j(".badroom").removeClass("badRoomToggleClass");
	// 2017/03/27 故障部屋一括解除機能対応　by　zy END 
	clearBadData();
	//  2017/02/13 页面自动刷新功能 by wx begin 
	if(flag) startRunning();
	//  2017/02/13 页面自动刷新功能 by wx end
	// 2018/02/22 未割り当て ワィンドウ追加　by　zy　BEGIN
	var win = $j("#noAssignLeadListWindow").data("kendoWindow");
	if (win != undefined) win.open();
	// 2018/02/22 未割り当て ワィンドウ追加　by　zy　END
}
// 清理故障数据缓存
function clearBadData(){
	// 2018/02/07 故障時刻登録　by zy BEGIN
	// 缓存清理
	//_BadMap.Bad_Expect = new Object();
	// 清理临时缓存
	//_BadMap.Bad_Temp_Expect = {};
	// 2018/02/07 故障時刻登録　by zy END
	// 清理除外缓存
	RmvBadObj.clear();
}
// 2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN 
var MAX_SAVE_BADROOM_SIZE = 3000;
// 2017/03/27 故障部屋一括解除機能対応　by　zy END 
function saveBadRoom(that){
	// 2018/02/07 故障時刻登録　by zy BEGIN
	var mapArr = createBadArr();
	/*
	var ExpectMap = _BadMap.Bad_Expect;
//2017/05/05 故障部屋ドルプ機能追加　by zy BEGIN
	if ("Bad_Temp_Expect" in _BadMap) {
		for (var key in _BadMap.Bad_Temp_Expect) {
			if(typeof key == 'string') {
				//如果临时拖拽中也有此房间的数据
				if (key in _BadMap.Bad_Expect) _BadMap.Bad_Expect[key] = $j.extend(_BadMap.Bad_Temp_Expect[key],_BadMap.Bad_Expect[key]);
				else _BadMap.Bad_Expect[key] = _BadMap.Bad_Temp_Expect[key];
			}
		}
		ExpectMap = _BadMap.Bad_Expect; //$j.extend(_BadMap.Bad_Temp_Expect,_BadMap.Bad_Expect);
		_BadMap.Bad_Temp_Expect = {};
	}*/
	// 2018/02/07 故障時刻登録　by zy END
//2017/05/05 故障部屋ドルプ機能追加　by zy END
	var _BadDateLst = new Array();
	var expectStr = '';
	// 2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN 
	var hadBadFlag = mapArr.length > 0;
	// 2017/03/27 故障部屋一括解除機能対応　by　zy END 
	blockUi();
	// 2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN 
	var rmvObj = RmvBadObj.data;
	// 2018/02/07 故障時刻登録　by zy BEGIN
	//var mapArr = new Array();
	// 2018/02/07 故障時刻登録　by zy END
	for (var key in rmvObj) {
		if (typeof key == 'string'){
			var obj = rmvObj[key];
			var dataArr = [];
			var roomId = "";
			// 自动解除
			if ("rid" in obj ) {
				roomId = obj.rid;
				delete obj.rid;
		}
			var bid = "";
			if ("bid" in obj) {
				bid = obj.bid;
				delete obj.bid;
	}
			for (var dateStr in obj) {
				if (typeof dateStr == 'string' && obj[dateStr]){
					dataArr.push(dateStr);
				}
			}
			if (dataArr.length == 0) mapArr.push({rid:roomId,bid:key,dates:dataArr,otp:'exp'});
			else mapArr.push({rid:key,bid:bid,dates:dataArr,otp:'exp'});
		}
	}
	// 2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN 
	var roomStatusName = $j("input[id$=RoomName]").val();
	if(roomStatusName == "" && hadBadFlag) {
		alert("{!$Label.MSG_005_0075}");
		unblockUi();
		return;
	}
	if (mapArr.length > 0 ) saveBadRoomMessage(roomStatusName,mapArr,'2',expectStr,"");
	else {
		//  2017/03/28 页面自动刷新功能 by wx begin
		floatHide(true);
		//  2017/03/28 页面自动刷新功能 by wx end
		unblockUi();
	}
	//saveBadRoomMessage(roomStatusName,_BadDateLst,expectStr,0,"");
	// 2017/03/27 故障部屋一括解除機能対応　by　zy END 
}
//2017/05/05 故障部屋ドルプ機能追加　by zy BEGIN
function getRemoteInfo(expectStr){
	var queryDate = $j("[id$=queryDate]").val(),
		viewMode = $j("select[id$=viewModeSel]").val();
	var remoteInfo = [{
		viewMode:viewMode,
		queryDate:queryDate,
		expectInfo:expectStr
	}];
	return JSON.stringify(remoteInfo);
}
//2017/05/05 故障部屋ドルプ機能追加　by zy END
function saveBadRoomMessage(roomStatusName,curDateLst,expectStr,idx,errorMessage){
	if(curDateLst.length <= idx) return;
	// 2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN 
	//var badDateObj = curDateLst[idx];
	var result = '';
	if (curDateLst.length > 0) {
		var endIdx = idx + MAX_SAVE_BADROOM_SIZE;
		var proLst = curDateLst.slice(idx,endIdx);
		result = JSON.stringify(proLst);
		idx = endIdx;
	}
	// remote超时
	Visualforce.remoting.timeout = 120000; 
	Visualforce.remoting.Manager.invokeAction(
        "{!$RemoteAction.RoomScheduleReport.InsertBadRoomExt}", roomStatusName,result,'2',getRemoteInfo(expectStr), function(result, event){
    // 2017/03/27 故障部屋一括解除機能対応　by　zy END 
        //if(lastFlag) 
        Visualforce.remoting.timeout = 30000; 
        if (event.type == 'exception') {
            //alert();
           errorMessage += event.message;
        }else{
	        if (result.message != "" && result.message != null) {
	       		errorMessage += result.message;
	       	}
		//2017/05/05 故障部屋ドルプ機能追加　by zy BEGIN
	       	if (result.roomArr.length > 0) {
	       		clearBadRooms(result.roomArr);
	       	} 
		//2017/05/05 故障部屋ドルプ機能追加　by zy END
	       	// 2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN 
	       	if(result.infos.length > 0) {
	       		badRoomSetPosition(result.infos);
	       	}
	       	/*
	       	if (result.rmvs.length > 0) refreshBadRoomMessage(result.rmvs);
	       	else refreshBadRoomMessage();
	       	*/
	       	refreshBadRoomMessage();
       	}
       	idx++;
       	if (idx < curDateLst.length){
       		saveBadRoomMessage(roomStatusName,curDateLst,expectStr,idx,errorMessage);
       		//  2017/03/28 页面自动刷新功能 by wx begin
       		floatHide(true);
       		//  2017/03/28 页面自动刷新功能 by wx end
       		unblockUi();
       	} else {
       		if(errorMessage != "" && errorMessage != null) alert(errorMessage);
       		else {
	       		//清除掉已解除的故障数据
	       		$j(".badroom.badRoomToggleClass").remove();
       		}
       		//  2017/03/28 页面自动刷新功能 by wx begin
	       	floatHide(true);
	       	//  2017/03/28 页面自动刷新功能 by wx end
	       	unblockUi();
	       	// 2017/03/27 故障部屋一括解除機能対応　by　zy END 
       	}
    });
}
/*
function getDateLst(DateMap){
	var DateLst = new Array();
	for (var dateStr in DateMap){
		if(typeof(dateStr) == "string"){
			if(DateMap[dateStr]){
				DateLst.push(dateStr);
			}
		}
	}
	return DateLst;
}*/
// 2018/02/07 故障時刻登録　by zy BEGIN
/*
//2017/05/05 故障部屋ドルプ機能追加　by zy BEGIN
function addDateByRoomId(roomId,curDate,tempFlag){
	if (tempFlag) {
		if (_BadMap.Bad_Temp_Expect[roomId] == undefined ) _BadMap.Bad_Temp_Expect[roomId] = new Object();
			_BadMap.Bad_Temp_Expect[roomId][curDate] = true;
	} else {
		if (_BadMap.Bad_Expect[roomId] == undefined ) _BadMap.Bad_Expect[roomId] = new Object();
			_BadMap.Bad_Expect[roomId][curDate] = true;
	}
//2017/05/05 故障部屋ドルプ機能追加　by zy END
}
function delDateByRoomId(roomId,curDate){
	if ("Bad_Temp_Expect" in _BadMap && _BadMap.Bad_Temp_Expect[roomId] != undefined && _BadMap.Bad_Temp_Expect[roomId][curDate] != undefined) {
			delete _BadMap.Bad_Temp_Expect[roomId][curDate];
//2017/05/05 故障部屋ドルプ機能追加　by zy END
	} else if (_BadMap.Bad_Expect[roomId] != undefined && _BadMap.Bad_Expect[roomId][curDate] != undefined){
		delete _BadMap.Bad_Expect[roomId][curDate];
//2017/05/05 故障部屋ドルプ機能追加　by zy BEGIN
	}
}
*/
// 2018/02/07 故障時刻登録　by zy END
//2017/06/06 过滤当日开始结束是否还存在故障数据 by zy BEGIN
function chkcurDateHadData(begin,end,curDate){
	var selectorArr = [];
	//拼接筛选数据
	for (var i = begin ; i < end; i++) {
		var selector = 'td[cycindex=' + i + ']'; 
		selectorArr.push(selector);
	}
	//存在
	if (selectorArr.length > 0 ) {
		var selector = selectorArr.join(',');
		var selectCols = $j(selector,"#right_body_table tr.dragTr").find(curBackClass);
		if (selectCols.length == 0) {
			$j("input:button.badRoomDiv.badBtn[data-date='" + curDate + "']").removeClass("hadAssign");
		}
	}
}
//2017/06/06 过滤当日开始结束是否还存在故障数据 by zy END
// 2016/12/07 タイムテーブル新規後一画面へ遷移 BEGIN by zh
	function gotoBookingFlexApp(strId){
		var gotoBookingFlexAppFlg = {!RoomTypeGotoBookingFlexApp};
		var GotoBookingFlexAppConfirm = {!RoomTypeGotoBookingFlexAppConfirm};
		if(gotoBookingFlexAppFlg) {
			//window.location.href = '/apex/BookingFlexApp?id=' + strId;
			// 2017/02/08 一画面へ新規開く対応 BEGIN
			var _openUrl = '/apex/BookingApp?id=' + strId + '&spcd=' + '{!JSENCODE(branchShopNm)}';
			window.open(_openUrl,"_blank");
			// 2017/02/08 一画面へ新規開く対応 END
		}else{
			if(GotoBookingFlexAppConfirm){
				//一括予約画面へ遷移しますか？
				if(!confirm("{!$Label.MSG_005_0082}")) return;
				//window.location.href = '/apex/BookingFlexApp?id=' + strId;
				// 2017/02/08 一画面へ新規開く対応 BEGIN
				var _openUrl = '/apex/BookingApp?id=' + strId + '&spcd=' + '{!JSENCODE(branchShopNm)}';
				window.open(_openUrl,"_blank");
				// 2017/02/08 一画面へ新規開く対応 END
			}
		}
	}
// 2016/12/07 タイムテーブル新規後一画面へ遷移 END by zh
//  2017/02/13 页面自动刷新功能 by wx begin 
var canRefreshFlag = true;
//  2017/02/13 页面自动刷新功能 by wx end 
// 2016/11/22 故障部屋一括登録機能対応 END
<!-- 2016/11/16 見積明細設定機能対応 BEGIN by zh -->
<!-- 見積もり明細のフラグ  -->

var detailEventFlag = {!isPlanDetailFlag};
/** 書式処理 */
var currency = kendo.culture().numberFormat.currency;
var _CONST_PRICE_ROOM_TYPE = '室料';			// 室料のKeyWord定義する
currency.decimals = JINYACONNECT.NumberPointLen;
currency.symbol = JINYACONNECT.CurrencySybmol;
currency.pattern = ["$-n","$n"];

JINYACONNECT.CUSTOM.checkIfHadRequiredItem = function (){
    	 // CKEDITOR情報は実勢の項目にコピーする
        CKEDITOR.jinya.copyValue($j, "ckeditorClass");
    	var checkFlag = false;
		$j(".repuiredClass").each(function(){
			$this = $j(this);
			if(($this[0].tagName == "INPUT" && $this[0].type != "checkbox") || $this[0].tagName == "SELECT" || $this[0].tagName == "TEXTAREA" ){
				if($j(this).val()  == "") {
					checkFlag = true;
					//return false;
				}
			}else if($this[0].tagName == "SPAN"){
				if ($j(this).text() == ""){
					checkFlag = true;
					//return false;
				}
			}
		});
		if (checkFlag) {
		if(!$j("[id$=inputLeadFormMsg] div.message").is(":visible"))
			$j("#inputFormErrorMsg").show();
			$j("#createLeadPanel div.bd").scrollTop(0);
			return false;
		}else{
			$j("#inputFormErrorMsg").hide();
			return true;
		}
}
function clearBookingItem(){
	// Error Message Panel Clear[Attention: Error Class IDはSF設定依存]
    var showDiv = $j("div.errorM3:visible");
	if (showDiv.length > 0 ) showDiv.hide();
    clearAutoCompletePanel();
    if (detailEventFlag){
	    //$j("#inputFormErrorMsg").hide();
	    $j("tr.tranDetailRow").each(function(){
	    	var $this = $j(this);
	    	var curDiv = $j("div.pointIndex",$this);
			var rowIndex = curDiv.attr("rowindex");
	    	dispExtendImg("hidden", rowIndex);
	    	for (var i = 0; i < JINYACONNECT.CUSTOM.clearItemIdArr.length; i++){
	            clearObj = $j("[id$=':BookEstTable:" + rowIndex + JINYACONNECT.CUSTOM.clearItemIdArr[i] + "']");
	            if (clearObj.is(":checkbox")) {
	                clearObj.removeAttr('checked');
	            } else if (clearObj.is("select")) {
	                clearObj.get(0).selectedIndex = 0;
	            } else if (clearObj.is("span")) {
	                clearObj.text("");
	            } else {
	            	clearObj.get(0).defaultValue = '';
	                clearObj.val("");
	            }
	        }
	    });
	    $j("tr.tranDetailRow").hide();
	    setupCalSumAmountPrice();
	    // 2019/04/15 ベネフィットホテル様より改善要望 by zy BEGIN
	    clearProdWin();
	    // 2019/04/15 ベネフィットホテル様より改善要望 by zy END
    }
    $j(".rowStr").closest("tr.dataRow").remove();
}
JINYACONNECT.CUSTOM.detailBindEvent = function(){
    // Clear Button
    $j("input[id='clearProduct']").unbind("click");
    $j("input[id='clearProduct']").click(function() {
        var groupindex = $j(this).attr("rowindex");
        // 2020/07/30 入湯税の自動入力機能について改善 zyz BEGIN
		// 联动清空处理第一次Plan行对应的入汤税商品
		ACTCUSTOM.PROBATHTAXROWFUN(groupindex, ACTCUSTOM.TPYE.CLEAR);
        // 2020/07/30 入湯税の自動入力機能について改善 zyz END
        // 2019/04/30 増税仮対応 WGCH BEGIN
        var productId = $j("input:hidden[id$=':" + groupindex + ":hidProductId']").val();
        // 2019/04/30 増税仮対応 WGCH END
        dispExtendImg("hidden", groupindex); // 展開imgを非表示にする
        // 2019/04/15 ベネフィットホテル様より改善要望 by zy BEGIN
        // 同じ行クリア
        if(("lastIndex" in window) && window.lastIndex == kendo.parseInt(groupindex)) {
          delete window.productId;
          delete window.lastIndex;
        }
        // 2019/04/15 ベネフィットホテル様より改善要望 by zy END
        for (var i = 0; i < JINYACONNECT.CUSTOM.clearItemIdArr.length; i++){
            clearObj = $j("[id$=':BookEstTable:" + groupindex + JINYACONNECT.CUSTOM.clearItemIdArr[i] + "']");
            if (clearObj.is(":checkbox")) {
                clearObj.removeAttr('checked');
            } else if (clearObj.is("select")) {
                clearObj.get(0).selectedIndex = 0;
            } else if (clearObj.is("span")) {
                clearObj.text("");
            } else {
                clearObj.val("");
            }
        }
        // 2016/11/21 見積明細設定機能対応 点击clear、关键字检索的窗口关闭  BEGIN by zh
        clearAutoCompletePanel();
        // 2016/11/21 見積明細設定機能対応  点击clear、关键字检索的窗口关闭  END by zh
        setupCalSumAmountPrice();
        // 2019/04/30 増税仮対応 WGCH BEGIN
        // 增税商品-自动设定
        autoSetTaxIncProductFun(CUST_CLICKMODE_CLEAR, productId);
        // 2019/04/30 増税仮対応 WGCH END
    });
    $j("img[name='productPopup']").unbind("click");
    $j("img[name='productPopup']").click(function() {
        var groupindex = $j(this).attr("rowindex");
        // 2019/04/15 ベネフィットホテル様より改善要望 by zy BEGIN
        // 2019/09/19 Security Check BY zyz BEGIN
        var bookingEstFlag = "{!JSENCODE(TEXT($Setup.CommDefine__c.ps__ProductSearchLayoutKbn__c))}";
        // 2019/09/19 Security Check BY zyz END
        if (bookingEstFlag == "1") return openProductWin(groupindex);
        // 2019/04/15 ベネフィットホテル様より改善要望 by zy END
        // 引き渡し値を設定して、選択画面を開く
        ctrlNm = $j("input:text[id$=':" + groupindex + ":productName']").get(0);
        ctrlId = $j("input:hidden[id$=':" + groupindex + ":hidProductId']").get(0);
        ctrlHidNm = $j("input:hidden[id$=':" + groupindex + ":hidProductNm']").get(0);
        ctrlPriceId = $j("[id$=':" + groupindex + ":price']").get(0);
        ctrlOrderNumId = $j("[id$=':" + groupindex + ":orderNums']").get(0);
        ctrlTaxRate = $j("span[id$=':" + groupindex + ":taxRateType']").get(0);
        ctrlHidTaxRate = $j("input:hidden[id$=':" + groupindex + ":hidTaxRateType']").get(0);
        ctrlServiceTaxRate = $j("span[id$=':" + groupindex + ":serviceRate']").get(0);
        ctrlHidServiceTaxRate = $j("input:hidden[id$=':" + groupindex + ":hidServiceRate']").get(0);
        ctrlSpecialTax = $j("span[id$=':" + groupindex + ":specialTax']").get(0);
        ctrlHidSpecialTax = $j("input:hidden[id$=':" + groupindex + ":hidSpecialTax']").get(0);
        ctrlHidActionType = $j("input:hidden[id$=':" + groupindex + ":hidActionType']").get(0);
        ctrlHidPaymentType = $j("input:hidden[id$=':" + groupindex + ":hidPaymentType']").get(0);
        ctrlHidPlanDetail = $j("input:hidden[id$=':" + groupindex + ":hidPlandetail']").get(0);
        ctrlHidHadRoomFlag = $j("input:hidden[id$=':" + groupindex + ":hidHadRoomFlag']").get(0);
        
        // 2018/07/27 宿泊税計算 WGCH BEGIN
        ctrlHidPDetailId = $j("input:hidden[id$=':" + groupindex + ":hidPDetailId']").get(0);
        // 2018/07/27 宿泊税計算 WGCH END
        // 2019/07/30 軽減税率機能対応 WGCH BEGIN
        ctrlHidPlanBrkInfoId = $j("input:hidden[id$=':" + groupindex + ":hidPlanBrkInfoId']").get(0);
        // 2019/07/30 軽減税率機能対応 WGCH END
        // 2020/07/30 入湯税の自動入力機能について改善 zyz BEGIN
        hidBTaxAccMstItem = $j("input:hidden[id$=':" + groupindex + ":hidBTaxAccMstItem']").get(0);
        // 2020/07/30 入湯税の自動入力機能について改善 zyz END
        var openUrl = "/apex/ProductSearch?idx=" + groupindex + "&par=true";
        // 呼び出し順番とPOPUP画面の設定順番は必ず一致するが必要
        objs = new Array(ctrlNm, ctrlId, ctrlHidNm, ctrlPriceId, ctrlOrderNumId,
            ctrlTaxRate, ctrlHidTaxRate, ctrlServiceTaxRate, ctrlHidServiceTaxRate, ctrlSpecialTax, ctrlHidSpecialTax, ctrlHidActionType,ctrlHidPaymentType,ctrlHidPlanDetail,ctrlHidHadRoomFlag);
        // 2018/07/27 宿泊税計算 WGCH BEGIN
        for(var i = 0; i < 1; i++) objs.push($j('<input/>').get(0));
        objs.push(ctrlHidPDetailId);
        // 2018/07/27 宿泊税計算 WGCH END
        // 2019/07/30 軽減税率機能対応 WGCH BEGIN
        objs.push(ctrlHidPlanBrkInfoId);
        // 2019/07/30 軽減税率機能対応 WGCH END
        // 2020/07/30 入湯税の自動入力機能について改善 zyz BEGIN
        // 占位_エステなど商品_エステなど商品的JSON就可以满足此需求_减少页面Size
        objs.push(hidBTaxAccMstItem);
        // 2020/07/30 入湯税の自動入力機能について改善 zyz END
        commUtils.popup(openUrl, "SearchProductInfo", objs, null, null, popupCallback(groupindex));
    });
    // 商品金額関連項目監視設定
    $j("input[id$=':orderNums']").unbind("change");
	$j("input[id$=':orderNums']").on('change', function(e){
		$this =$j(this);
		if (kendo.parseFloat($this.val()) == null) $this.val("0");
		var rowIndex = $this.closest('tr').children().first().children().first().attr("rowindex");
		// 2020/07/30 入湯税の自動入力機能について改善 zyz BEGIN
		// 处理设定第一次Plan行对应的入汤税商品
		ACTCUSTOM.PROBATHTAXROWFUN(rowIndex, ACTCUSTOM.TPYE.NUMS);
        // 2020/07/30 入湯税の自動入力機能について改善 zyz END
		setupCalAmoutPrice(rowIndex, false);	
	});
    // 会計商品AutoComplete[1桁以上]
    $j("input[id$=':productName']").autocomplete({
        minLength: 1,
        source: function (request, response) {
            Visualforce.remoting.Manager.invokeAction(
                "{!$RemoteAction.RoomScheduleReport.getArrayProductDetailItemInfo}", request.term, function(result, event){
                if (event.type == 'exception') {
                    alert(event.message);
                } else {
                    response($j.map(result, function (item) {
                    	item.id = item.productId;
                    	item.value = item.prodcutName + "("+item.prodcutCode+")";
                    	return item;
                    }));
                } // End else
            });
        },
        focus: function (event, ui) {
	    	var groupindex = $j(this).attr("rowIndex");
    		ui.item.rowIndex = groupindex;
			// 2019/04/30 増税仮対応 WGCH BEGIN
    		// autoGetProductInfo(ui.item);
    		autoGetProductInfo(ui.item, CUST_AUTOGETPRODUCTMODE_RETURN);
    		// 2019/04/30 増税仮対応 WGCH END
            return false;
        },
        select: function (event, ui) {
	    	var groupindex = $j(this).attr("rowIndex");
    		ui.item.rowIndex = groupindex;
            autoGetProductInfo(ui.item);
            // 2016/11/16 行追加機能対応 BEGIN by zh
            event.stopImmediatePropagation();
            // 2016/11/16 行追加機能対応 END by zh
            // 2019/11/15 最近利用している商品一覧機能を提供する BY zyz BEGIN
            if ("accMasterFun" in window) accMasterFun(ui.item.id);
            // 2019/11/15 最近利用している商品一覧機能を提供する BY zyz END
            // 2020/07/30 入湯税の自動入力機能について改善 zyz BEGIN
            // 触发追加入汤税行
            ACTCUSTOM.BATHTAXAUTOSETFUN(groupindex, ui.item.bTaxAccMstItem);
            // 2020/07/30 入湯税の自動入力機能について改善 zyz END
            return false;
        },
    });
    $j("input[id$=':price']").unbind("change");
    $j("input[id$=':price']").on("change",function(){
    	$this =$j(this);
		if (kendo.parseFloat($this.val()) == null) $this.val("0");
		var rowIndex = $this.closest('tr').children().first().children().first().attr("rowindex");
		setupCalAmoutPrice(rowIndex, false);	
    });
    // 2016/11/16 行追加機能対応 BEGIN by zh
    // 2017/01/12 统一行追加功能改修 by zy BEGIN
    lastBookingDetail();
    //$j("input[id$=':price'],input[id$=':orderNums'],input[id$=':productName']").unbind("blur");
    //$j("input[id$=':price'],input[id$=':orderNums'],input[id$=':productName']").on("blur",function(){
    	/*
    	// 入力できる行目がなかった場合、自動追加する
    	var _productsArr = $j("input[id$=':productName']");
    	// ISBALNK存在の場合、
    	var blankLineNoExist = true;
    	for (i=(_productsArr.length-1);i>=0;i--) {
    		if (_productsArr[i].value == "") {
    			blankLineNoExist = false;
    			break;
    		}
    	}
    	if (blankLineNoExist) {
    		checkAddTranItem();
    	}*/
    	//_checkDetailFullInputFun();
    //});
    // 2017/01/12 统一行追加功能改修 by zy END
    // 2016/11/16 行追加機能対応 END by zh
    // Drop Acton
	$j("[id$=BookEstTable]").kendoDraggable({
		//2017/01/18 鼠标选中 行追加失效功能添加 by zy BEGIN
		//filter:'.pointIndex',
		filter:'.pointIndex:not(.disabled)',
		//2017/01/18 鼠标选中 行追加失效功能添加 by zy END
		hint: function(e) {
			dragLeadElement = $j(e).parents("tr.tranDetailRow");
			var cloneELment = dragLeadElement.clone();
			return cloneELment;
		},
		dragstart: draggableOnDragStart,
		dragend: draggableOnDragEnd
	});
	$j("[id$=BookEstTable] tbody tr.tranDetailRow").kendoDropTarget({
		drop: itemdroptargetOnDrop
	});
	$j("tr.tranDetailRow").each(function(){
		var $this = $j(this);
		var price = $this.find("input[id$=price]").val();
		if (price != ""){
			var curRowIdx = $j("input[id$=clearProduct]",$this).attr("rowindex");
			setupCalAmoutPrice(curRowIdx, false);
		}
	});
	switchPriceStatus();
}
// ポップ商品選択後の自動処理
function popupCallback(groupindex) {
	return function () {
		// 2018/07/27 宿泊税計算 WGCH BEGIN
		planItemPriceMap.set(getPlanKeyFun(groupindex), JSON.parse( $j("input[id$='" + groupindex + ":hidPDetailId']").val() ) );
		// 2018/07/27 宿泊税計算 WGCH END
		// 2019/07/30 軽減税率機能対応 WGCH BEGIN
		var pdProductItem = JSON.parse( $j("input[id$='" + groupindex + ":hidPlanBrkInfoId']").val() );
		if(!commUtils.isEmpty(pdProductItem)) _planItemMap.set(getPlanKeyFun(groupindex), pdProductItem);
		// 2019/07/30 軽減税率機能対応 WGCH END
		showProduInfoToView(groupindex);
		// 2016/11/16 行追加機能対応 BEGIN by zh
		// 2017/01/12 统一行追加功能改修 by zy BEGIN
		//_checkDetailFullInputFun();
		_checkDetailFullInputFun(groupindex);
		// 2017/01/12 统一行追加功能改修 by zy END
		// 2016/11/16 行追加機能対応 END by zh
		// 2020/07/30 入湯税の自動入力機能について改善 zyz BEGIN
		if(ACTCUSTOM.OBJ.ISBATHTAXSETFLG){
			var hidBTaxAccMstItem = $j("input:hidden[id$=':" + groupindex + ":hidBTaxAccMstItem']").val();
			if(hidBTaxAccMstItem && hidBTaxAccMstItem != ""){
				var result = JSON.parse(hidBTaxAccMstItem);
				// 入湯税の自動入力
				ACTCUSTOM.BATHTAXAUTOSETFUN(groupindex, result.bTaxAccMstItem);
			}
		}
		// 2020/07/30 入湯税の自動入力機能について改善 zyz END
	}
}
function popupChildCallback(groupIndex) {
	return function() {
		_autoGetSetupSyncInfo(groupIndex)
		// 2018/07/27 宿泊税計算 WGCH BEGIN
		setupCalAmoutPrice(groupIndex, false);
		// 2018/07/27 宿泊税計算 WGCH END
	}
}
// 2019/04/30 増税仮対応 WGCH BEGIN
// function showProduInfoToView(groupindex) {
function showProduInfoToView(groupindex, mode) {
// 2019/04/30 増税仮対応 WGCH END
	// プラン設定の切り替え
	var actType = $j("input:hidden[id$=':" + groupindex + ":hidActionType']").val();
   	if(actType == "{!ACTTYPE_PLAN}"){
       	dispExtendImg("visible", groupindex);
       	// 2016/11/03 BEGIN
       	/*var hidRoomFlag = $j("input[id$=':" + groupindex + ":hidHadRoomFlag'").val();
		if (hidRoomFlag  == "true" ) {
			var roomPrice = $j("#hidCurRackRatePrice").val(); 
			var detailPrice = $j("input[id$=':"+ groupindex + ":price']").val();
			if (roomPrice){
				//ラックレート　判断
				var summartPrice = commUtils.mathNumAdd(roomPrice,detailPrice);
				$j("input[id$=':"+ groupindex + ":price']").val(summartPrice);
			}
		}*/
		// 2016/11/03 END
	} else{ 
       	dispExtendImg("hidden", groupindex);
   	}
	// 元の設定情報をクリアを行う
	// 2020/04/30 複数のプランとそれぞれのプランの人数を選択し機能対応 WGCH BEGIN
	if(!orderNumsFlg) 
		$j("input:hidden[id$=':" + groupindex + ":hidSyncInfo']").val("");
	// 2020/04/30 複数のプランとそれぞれのプランの人数を選択し機能対応 WGCH END
   	
    // 宿泊税は０の場合、空白に設定を行う
    //2016/10/26 設定エラー　BEGIN
    /*var specialTax = $j("input:text[id$=':" + groupindex + ":specialTax']").val();
    if (1 * specialTax == 0) $j("input:text[id$=':" + groupindex + ":specialTax']").val("");
    var curDiv = $j("table[id$=BookEstTable] tr.tranDetailRow").eq(groupindex).find("div.pointIndex");
	var rowIndex = curDiv.attr("rowindex");
	setupCalAmoutPrice(rowIndex, true);	*/
	var specialTax = $j("input[id$=':" + groupindex + ":hidSpecialTax']").val();
    if (1 * specialTax == 0) $j("span[id$=':" + groupindex + ":specialTax']").text("0");
	// 2019/04/30 増税仮対応 WGCH BEGIN
    // setupCalAmoutPrice(groupindex, true);	
    setupCalAmoutPrice(groupindex, true, mode);
    // 2019/04/30 増税仮対応 WGCH END
	//2016/10/26 設定エラー　END
    // ステータス切替
    switchPriceStatus();
}
function itemdroptargetOnDrop(e) {
	$j(e.dropTarget).before($j(dragLeadElement));
}
// 見積書順位調整JS
function draggableOnDragStart(e) {
	$j(dragLeadElement).hide();
	//  2017/02/13 页面自动刷新功能 by wx begin
	stopRunning();
	//  2017/02/13 页面自动刷新功能 by wx end
	var imgFun = $j(dragLeadElement).find('img[id^=showDetailEvent]');        
	if(imgFun.attr("openStatus")=="true"){
	    showDetailFun(imgFun);
	}
}
function draggableOnDragEnd(e) {
	var draggable = $j('table').data("kendoDraggable");
	$j(dragLeadElement).show();
	// 2016/10/27 BEGIN
    //refreshOrder();
    refreshOrder(false);
    // 2016/10/27 END
    //2017/01/16 行追加共通化　by　zy BEGIN
	setTimeout(function(){
		$j(".lastBlurRow").unbind("blur");
		$j(".lastBlurRow").removeClass("lastBlurRow");
		lastBookingDetail();
	},300);
	//2017/01/16 行追加共通化　by　zy END
}
function refreshOrder(isComputeBlankFlag){
	var rowIndex = 0;
	// 2016/10/26 BEGIN
	var nowProdArr = new Array();
	$j("[id$=BookEstTable] tbody tr.tranDetailRow").each(function(){
	if(isComputeBlankFlag){
			if($j(this).find('[id$=hidProductId]').val() !=''){
				$j(this).find('[id$=hidRowNo]').val(rowIndex);
				rowIndex++;
			}else 
				nowProdArr.push(this);
	}else {
		//if($j(this).find('[id$=productName]').val() !=''){
			$j(this).find('[id$=hidRowNo]').val(rowIndex);
			rowIndex++;
		}
	// 2016/10/26 END
	});
	if(isComputeBlankFlag && nowProdArr.length > 0){
		for (var i = 0; i < nowProdArr.length;i++) {
			$j(nowProdArr[i]).find('[id$=hidRowNo]').val(rowIndex);
			rowIndex++;
		}
	}
}
// 最新商品情報を取得する
// 2019/04/30 増税仮対応 WGCH BEGIN
// function autoGetProductInfo(result) {
function autoGetProductInfo(result, mode) {
// 2019/04/30 増税仮対応 WGCH END
	// 存在の商品情報は画面へ反映する
	var groupindex = result.rowIndex;
	// 2016/11/16 サービス料計算 BEGIN by zh
	//var taxValLabel = (　result.tax == "" ? "0%" : result.tax + "%");
	var taxRate = kendo.parseFloat(result.tax);
    if (taxRate == null) taxRate = 0;
    var taxValLabel = (kendo.toString(commUtils.mathNumDiv(taxRate, 100), "{!JSENCODE(TaxNumberFormat)}"));
    // 2016/11/16 サービス料計算 END by zh
	var serviceLabel = (　result.serviceRate == "" ? "0%" : result.serviceRate + "%");
	   
	$j("input:text[id$=':" + groupindex + ":productName']").val(result.prodcutName);
	$j("input:hidden[id$=':" + groupindex + ":hidProductId']").val(result.productId);
	$j("input:hidden[id$=':" + groupindex + ":hidProductNm']").val(result.prodcutName);
	$j("input:text[id$=':" + groupindex + ":price']").val(result.unitPrice);
	$j("input:text[id$=':" + groupindex + ":orderNums']").val(1);
	$j("span[id$=':" + groupindex + ":taxRateType']").text(taxValLabel);
	$j("input:hidden[id$=':" + groupindex + ":hidTaxRateType']").val(result.tax);
	$j("span[id$=':" + groupindex + ":serviceRate']").text(serviceLabel);
	$j("input:hidden[id$=':" + groupindex + ":hidServiceRate']").val(result.serviceRate);
	$j("span[id$=':" + groupindex + ":specialTax']").text(result.specialTax);
	$j("input:hidden[id$=':" + groupindex + ":hidSpecialTax']").val(result.specialTax);
	$j("input:hidden[id$=':" + groupindex + ":hidActionType']").val(result.actionType);
	// 2015/10/16 プラン明細課税、非課税混在合計金額計算対応 BEGIN
    $j("input:hidden[id$=':" + groupindex + ":hidPlandetail']").val(result.unitPriceExcTax);
    // 2015/10/16 プラン明細課税、非課税混在合計金額計算対応 END
    // 2016/08/30 BEGIN
    $j("input:hidden[id$=':" + groupindex + ":hidHadRoomFlag']").val(result.hadRoomFlag);
    // 2016/08/30 END
    // 2018/07/27 宿泊税計算 WGCH BEGIN
    planItemPriceMap.set(getPlanKeyFun(groupindex), result.planItemPriceLst);
    // 2018/07/27 宿泊税計算 WGCH END
    // 2019/07/30 軽減税率機能対応 WGCH BEGIN
    // 支付种别
    $j("input:hidden[id$=':" + groupindex + ":hidPaymentType']").val(result.paymentType);
    // 如果有PLAN明细加到MAP里
    if(!commUtils.isEmpty(result.pdProductItem)) _planItemMap.set(getPlanKeyFun(groupindex), result.pdProductItem);
	// 2019/07/30 軽減税率機能対応 WGCH END
	// 2020/04/30 複数のプランとそれぞれのプランの人数を選択し機能対応 WGCH BEGIN
    if(orderNumsFlg){
      $j("input:hidden[id$=':" + groupindex + ":hidSyncInfo']").val(result.planSyncInf);
      //　数量設定
      var prodNums = result.prodNum || 0;
	  $j("input:text[id$=':" + groupindex + ":orderNums']").val(prodNums);
	  $j("input:hidden[id$=':" + groupindex + ":hidBasePlanNum']").val(prodNums);
	  $j("input:hidden[id$=':" + groupindex + ":hidEstGuestType']").val(result.guestType || "");
   	} else $j("input:hidden[id$=':" + groupindex + ":hidBasePlanNum']").val(0);
   	// 2020/04/30 複数のプランとそれぞれのプランの人数を選択し機能対応 WGCH END
	// 2019/04/30 増税仮対応 WGCH BEGIN
    // showProduInfoToView(groupindex);
    showProduInfoToView(groupindex, mode);
    // 2019/04/30 増税仮対応 WGCH END
}
function _autoGetSetupSyncInfo(groupIndex) {
	var planSyncInf = "";
	var sumVal = 0;
	var isHaveShituliaoFlag = false;
	//$("[class='"+ childcls +"']").each(function(idx){
	$j("input[id^='"+groupIndex+"_prodName_']").each(function(idx){
		var rowidx = $j(this).attr("rowidx");
		var hidFieldId = groupIndex + "_sobjId_" + rowidx;
		var hidProdId = groupIndex + "_prodid_" + rowidx;
		var hidProdNm = groupIndex + "_prodName_" + rowidx;
		var unitPrice = groupIndex + "_prodPrice_" + rowidx;
		//sumVal += 1 * unitPrice;
		//sumVal = commUtils.mathNumAdd(sumVal,unitPrice);
		var unitPrice = $j("#"+unitPrice).val().replaceAll(",","");
		if(unitPrice == "" || !unitPrice || isNaN(parseFloat(unitPrice)) ) unitPrice = 0;
		// 見積明細ID/プラン明細ID ： 単価 ： 会計商品ID ： 会計商品名
		planSyncInf += $j("#"+hidFieldId).val() + ':' + unitPrice + ':' + $j("#"+hidProdId).val()+ ':' + $j("#"+hidProdNm).val() +';';
		sumVal = commUtils.mathNumAdd(sumVal,unitPrice);
		
		var actionType = $j("#"+groupIndex+"_workHidActType_" + rowidx).val();
		$j(this).closest("tr").find("td>input.showDetailEvent" + groupIndex + "_child").attr("data-actiontype",actionType);
		// 2018/07/27 宿泊税計算 WGCH BEGIN
		planItemTypeMap.set((groupIndex + "_t_" + $j("#"+hidFieldId).val()), actionType);
		// 2018/07/27 宿泊税計算 WGCH END
		if(actionType == _CONST_PRICE_ROOM_TYPE) 
			isHaveShituliaoFlag = true;
		
	});
	var summaryPriceId = groupIndex + "_summary";
	var summaryPriceInputFlag = $j("#"+summaryPriceId).is('input');
      	// 合計値でプランの単価に反映する
    if(isHaveShituliaoFlag){
   		if(summaryPriceInputFlag){
   			$j("#"+summaryPriceId).val(sumVal);
   		}else{
   			$j("#"+summaryPriceId).replaceWith('<input type="text" id="' + summaryPriceId + '" style="text-align:right;" value="' + commUtils.numFormat(sumVal) + '" />');
			$j("#"+summaryPriceId).unbind("keydown");
			$j("#"+summaryPriceId).on('keydown', function(e){
            	$j(this).data("olddata",$j(this).val().replaceAll(",",""));
            });
            // 2018/07/27 宿泊税計算 WGCH BEGIN
            $j("#"+summaryPriceId).focus(function(){
            	$j(this).data("olddata",$j(this).val().replaceAll(",",""));
            });
            // 2018/07/27 宿泊税計算 WGCH END
			$j("#"+summaryPriceId).unbind("keyup");
			$j("#"+summaryPriceId).keyup(function(e){
				//if((e.keyCode<48 || e.keyCode>57) && e.keyCode!=46 && e.keyCode != 8 ) return;
				var price = $j(this).val().replaceAll(",","");
				if(price == $j(this).data("olddata")) return;
				setTimeout(function(){
					__reComputeShitulyou(groupIndex,summaryPriceId);
					setupCalAmoutPrice(groupIndex,false);
				},300);
				
			});
     	} 
    }else if(summaryPriceInputFlag) 
     		$j("#"+summaryPriceId).replaceWith('<span id="' + summaryPriceId + '" style="float:right;margin-right: 3px">' + commUtils.numFormat(sumVal) +'</span>');
    else $j("#"+summaryPriceId).text(commUtils.numFormat(sumVal));
	
	$j("input[id$=':" + groupIndex + ":hidSyncInfo']").val(planSyncInf);
	return planSyncInf;
}
function __reComputeShitulyou(groupIndex,summaryPriceId){
	var otherPrice = 0;
	var ExcTaxPrice = 0;
 	var childcls = "showDetailEvent" + groupIndex + "_child";
 	var planSyncInf = "";
 	//var hadShitulyouElement = $j("input[id^='" + groupIndex + "_workHidActType_'][value='" + _CONST_PRICE_ROOM_TYPE + "']:eq(0)");
 	// 合計値計算を行う
	$j("[class='"+ childcls +"']:not([data-actiontype = '" + _CONST_PRICE_ROOM_TYPE + "'])").each(function(idx){
		var rowidx = $j(this).attr("rowindex");
		var hidFieldId = groupIndex + "_sobjId_" + rowidx;
		var hidProdId = groupIndex + "_prodid_" + rowidx;
		var hidProdNm = groupIndex + "_prodName_" + rowidx;
		
		var unitPrice = $j(this).val().replaceAll(",","");
		if(unitPrice == "" || !unitPrice || isNaN(parseFloat(unitPrice)) ) unitPrice = 0;
		// 見積明細ID/プラン明細ID ： 単価 ： 会計商品ID ： 会計商品名
		planSyncInf += $j("#"+hidFieldId).val() + ':' + unitPrice + ':' + $j("#"+hidProdId).val()+ ':' + $j("#"+hidProdNm).val() +';';
		otherPrice = commUtils.mathNumAdd(otherPrice,unitPrice);
      	// 2015/10/16 プラン明細課税、非課税混在合計金額計算対応 BEGIN
      	if($j(this).attr("taxflg") != 1) {
      		ExcTaxPrice = commUtils.mathNumAdd(ExcTaxPrice,unitPrice);
      	}
	}); 
	var firstShituLyoElement;
	$j("[class='"+ childcls +"'][data-actiontype = '" + _CONST_PRICE_ROOM_TYPE + "']").each(function(idx){
		var unitPrice = $j(this).val().replaceAll(",","");
		if(unitPrice == "" || !unitPrice || isNaN(parseFloat(unitPrice)) ) unitPrice = 0;
		if(!firstShituLyoElement){ 
			firstShituLyoElement = $j(this);
			return true;
		}
		var rowidx = $j(this).attr("rowindex");
		var hidFieldId = groupIndex + "_sobjId_" + rowidx;
		var hidProdId = groupIndex + "_prodid_" + rowidx;
		var hidProdNm = groupIndex + "_prodName_" + rowidx;
		var unitPrice = $j(this).val().replaceAll(",","");
		// 見積明細ID/プラン明細ID ： 単価 ： 会計商品ID ： 会計商品名
		planSyncInf += $j("#"+hidFieldId).val() + ':' + unitPrice + ':' + $j("#"+hidProdId).val()+ ':' + $j("#"+hidProdNm).val() +';';
		otherPrice = commUtils.mathNumAdd(otherPrice,unitPrice);
      	// 2015/10/16 プラン明細課税、非課税混在合計金額計算対応 BEGIN
      	if($j(this).attr("taxflg") != 1) {
      		ExcTaxPrice = commUtils.mathNumAdd(ExcTaxPrice,unitPrice);
      	}
	}); 
  	var summaryElement = $j("#" + summaryPriceId);
  	var summaryPrice = summaryElement.val().replaceAll(",","");
  	if(summaryPrice == "" || !summaryPrice || isNaN(parseFloat(summaryPrice)) ) summaryPrice = 0;
 	var changePrice = commUtils.mathNumSub(parseFloat(summaryPrice), otherPrice); 
 	firstShituLyoElement.val(changePrice);
 	var hidFieldId = groupIndex + "_" + firstShituLyoElement.attr("rowIndex");
 	ExcTaxPrice = commUtils.mathNumAdd(ExcTaxPrice,changePrice);
 	$j("input:hidden[id$=':" + parentRowIndex + ":hidPlandetail']").val(ExcTaxPrice);
 	
 	var rowidx = firstShituLyoElement.attr("rowindex");
	var hidFieldId = groupIndex + "_sobjId_" + rowidx;
	var hidProdId = groupIndex + "_prodid_" + rowidx;
	var hidProdNm = groupIndex + "_prodName_" + rowidx;
	// 見積明細ID/プラン明細ID ： 単価 ： 会計商品ID ： 会計商品名
	planSyncInf += $j("#"+hidFieldId).val() + ':' + changePrice + ':' + $j("#"+hidProdId).val()+ ':' + $j("#"+hidProdNm).val() +';';
	$j("input[id$=':" + groupIndex + ":hidSyncInfo']").val(planSyncInf);
 	
 	var parentRowIndex = firstShituLyoElement.attr("parentindex");
 	$j("input[id$=':"+ parentRowIndex + ":price']").val(summaryPrice);
}
// プランの明細情報リスト格納する
// 2019/04/30 増税仮対応 WGCH BEGIN
// function autoGetChildProductInfo(result) {
function autoGetChildProductInfo(result, mode) {
// 2019/04/30 増税仮対応 WGCH END
//console.debug(result);
	var rowIndex = result.rowIndex;  
	var groupIndex = result.groupIndex;
    $j("#"+groupIndex+"_prodName_"+rowIndex).val(result.prodcutName);
    $j("#"+groupIndex+"_prodid_" + rowIndex).val(result.productId);
    $j("#"+groupIndex+"_workHidActType_" + rowIndex).val(result.actionType);
    // 2019/07/30 軽減税率機能対応 WGCH BEGIN
    // 2019/10/15 PLAN明细换商品修正対応 WGCH BEGIN
    // 消费税
    // $j("#"+groupIndex+"_workHidTaxRate_"+rowIndex).val(result.tax);
    // サビース料
    // $j("#"+groupIndex+"_workHidServiceTaxRate_"+rowIndex).val(result.serviceRate);
    // 2019/10/15 PLAN明细换商品修正対応 WGCH END
    // 2019/07/30 軽減税率機能対応 WGCH END
    _autoGetSetupSyncInfo(groupIndex);
    //$("input[id$=':" + parentRowIndex + ":hidSyncInfo']").val(planSyncInf);
    // 2018/07/27 宿泊税計算 WGCH BEGIN
    // 2019/04/30 増税仮対応 WGCH BEGIN
    // setupCalAmoutPrice(groupIndex,false);
    setupCalAmoutPrice(groupIndex,false,mode);
    // 2019/04/30 増税仮対応 WGCH END
    // 2018/07/27 宿泊税計算 WGCH END
}

var _CONST_ADDITEM_TEMPLATE = 
		"<tr ><td colspan='$colspan$'>" +
			"<input type='hidden' id='$groupIndex$_workHidItem' />"+
       	  	"<table style='width:60%;' class='list' border='0' cellpadding='0' cellspacing='0'>" +
       	     	"<tHead class='rich-table-thead'>" +
       	        	"<tr class='headerRow' nowrap='nowrap'>" +
			//商品名
       	              "<th class='headerRow' nowrap='nowrap' style='width:70%'>{!$Label.MSG_011_0048}</th>" +
       	            //単価
       	              "<th class='headerRow' nowrap='nowrap' style='width:30%'>{!$Label.MSG_011_0049}</th></tr>" +

       	         "</tHead>" +
       	         "<tBody>" +
       	         "$tBodyContent$" +
	    		 "</tBody>" +
	    		 //合計
	    		 "<tFoot><tr><td style='text-align: right;'><span style='margin-right:3px'>{!$Label.MSG_011_0071}：</span></td><td style='text-align:right;'><span id='$summaryPriceId$' style='float:right;margin-right: 3px'></span></td></tr>"+
		    		 "</tFoot> " +
	    	"</table></td>" +
	    "</tr>";
var _CONST_ADDITEM_DTEAIL_IMG_TEMPLATE = 
	    "<img onmouseover='this.className = \"lookupIconOn\";this.className = \"lookupIconOn\";'" +
    		"onmouseout='this.className = \"lookupIcon\";this.className = \"lookupIcon\";'" +
    		"onfocus='this.className = \"lookupIconOn\";' onblur='this.className = \"lookupIcon\";'" +
    		"class='lookupIcon' src='/s.gif' style='cursor: pointer;'" +
    		"name='childrenProductPopup' onclick='javascript:openChildProdutWin(\"$groupIndex$\",\"$rowidx$\")'/>";
var _CONST_ADDITEM_DTEAIL_TEMPLATE = 
	    	"<tr><td style='background-color: #FFEBCD;'>" + 
	        "<input type='text'style='width:180px' value='$productName$' id='$groupIndex$_prodName_$rowidx$' rowidx='$rowidx$' parentIndex='$groupIndex$' />" +
	        _CONST_ADDITEM_DTEAIL_IMG_TEMPLATE +
	        // 2019/07/30 軽減税率機能対応 WGCH BEGIN
	        "<input type='hidden' id='$groupIndex$_workHidTaxRate_$rowidx$' value='$taxRate$' />" +
	        "<input type='hidden' id='$groupIndex$_workHidServiceTaxRate_$rowidx$' value='$serviceTaxRate$' />" +
	        // 2019/07/30 軽減税率機能対応 WGCH END
	        "<input type='hidden' value='$productId$' id='$groupIndex$_prodid_$rowidx$' />" +
	        "<input type='hidden' value='$sobjId$' id='$groupIndex$_sobjId_$rowidx$' />"+
	        "<input type='hidden' id='$groupIndex$_workHidActType_$rowidx$' value='$actType$' />" +
	        "<input type='hidden' value='$planDetail$' id='$groupIndex$_hidPlandetail_$rowidx$' /></td>"+
	        "<td style='background-color: #FFEBCD;text-align: right;'>" +
	        //"<input type='text' style='text-align:right;' id='$groupIndex$_price_$rowidx$' class='$childclsItemClass$' value='$memoryPrice$' rowidx='$rowidx$' /></td></tr>";
			"<input type='text' style='text-align:right;' parentIndex='$groupIndex$' id='$groupIndex$_prodPrice_$rowidx$' rowIndex='$rowidx$' class='$childclsItemClass$' value='$memoryPrice$' taxflg='&prodtaxflg&' data-actiontype='$actType$'/></td></tr>";
	    		
function showDetailFun(obj) {
    if ($j(obj).attr("openStatus") == "false") {
		$j(obj).attr("openStatus","true");
		//折りたたむ
		$j(obj).attr("title","{!$Label.MSG_011_0066}");
		$j(obj).attr("src","{!URLFOR($Resource.AppImages, 'extend/jianhao.png')}");
		// Javasceipr Remotingでデータを取得する
		var groupIndex = $j(obj).attr("rowIndex");
		var ctrlId = $j("input:hidden[id$=':" + groupIndex + ":hidProductId']").get(0);
		var childcls = ($j(obj).attr("id")) + "_child";
		// 2020/04/30 複数のプランとそれぞれのプランの人数を選択し機能対応 WGCH BEGIN
		$j("input:hidden[id$=':" + groupIndex + ":hidBasePlanNum']").val(0);
		// 2020/04/30 複数のプランとそれぞれのプランの人数を選択し機能対応 WGCH END
		hashMap.Clear();
		var syncInfo = $j("input[id$=':" + groupIndex + ":hidSyncInfo']").val();
		if (syncInfo != "" && syncInfo.length > 1) {
			syncInfo = syncInfo.substring(0, syncInfo.length-1);
			var synInfoArr = syncInfo.split(";");
			for (i = 0; i < synInfoArr.length; i++){
				var setupInfArr = synInfoArr[i].split(":");
				var sobjId = setupInfArr[0];
				var mapKey1 = groupIndex + "_p_" + sobjId;		// 設定明細の価額
				var mapKey2 = groupIndex + "_i_" + sobjId;		// 設定明細の会計商品ID
				var mapKey3 = groupIndex + "_n_" + sobjId;		// 設定明細の会計商品名
				hashMap.Put(mapKey1, setupInfArr[1]);
				if (setupInfArr.length > 2) hashMap.Put(mapKey2, setupInfArr[2]); // 会計商品ID
				if (setupInfArr.length > 3) hashMap.Put(mapKey3, setupInfArr[3]); // 会計商品名
			}
		}
		blockUi();
		Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.RoomScheduleReport.getAccountMstLstByPlan}',
           	ctrlId.value,
            function(result, event){
		unblockUi();
                if (event.status) {
                    if(result== null || result.length == 0){
			//データ詳細がありません。
                        $j(obj).parents("tr.tranDetailRow").after("<tr><td colspan='10' style='margin-right: 200px;' >{!$Label.MSG_011_0067}</td></tr>");
                    }else{
                    	// プラン明細設定情報を格納用
                    	var planSyncInf = '';
                    	
						var tabStrHead = _CONST_ADDITEM_TEMPLATE.replaceAll("$colspan$", 10)
																.replaceAll("$groupIndex$",groupIndex);
	                	var tabStrBody = "";

	                	for (var i=0; i<result.length; i++) {
	                		// メモーに既存場合、メモーの設定情報から、単価を設定する
	                		//var mapKey = groupIndex + "_" + result[i].sobjId;
	                		
							var mapKey1 = groupIndex + "_p_" + result[i].sobjId;		// 設定明細の価額
							var mapKey2 = groupIndex + "_i_" + result[i].sobjId;		// 設定明細の会計商品ID
							var mapKey3 = groupIndex + "_n_" + result[i].sobjId;		// 設定明細の会計商品名
							
	                		var memoryPrice = hashMap.Contains(mapKey1) ? hashMap.Get(mapKey1) : result[i].prodPrice;
	                		var productId = hashMap.Contains(mapKey2) ? hashMap.Get(mapKey2) : result[i].prodId;
	                		var productNm = hashMap.Contains(mapKey3) ? hashMap.Get(mapKey3) : result[i].prodName;
	                		
	                		// 2018/07/27 宿泊税計算 WGCH BEGIN
	                		var mapKey4 = groupIndex + "_t_" + result[i].sobjId;		// 設定明細の会計商品Type
	                		var actionType = planItemTypeMap.get(mapKey4) ? planItemTypeMap.get(mapKey4) : result[i].actionType;
	                		// 2018/07/27 宿泊税計算 WGCH END
	                		
							var prodtaxflg = '';
	                		if(result[i].prodTaxRate !=null && result[i].prodTaxRate !='') prodtaxflg = '1';
		        			tabStrBody += _CONST_ADDITEM_DTEAIL_TEMPLATE.replaceAll("$rowidx$",i)
     											.replaceAll("$groupIndex$",groupIndex)
     											.replaceAll("$productName$",commUtils.escapeQuotes(productNm))
     											.replaceAll("$productId$",productId)
     											.replaceAll("$sobjId$",result[i].sobjId)
     											.replaceAll("$childclsItemClass$",childcls)
     											// 2018/07/27 宿泊税計算 WGCH BEGIN
     											//.replaceAll("$actType$",result[i].actionType)
     											.replaceAll("$actType$",actionType)
     											// 2018/07/27 宿泊税計算 WGCH END
     											// 2019/07/30 軽減税率機能対応 WGCH BEGIN
     											.replaceAll("$taxRate$",result[i].prodTaxRate)
     											.replaceAll("$serviceTaxRate$",result[i].prodServiceRate)
     											// 2019/07/30 軽減税率機能対応 WGCH END
     											.replaceAll("$memoryPrice$",memoryPrice)
     											.replaceAll("&prodtaxflg&",prodtaxflg)
     											.replaceAll("&planDetail&",result[i].planDetail);
							
	                		//planSyncInf += result[i].sobjId + ':' + memoryPrice.replaceAll(",","") + ':' + result[i].prodId + ':' + result[i].prodName + ';';
	                	}
	                	//$(obj).parent().parent().parent().after(tabStrHead + tabStrBody + tabStrFoot);
	                	var summaryPriceId = groupIndex + "_summary";
						$j(obj).parents("tr.tranDetailRow").after(tabStrHead.replaceAll("$tBodyContent$",tabStrBody).replace("$summaryPriceId$",summaryPriceId));
	                	// 連携用情報、HIDDEN項目に格納する
	                	//$("input[id$=':" + groupIndex + ":hidSyncInfo']").val(planSyncInf);

	                	// 単価合計値計算して、プランの単価へ反映する
	                	// Event Binding
	                	//old value input
	                	$j("[class='"+ childcls +"']").unbind("keydown");
	                	$j("[class='"+ childcls +"']").on('keydown', function(e){
	                		$j(this).data("olddata",$j(this).val().replaceAll(",",""));
	                	});
	                	// 2018/07/27 宿泊税計算 WGCH BEGIN
	                	$j("[class='"+ childcls +"']").focus(function(){
	                		$j(this).data("olddata",$j(this).val().replaceAll(",",""));
	                	});
	                	// 2018/07/27 宿泊税計算 WGCH END
	                	$j("[class='"+ childcls +"']").unbind("keyup");
	                	$j("[class='"+ childcls +"']").on('keyup', function(e){
	                		var price = $j(this).val().replaceAll(",","");
	                		var oldValue = $j(this).data("olddata");
	                		if(oldValue == price)return;
	                		var parentRowIndex = $j(this).attr("parentIndex");
							setTimeout(function(){
								__reComputePrice(childcls,parentRowIndex);
								setupCalAmoutPrice(groupIndex,false);
							},500);
	                	});
	                	$j("[class='"+ childcls +"']").unbind("blur");
	                	$j("[class='"+ childcls +"']").on('blur', function(e){
			        		var price = $j(this).val().replaceAll(",","");
	                		if (!$j.isNumeric(price)) price = "0";
	                		$j(this).val(commUtils.numFormat(price));
			        	});
						
						// 入力の商品コードで、商品自動設定を行う
						// 作成した項目は自動商品コードのAutoComplete機能を追加する
						$j("input[id^='"+groupIndex+"_prodName_']").autocomplete({
					        minLength: 1,
					        source: function (request, response) {
					            Visualforce.remoting.Manager.invokeAction(
					                "{!$RemoteAction.RoomScheduleReport.getArrayProductItemInfoNoPlan}", request.term, function(result, event){
					                if (event.type == 'exception') {
					                    alert(event.message);
					                } else {
					                    // 2018/07/27 宿泊税計算 WGCH BEGIN
					                    // response($.map(result, function (item) {
					                    response($j.map(result, function (item) {
					                    // 2018/07/27 宿泊税計算 WGCH END
					                    	item.id = item.productId;
					                    	item.value = item.prodcutName + "("+item.prodcutCode+")";
					                    	return item;
					                    }));
					                } // End else
					            });
					        },
					        focus: function (event, ui) {
					        	var rowidx = $j(this).attr("rowidx");
			    				ui.item.rowIndex = rowidx;
			    				ui.item.groupIndex = $j(this).attr("parentIndex");
								// 2019/04/30 増税仮対応 WGCH BEGIN
			    				// autoGetChildProductInfo(ui.item);
			    				autoGetChildProductInfo(ui.item, CUST_AUTOGETPRODUCTMODE_RETURN);
			    				// 2019/04/30 増税仮対応 WGCH END
					            return false;
					        },
					        select: function (event, ui) {
						    	var rowidx = $j(this).attr("rowidx");
			    				ui.item.rowIndex = rowidx;
			    				ui.item.groupIndex = $j(this).attr("parentIndex");
					            autoGetChildProductInfo(ui.item);
					            // 2019/11/15 最近利用している商品一覧機能を提供する BY zyz BEGIN
					            if ("accMasterFun" in window) accMasterFun(ui.item.id);
					            // 2019/11/15 最近利用している商品一覧機能を提供する BY zyz END
					            return false;
					        },
					    });
					   _autoGetSetupSyncInfo(groupIndex);
					   __reComputePrice(childcls,groupIndex);
					   setupCalAmoutPrice(groupIndex, true);
						// $("input[id^='"+groupIndex+"_prodName_']").autocomplete END

                    }

                } else if (event.type === 'exception') {
				//データ詳細がありません。
                    $j(obj).parents("tr.tranDetailRow").after("<tr><td colspan='10' style='margin-left: 200px;' >{!$Label.MSG_011_0067}</td></tr>");
                } else {
                //データ詳細がありません。
                    $j(obj).parents("tr.tranDetailRow").after("<tr><td colspan='10' style='margin-left: 200px;' >{!$Label.MSG_011_0067}</td></tr>");

                }
            },
            {escape: true}
        );
		//$(obj).parent().parent().parent().after("<tr><td colspan='10' style='margin-left: 200px;' ><table><tr><td>444</td><td>555</td><td>666</td></tr></table> </td></tr> ");
    } else {
        $j(obj).attr("src","{!URLFOR($Resource.AppImages, 'extend/jiahao.png')}");
        $j(obj).attr("openStatus","false");
	//展開
        $j(obj).attr("title","{!$Label.MSG_011_0064}");

        $j(obj).parents("tr.tranDetailRow").next().remove();
    }
}
function __reComputePrice(childcls,parentRowIndex){
	var sumVal = 0;
 	// 2015/10/16 プラン明細課税、非課税混在合計金額計算対応 BEGIN
    var ExcTaxPrice = 0;
   	// 2015/10/16 プラン明細課税、非課税混在合計金額計算対応 END
 	var planSyncInf = '';
  	// 合計値計算を行う
  	$j("[class='"+ childcls +"']").each(function(idx){
 		var unitPrice = $j(this).val().replaceAll(",","");
 		if(unitPrice == "" || !unitPrice || isNaN(parseFloat(unitPrice)) ) unitPrice = 0;
 		sumVal = commUtils.mathNumAdd(sumVal,unitPrice);
 		// 2015/10/16 プラン明細課税、非課税混在合計金額計算対応 BEGIN
      	if($j(this).attr("taxflg") != 1) {
      		ExcTaxPrice = commUtils.mathNumAdd(ExcTaxPrice,unitPrice);
      	}
 	});
 	$j("input:hidden[id$=':" + parentRowIndex + ":hidPlandetail']").val(ExcTaxPrice);
 	
  	// 同期情報を取得する
  	_autoGetSetupSyncInfo(parentRowIndex);
  	// 合計値でプランの単価に反映する
  	$j("input[id$=':"+ parentRowIndex + ":price']").val(sumVal);
}
function openChildProdutWin(groupIndex,rowIndex) {
    var dumyField = $j("#"+groupIndex+"_workHidItem").get(0);
    // 引き渡し値を設定して、選択画面を開く
    ctrlNm = $j("#"+groupIndex+"_prodName_"+rowIndex).get(0);
    ctrlId = $j("#"+groupIndex+"_prodid_" + rowIndex).get(0);
    ctrlHidNm = dumyField;
    ctrlPriceId = dumyField;
    ctrlOrderNumId = dumyField;
    ctrlTaxRate = dumyField;
    ctrlHidTaxRate = dumyField;
    ctrlServiceTaxRate = dumyField;
    ctrlHidServiceTaxRate = dumyField;
    // 2019/07/30 軽減税率機能対応 WGCH BEGIN
    if(isReducedTaxFlg){
    	var taxRateField = $j("#"+groupIndex+"_workHidTaxRate_"+rowIndex).get(0);
    	ctrlTaxRate = taxRateField;
    	ctrlHidTaxRate = taxRateField;
    	var serviceTaxRateField = $j("#"+groupIndex+"_workHidServiceTaxRate_"+rowIndex).get(0);
    	ctrlServiceTaxRate = serviceTaxRateField;
    	ctrlHidServiceTaxRate = serviceTaxRateField;
    }
    // 2019/07/30 軽減税率機能対応 WGCH END
    ctrlSpecialTax = dumyField;
    ctrlHidSpecialTax = dumyField;
    ctrlHidActionType = $j("#"+groupIndex+"_workHidActType_" + rowIndex).get(0);
    //ctrlHidPlanDetail = $j("#"+groupIndex+"_workHidActType_" + rowIndex).get(0);//ctrlHidPlanDetail
    var openUrl = "/apex/ProductSearch?np=1";
    // 呼び出し順番とPOPUP画面の設定順番は必ず一致するが必要
	objs = new Array(ctrlNm, ctrlId, ctrlHidNm, ctrlPriceId, ctrlOrderNumId,
		ctrlTaxRate, ctrlHidTaxRate, ctrlServiceTaxRate, ctrlHidServiceTaxRate, ctrlSpecialTax, ctrlHidSpecialTax, ctrlHidActionType);
	commUtils.popup(openUrl, "SearchProductInfo", objs, null, null, popupChildCallback(groupIndex));
}

// 会計明細の単価入力制御
function switchPriceStatus() {
	$j("[id^='showDetailEvent']").each(function(idx) {
		var rowIndex = $j(this).attr("rowIndex");
		if ($j(this).css("visibility") == "hidden") {
			$j("input[id$=':" + rowIndex + ":price']").attr('readonly', false);
			$j("input[id$=':" + rowIndex + ":price']").css('background-color', '');
		} else {
			$j("input[id$=':" + rowIndex + ":price']").attr('readonly', true);
			$j("input[id$=':" + rowIndex + ":price']").css('background-color', '#DCDCDC');
		}
	});
}
// 展開imgの表示・非表示を制御する
function dispExtendImg(flg, groupindex){ // flg : visible | hidden
	var idx = groupindex;
	var $obj = $j("#showDetailEvent" + idx);
    $obj.attr("style", "cursor: pointer;display: true; width: 18px; height: 18px; visibility:" + flg);
    if($obj.attr("openStatus") == "true"){
        $obj.attr("src","{!URLFOR($Resource.AppImages, 'extend/jiahao.png')}")
        	.attr("openStatus","false")
        	//展開
        	.attr("title","{!$Label.MSG_011_0064}");
        $obj.parents("tr.tranDetailRow").next().remove();
    }
    switchPriceStatus();
}

function checkAddTranItem(){
	// 必須項目チェック
	// 2017/01/12 统一行追加功能改修 by zy BEGIN
	if (!JINYACONNECT.CUSTOM.checkIfHadRequiredItem()){
		//第一个项目选中
		$j("input:not(:hidden),select,textarea","[id$=createPageBlock] .dataCol.first:first").focus();
		return false;
	}
	// 2017/01/12 统一行追加功能改修 by zy END
	// 関連のEVENTBINDをUNBIND
	$j("input[id$=':price'],input[id$=':orderNums'],input[id$=':productName']").unbind("blur");
	// 行目新規追加
	addTranItemFun();
}
// 明細情報行情報変更すると
// 明細金額リアルタイム計算
// 2019/04/30 増税仮対応 WGCH BEGIN
// function setupCalAmoutPrice(rowIndex, isFromCallBackFun) {
function setupCalAmoutPrice(rowIndex, isFromCallBackFun, mode) {
// 2019/04/30 増税仮対応 WGCH END

	// 2019/07/30 軽減税率機能対応 WGCH BEGIN
	updatePlanItemMapFun(rowIndex);
	// 2019/07/30 軽減税率機能対応 WGCH END
	// 指定の会計明細情報がCOPON存在する場合
    // 処理種別は「前受金・支払」の場合、減算を行う
    // 税込み、税抜き金額
    // 単価
    // 2015/10/16 プラン明細課税、非課税混在合計金額計算対応 BEGIN
    var hidPlandetail = $j("input:hidden[id$=':" + rowIndex + ":hidPlandetail']").val();
    // 2015/10/16 プラン明細課税、非課税混在合計金額計算対応 END
    var unitPrice = kendo.parseFloat($j("input:text[id$=':" + rowIndex + ":price']").val());
    if (unitPrice == null) unitPrice = 0;
    // 消費税率
    var tax = kendo.parseFloat($j("input:hidden[id$=':" + rowIndex + ":hidTaxRateType']").val());
    if (tax == null) tax = 0;
    // サビース料率
    var service = kendo.parseFloat($j("input:hidden[id$=':" + rowIndex + ":hidServiceRate']").val());
    if (service == null) service = 0;
    // 数量
    var nums = kendo.parseFloat($j("input:text[id$=':" + rowIndex + ":orderNums']").val());
    if (nums == null) nums = 0;
    // 特別税
    var numSepcTax = kendo.parseFloat($j("input[id$=':" + rowIndex + ":hidSpecialTax']").val());
    if (numSepcTax == null) numSepcTax = 0;
    // 単価定義区分
    var unitPriceKbn = $j("input:hidden[id$=':" + rowIndex + ":hidUnitPriceKbn']").val();
    // 関連金額を計算する
    // 2015/10/16 プラン明細課税、非課税混在合計金額計算対応 BEGIN
    var amountIncTax;
    var amountExcTax;
    if(hidPlandetail > 0 ) {
    	var unitPriceIncTax = commUtils.mathNumSub(unitPrice, hidPlandetail);
    	var res = JINYACONNECT.PRODUCT.PROCESS(unitPriceIncTax, nums, tax, service, unitPriceKbn);
    	var resPriceIncTax = res.priceIncTax;
    	var resPriceExcTax = res.priceExcTax;
    	var resExc = JINYACONNECT.PRODUCT.PROCESS(hidPlandetail, nums, 0, service, unitPriceKbn);
		amountIncTax = commUtils.mathNumAdd(resPriceIncTax , resExc.priceIncTax );
		amountIncTax = commUtils.mathNumAdd(amountIncTax, numSepcTax);
		amountExcTax = resPriceExcTax + resExc.priceExcTax;
      	// 2019/07/30 軽減税率機能対応 WGCH BEGIN
      	if(isReducedTaxFlg){
  			// 获取最新的数据集合
    		var resInfo = getResInfoFun(rowIndex, res);
    		// 重置RES
    		res = resInfo.res;
    		// 重置合計金額
    		amountIncTax = res.priceIncTax;
    		// 重置合計金額(税抜)
    		amountExcTax = res.priceExcTax;
    		// 重置特别税
    		numSepcTax = resInfo.numSepcTax;
    		// 重置合計金額
    		amountIncTax = commUtils.mathNumAdd(amountIncTax, numSepcTax);
    	}
    	// 2019/07/30 軽減税率機能対応 WGCH END
    }else {
    	var res = JINYACONNECT.PRODUCT.PROCESS(unitPrice, nums, tax, service, unitPriceKbn);
    	// 2019/07/30 軽減税率機能対応 WGCH BEGIN
    	if(isReducedTaxFlg){
    		// 获取最新的数据集合
    		var resInfo = getResInfoFun(rowIndex, res, unitPrice, nums, tax, service, numSepcTax, unitPriceKbn);
    		// 重置RES
    		res = resInfo.res;
    		// 重置特别税
    		numSepcTax = resInfo.numSepcTax;
    	}
    	// 2019/07/30 軽減税率機能対応 WGCH END
		// 合計金額計算を行う
		amountIncTax = commUtils.mathNumAdd(res.priceIncTax , numSepcTax);
		amountExcTax = res.priceExcTax;
    }
    // 2015/10/16 プラン明細課税、非課税混在合計金額計算対応 END
	// 支払情報の場合、単価は自動残りの請求金額で設定を行う
	var actionType = $j("input:hidden[id$=':" + rowIndex + ":hidActionType']").val()		// 商品処理種別
	if (actionType == "{!JSENCODE(ACTTYPE_AR)}" || actionType == "{!JSENCODE(ACTTYPE_PAY)}") {
		// 支払種別は「COPON】の場合、クーポン利用の返金「manasCoponFlg」を選べる場合、支払金額はマイナス計算を行う
		// 支払情報は０の場合、元の支払金額+残り金額で自動設定を行う
		// 残りの請求金額から設定する
		if (amountIncTax == 0 && isFromCallBackFun) {
			// 残りの請求金額から設定する
			var reqAmount = $j("#reqAmountBlock").text();
			reqAmount = reqAmount.replace(kendo.getCulture().numberFormat.currency.symbol,"");
			var payAmount = kendo.parseFloat(reqAmount);
			// 該当メデイアに支払金額が存在する場合、自動設定を行わない
			var orgPayAmount = kendo.parseFloat($j("span[id$=':" + rowIndex + ":amoutPriceIncTax']").text());
			// 2015/11/03 BugFix BEGIN
			var payType = $j("input:hidden[id$=':" + rowIndex + ":hidPaymentType']").val();
			// 2015/11/03 BugFix END
			// 未請求金額はマナスの場合、現在の金額はそのまま
			if (payAmount <= 0) {
	    		if(!isRefundItem(payType))
					payAmount = orgPayAmount;
				else
					payAmount = Math.abs(payAmount);
			} else {
				// 未支払金額が存在する場合、元の支払金額は０の場合、自動全額を支払
				// 既に金額が存在する場合、そのまま
				if (orgPayAmount != null && orgPayAmount > 0) {
					payAmount = orgPayAmount;
				}else if(isRefundItem(payType)){
					payAmount = orgPayAmount;
				}
			}
			var _loctotalPayed = payAmount;
			if (_loctotalPayed == null) _loctotalPayed = 0;
			$j("input:text[id$=':" + rowIndex + ":price']").val(_loctotalPayed);
			$j("input:text[id$=':" + rowIndex + ":orderNums']").val("1");
			amountIncTax = amountExcTax = _loctotalPayed;
		}
	}

    // 2018/07/27 宿泊税計算 WGCH BEGIN
    // 2019/07/30 軽減税率機能対応 WGCH BEGIN
    if(!isReducedTaxFlg){
	    if(actionType == _CONST_PRICE_ROOM_TYPE && hotelTaxDefineInfoData[thisRoomSpcd] != undefined){
	    	var res = JINYACONNECT.PRODUCT.PROCESS(unitPrice, nums, tax, service, unitPriceKbn);
	    	var newNumSepcTax = commUtils.mathNumMulti(commUtils.getHotelTaxFun(res.unitPriceIncServiceExcTax, hotelTaxDefineInfoData[thisRoomSpcd]), nums);
	    	$j("input[id$=':" + rowIndex + ":hidSpecialTax']").val(newNumSepcTax);
	    	$j("span[id$=':" + rowIndex + ":specialTax']").text(newNumSepcTax);
	    	amountIncTax = commUtils.mathNumAdd(commUtils.mathNumSub(amountIncTax, numSepcTax), newNumSepcTax);
	    } else if(actionType == "{!ACTTYPE_PLAN}" && hotelTaxDefineInfoData[thisRoomSpcd] != undefined){
	    	var planItemPriceLst = [], newNumSepcTax = 0;
	    	// 判断plan是否展开过
	    	var _PlanBrkDn = $j("td>input.showDetailEvent" + rowIndex + "_child");
	    	if(_PlanBrkDn.length == 0){ // Plan未展开的情况
	    		if(planItemPriceMap.get(getPlanKeyFun(rowIndex))) planItemPriceLst = planItemPriceMap.get(getPlanKeyFun(rowIndex));
	    		planItemPriceLst = planItemPriceLst ? planItemPriceLst : [];
	    		for(var i = 0; i < planItemPriceLst.length; i++){
	    			var res = JINYACONNECT.PRODUCT.PROCESS(planItemPriceLst[i] * 1, 1, tax, service, unitPriceKbn);
	    			newNumSepcTax = commUtils.mathNumAdd(newNumSepcTax, commUtils.mathNumMulti(commUtils.getHotelTaxFun(res.unitPriceIncServiceExcTax, hotelTaxDefineInfoData[thisRoomSpcd]), nums));
	    		}
	    	} else { // Plan展开的情况
	     		var childcls = "showDetailEvent" + rowIndex + "_child";
	     		$j("[class='"+ childcls +"'][data-actiontype = '" + _CONST_PRICE_ROOM_TYPE + "']").each(function(){
	    			var price = $j(this).val().replaceAll(",","");
	    			if(price == "" || !price || isNaN(parseFloat(price)) ) price = 0;
	    			planItemPriceLst.push(price);
	    			var res = JINYACONNECT.PRODUCT.PROCESS(price, 1, tax, service, unitPriceKbn)
	    			newNumSepcTax = commUtils.mathNumAdd(newNumSepcTax, commUtils.mathNumMulti(commUtils.getHotelTaxFun(res.unitPriceIncServiceExcTax, hotelTaxDefineInfoData[thisRoomSpcd]), nums));
	    		});
	    		planItemPriceMap.set(getPlanKeyFun(rowIndex), planItemPriceLst);
	    	}
	    	$j("input[id$=':" + rowIndex + ":hidSpecialTax']").val(newNumSepcTax);
	    	$j("span[id$=':" + rowIndex + ":specialTax']").text(newNumSepcTax);
	    	amountIncTax = commUtils.mathNumAdd(commUtils.mathNumSub(amountIncTax, numSepcTax), newNumSepcTax);
	    }
	}
	// 2019/07/30 軽減税率機能対応 WGCH END
    // 2018/07/27 宿泊税計算 WGCH END
 	// 請求書に非表示制御フラグ
 	
    $j("span[id$=':" + rowIndex + ":amoutPriceIncTax']").text(kendo.toString(amountIncTax, "c"));	// 金額（税込み）
    $j("input[id$=':" + rowIndex + ":hidAmoutPriceIncTax']").val(amountIncTax);	// 金額（税込み） 
    $j("span[id$=':" + rowIndex + ":amoutPriceExcTax']").text(kendo.toString(amountExcTax, "c"));	// 金額（税抜き） 
    $j("input[id$=':" + rowIndex + ":hidAmoutPriceExcTax']").val(amountExcTax);	// 金額（税抜き） 
    // 合計金額を計算を行う
    // 関連金額計算を行う
    //if(!false)
    setupCalSumAmountPrice();
    // 2019/04/30 増税仮対応 WGCH BEGIN
    // 增税商品-自动设定
    if(mode != CUST_AUTOGETPRODUCTMODE_RETURN && tax > 0){
    	autoSetTaxIncProductFun();
    }
    // 2019/04/30 増税仮対応 WGCH END
}
// 明細情報から請求金額と利用金額自動計算を行う
function setupCalSumAmountPrice() {
    // 画面明細から総金額利用金額と請求金額を計算を行う
    var totalUsed = 0;		// 利用金額
    var totalPayed = 0;		// 支払金額
    
     // 値引きの支払情報格納行
    var discountPayArr = new Array();
    // Coponの支払情報格納行
    var coponPayArr = new Array();	
    // 普通の支払情報
    var normalPayArr = new Array();
    // 全て有効な利用金額を集計を行う
    //$("input[id$=':hidAmoutPriceIncTax']").each(function() {
    var hidAmountPriceArr = $j("input:hidden[id$=':hidAmoutPriceIncTax']");
    var hidActionTypeArr =  $j("input:hidden[id$=':hidActionType']");
    var hidPaymentTypeArr = $j("input:hidden[id$=':hidPaymentType']");
    var hidAmountPriceExcTaxArr = $j("input[id$='hidAmoutPriceExcTax']");	
	var totalAmountExcTax = 0;
    for (i = 0; i < hidAmountPriceArr.length; i++) {
    	//$this = $(this);
    	$this = $j(hidAmountPriceArr[i]);
    	var _locRowIndex = $this.attr("rowIndex");
    	// 該当行目の計算MARK
	    var actionType = hidActionTypeArr[i].value;
	    // 支払情報
	    if (actionType == "{!JSENCODE(ACTTYPE_AR)}" || actionType == "{!JSENCODE(ACTTYPE_PAY)}") {
	    	//totalPayed = commUtils.mathNumAdd(totalPayed, $this.val());
	    	// 商品処理種別は「支払」の場合
	    	if (actionType == "{!JSENCODE(ACTTYPE_PAY)}") {
	    		var payType = hidPaymentTypeArr[i].value;
	    		
	    		var payMediaLabel = getPayMeidaLabel(payType);
	    		if (payMediaLabel == "{!JSENCODE(MEDIA_TYPE_DISCOUNT)}") {
	    			discountPayArr.push($this);
	    		} else if (payMediaLabel == "{!JSENCODE(MEDIA_TYPE_COPON)}") {
					coponPayArr.push($this);
	    		} else {
	    			// 値引き、クーポン支払情報以外の場合
	    			normalPayArr.push($this);
	    		}
	    	} else {
	    		// 前受付金の場合
	    		normalPayArr.push($this);
	    	}
	    }
	    // 利用情報
	    else {
    		totalAmountExcTax = commUtils.mathNumAdd(totalAmountExcTax, hidAmountPriceExcTaxArr.eq(i).val());
    		totalUsed = commUtils.mathNumAdd(totalUsed, $this.val());
	    }
    }
    $j("#totalAmountExcTax").val(totalAmountExcTax);
    // 利用総金額
    var remaindPayMoney = totalUsed;
//console.debug('remaindPayMoney:::' + remaindPayMoney);
    // 値引き支払情報存在する場合
    $j.each(discountPayArr, function(i) {     
    	// 支払金額残り場合
    	if (remaindPayMoney > 0) {
			//console.debug(.val());
			var $this = discountPayArr[i];
			var _locRowIndex = $this.attr("rowIndex");
			// 預かり金額
			var recivePrice = $this.val();
			// 該当行値引き金額は全体支払
			if (remaindPayMoney >= recivePrice) {
				totalPayed = commUtils.mathNumAdd(totalPayed, recivePrice);
				// 預かり金額：値引き金額、支払金額：値引き金額、お釣り金額：０円（値引き返金なし）
				//setPaymentInfo(_locRowIndex, recivePrice, recivePrice, 0);
			} 
			// 値引き金額は利用金額により、大きくの場合、返金なし
			else {
				totalPayed = commUtils.mathNumAdd(totalPayed, remaindPayMoney);
				// 預かり金額：値引き金額、支払金額：残り利用金額、お釣り金額：０円（値引き返金なし）
				//setPaymentInfo(_locRowIndex, recivePrice, remaindPayMoney, 0);
			}
			// 残り未支払金額再計算を行う
			remaindPayMoney = commUtils.mathNumSub(remaindPayMoney, recivePrice);
			// 値引き超える金額は返金しない設定
			if (remaindPayMoney < 0) remaindPayMoney = 0;
//console.debug('discountPayArr:::' + remaindPayMoney);
		}
	});   
	if (coponPayArr.length > 0) {
		var coponManasFlg = $j("input[id$=':manasCoponFlg']").prop("checked");
		$j.each(coponPayArr, function(i) {     
			var $this = coponPayArr[i];
			var _locRowIndex = $this.attr("rowIndex");
			// 預かり金額
			var recivePrice = $this.val();
			// 預かり金額は未支払い金額は超える場合、お釣り存在場合
			if (remaindPayMoney < recivePrice) {
				var locRemaindPay = remaindPayMoney < 0 ? 0 : remaindPayMoney; 
				recivePrice = coponManasFlg ? recivePrice : locRemaindPay;
			}
			totalPayed = commUtils.mathNumAdd(totalPayed, recivePrice);
			remaindPayMoney = commUtils.mathNumSub(remaindPayMoney, recivePrice);
		});
	}
    $j.each(normalPayArr, function(i) {    
		var $this = normalPayArr[i];
		var _locRowIndex = $this.attr("rowIndex");
		// 預かり金額
		var recivePrice = $this.val();
		// 2015/06/25 返金の場合、入力の金額は減算を行う
		var paytype = $j("input:hidden[id$=':" + _locRowIndex +":hidPaymentType']").val();
		if (isRefundItem(paytype) && recivePrice > 0) recivePrice = -recivePrice;
		
		totalPayed = commUtils.mathNumAdd(totalPayed, recivePrice);
		// 残り未支払金額計算
		remaindPayMoney = commUtils.mathNumSub(remaindPayMoney, recivePrice);
	}); 
    // 該当金額から計算を行う
    $j("#usedAmountBlock").text(kendo.toString(totalUsed, "c"));
    // 2015/12/24 入金確認自動チェック制御機能の追加 BEGIN
    var requestMoney = commUtils.mathNumSub(totalUsed, totalPayed);
    $j("#reqAmountBlock").text(kendo.toString(requestMoney, "c"));// 請求金額
}


<!--支払種別から支払メディア種別取得 -->
function getPayMeidaLabel(payType) {
	// 支払メデイア関連情報を取得する
	var _paymentCovnertMap = JSON.parse("{!JSENCODE(payTypeConvertJson)}");
	// 支払種別ー支払メディアへ変換用オブジェクト
	if (_paymentCovnertMap.hasOwnProperty(payType)) {
		return _paymentCovnertMap[payType];
	} else {
		return "";
	}
}

<!--　該当支払情報は返金するがどうかチェック -->
function isRefundItem(paytype) {
	// 返金比較用キー
	var _refundKeyArr = JSON.parse("{!JSENCODE(refundItemString)}");
	return (paytype.length > 0 && _refundKeyArr.indexOf(paytype) >= 0);
}
// -------------------
// 利用金額、お釣り金額設定
// rowIdx:明細行数
// reciveAmount:預かり金額
// usedAmount:利用金額
// -------------------
function setPaymentInfo (rowIdx, reciveAmount, usedAmount, surplus) {
	// 預かり金額
	// 利用金額
	$j("input:hidden[id$=':" + rowIdx + ":hidUsedAmount']").val(usedAmount);
	// お釣り金額
	$j("input:hidden[id$=':" + rowIdx + ":hidChangeAmout']").val(surplus);
}	

// 2016/11/16 行追加機能対応 BEGIN by zh 
// 2017/01/12 统一行追加功能改修 by zy BEGIN
function _checkDetailFullInputFun(rowindex) {
   	/*
   	// 入力できる行目がなかった場合、自動追加する
   	var _productsArr = $j("input[id$=':productName']");
   	// ISBALNK存在の場合、
   	var blankLineNoExist = true;
   	for (i=(_productsArr.length-1);i>=0;i--) {
   		if (_productsArr[i].value == "") {
   			blankLineNoExist = false;
   			break;
   		}
   	}
   	if (blankLineNoExist) {
   		checkAddTranItem();
   	}
   	*/
   	$j("input[id$='" + rowindex + ":productName']").blur();
}
// 2017/01/12 统一行追加功能改修 by zy END
// 見積明細の最後行目の項目をフォックスする
function _gotoLastDetailRow() {
	// 2017/01/12 统一行追加功能改修 by zy BEGIN
	/*
	// 新規追加の行の商品名にFOCUSする
	var _productsArr = $j("input[id$=':productName']");
	for (i=0;i<_productsArr.length;i++) {
   		if (_productsArr[i].value == "") {
   			_productsArr[i].focus();
   			break;
   		}
   	}*/
   	autoFocus();
	// 2017/01/12 统一行追加功能改修 by zy END
}

//2017/01/16 统一行追加功能改修 by zy BEGIN
function lastBookingDetail(){
	var lastSector = "input[id$=':price'],input[id$=':orderNums'],input[id$=':productName']";
	$j(lastSector,"tr.tranDetailRow:last").unbind("focus");
    $j(lastSector,"tr.tranDetailRow:last").on("focus",function(){
    	//2017/01/18 鼠标选中 行追加失效功能添加 by zy BEGIN
	    $j(".pointIndex").addClass("disabled");
	    //2017/01/18 鼠标选中 行追加失效功能添加 by zy END
    });
    $j(lastSector,"tr.tranDetailRow:last").unbind("blur");
    $j(lastSector,"tr.tranDetailRow:last").on("blur",function(){
    	//2017/01/18 排除扩展子明细行取得index值 by zy BEGIN
    	//var rowIndex = $j(this).closest("tr.tranDetailRow").index();
    	var rowIndex = $j("tr.tranDetailRow").index($j(this).closest("tr.tranDetailRow"));
    	//2017/01/18 排除扩展子明细行取得index值 by zy END
    	//2017/01/18 鼠标选中 行追加失效功能添加 by zy BEGIN
	    $j(".pointIndex").removeClass("disabled");
	    //2017/01/18 鼠标选中 行追加失效功能添加 by zy END
    	if (!chkValidate(rowIndex)) return;
    	curFocusUUid = (rowIndex + 1) + ':productName' ;
    	//$j(this).attr("id");
    	refreshOrder(true);
    	checkAddTranItem();
    }).addClass("lastBlurRow");
    //2017/01/18 鼠标选中 行追加失效功能添加 by zy BEGIN
	$j("input.disBtn,input[id$=clearProduct]").unbind("mouseenter");
	$j("input.disBtn,input[id$=clearProduct]").on("mouseenter",function(){
		blurDisabled = true;
	});
	$j("input.disBtn,input[id$=clearProduct]").unbind("mouseleave");
	$j("input.disBtn,input[id$=clearProduct]").on("mouseleave",function(){
		blurDisabled = false;
	});
	//2017/01/18 鼠标选中 行追加失效功能添加 by zy END
}
var curFocusUUid;var blurDisabled = false;
function autoFocus(){
	if (curFocusUUid != undefined){
		$j("[id$='" + curFocusUUid + "']").focus();
		curFocusUUid = undefined;
	}
	// 2019/04/15 ベネフィットホテル様より改善要望 by zy BEGIN
    if ("addRowCallBack" in window) addRowCallBack();
    // 2019/04/15 ベネフィットホテル様より改善要望 by zy END
    // 2020/07/30 入湯税の自動入力機能について改善 zyz BEGIN
    // 行追加补充入汤税行
    ACTCUSTOM.BATHTAXAUTOSETFUN(null, ACTCUSTOM.OBJ.ADDROWCALLBACKRES, true);
    // 2020/07/30 入湯税の自動入力機能について改善 zyz END
}
function chkValidate(rowIdx){
	//2017/01/18 鼠标选中 行追加失效功能添加 by zy BEGIN
	if (blurDisabled) return false;
	//2017/01/18 鼠标选中 行追加失效功能添加 by zy END
	var lastSector = "input[id$=':price'],input[id$=':orderNums'],input[id$=':productName']";
	var chkflag = true;
	$j(lastSector,"tr.tranDetailRow:eq(" + rowIdx + ")").each(function(){
		if($j(this).val() == "") {
			chkflag = false;
			//break;
			return false;
		}
	});
	return chkflag;
}
//2017/01/16 统一行追加功能改修 by zy END

// 2016/11/16 行追加機能対応 END by zh 

//  2017/02/13 页面自动刷新功能 by wx begin
var intervalId = null;
function drawChart(){
	stopRunning();
}
// 画面自動更新するがどうか判断処理を行う
function callAutoUpdatePageFun() {
	if(isCanRunning()) {
		LookupHoverDetail.hideHoversExpectDetailShow();
		// 画面最新情報を取得する
		refreshCurrentDate();
	}
}
function isCanRunning() {
	return canRefreshFlag;
}
function startRunning() {
	var timerInterval = 1*{!JSENCODE(rollTimerVal)};
	clearTimeout(intervalId);
	if (timerInterval > 0) {
		timerInterval = timerInterval*1000*60;
		intervalId = setTimeout(callAutoUpdatePageFun, timerInterval);
		canRefreshFlag = true;
	}	
}	
function stopRunning() {
	canRefreshFlag = false;
	clearTimeout(intervalId);
}
LookupHoverDetail.hideHoversExpectDetailShow = function () {
    var a = LookupHoverDetail.hovers,
        b;
    for (b in a) 
    {
    	if(b.indexOf('detail') >= 0) continue;
    	a.hasOwnProperty(b) && a[b].hide();
    }
};
//  2017/02/13 页面自动刷新功能 by wx end
function rmvCurDragClass(){
	if (curBackClass != undefined && curBackClass != ""){
		$j("." + curBackClass).removeClass(curBackClass);
	}
}
//故障模式，按照日期更改起始和结束位置
function changeBadMode(){
	//故障下今日之前的数据不可做
	var curDate = kendo.toString(new Date(),JINYACONNECT.DateFormat);
	var beginDt =  PositionMap[beginIndex] ? PositionMap[beginIndex].Date : $j("col[cycIndex='" + beginIndex + "']").data("coldate");
	if (curDate > beginDt) {
		beginDt = curDate;
	}
	var endDt = PositionMap[endIndex] ? PositionMap[endIndex].Date : $j("col[cycIndex='" + endIndex + "']").data("coldate");
	beginIndex =  getCurDatePosition(beginDt).begin;
	endIndex =  getCurDatePosition(endDt).end;
}
// mouse down up 响应
function ctrlMouseDownFun(curRow,curTd){
	var roomId = curRow.attr("roomid");
  	var curIdx = $j(this).index();
  	if (pageMode == "badRoomMode") {
  		//ctrl响应时 删掉一行
  		if ($j(curTd).is("[class*=badRoomClass]")){
  			var curCss = getTdClass('badRoomClass',curTd);
			if(curCss != ''){
				var selectRows = $j("td." + curCss,curRow);
				// 查到后直接清空class，否则会影响日期计算
				selectRows.removeClass(curCss);
				var curDate = '';
				//删除date
				selectRows.each(function(){
					// 只处理本次拖拽的元素
					// 其他次的不要动除非只剩下最后一个
					if ($j(this).is("[class*='badRoomClass']")) return true;
					// 2018/02/07 故障時刻登録　by zy BEGIN
					/*
					var curIdx = $j(this).index();
				   	var curDateString = PositionMap[curIdx].Date;
				   	if (curDate != curDateString) {
				   		curDate = curDateString;
						delDateByRoomId(roomId,curDateString);
					}*/
					// 2018/02/07 故障時刻登録　by zy END
				});
				$j("." + getOrgClass()).removeClass(getOrgClass());
			}
			changeBadRoomDate();
		//ctrl响应是 添加一行
  		} else {
  			//没有选择的 直接不响应
			if((beginIndex == null || beginIndex == undefined) || (endIndex == null || endIndex == undefined)) return;
  			// 2018/02/07 故障時刻登録　by zy BEGIN
  			//changeBadMode();
  			// 2018/02/07 故障時刻登録　by zy END
  			var tdArray = curRow.attr("assignedcolidx").split(",");
	  		if(checkInRoom(roomId,beginIndex,endIndex)) return;
	  		/*
	  		// 2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN 
	  		var curDate;
	  		// 2017/03/27 故障部屋一括解除機能対応　by　zy END 
	  		for(var i = beginIndex ;i<= endIndex; i++) {
		   		if(!checkIndex(i,tdArray)){
					var thDate = PositionMap[i] ? PositionMap[i].Date : $j("col[cycIndex='" + i + "']").data("coldate");
					if (curDate == undefined || curDate != thDate) {
						curDate = thDate;
						//$j("input:button.badRoomDiv.badBtn[data-date='" + curDate + "']").addClass("hadAssign");
						// 2018/02/07 故障時刻登録　by zy BEGIN
						//addDateByRoomId(roomId,curDate,true);
						// 2018/02/07 故障時刻登録　by zy END
					}
				}
			}*/
			// 添加选中行样式
			var selectRows = $j("td",curRow).slice(beginIndex,endIndex+1);
	  		selectRows.addClass(curBackClass);
	  		// 显示浮动窗口
  			if (!$j("div.floatBadRoom").is(":visible")) $j("div.floatBadRoom").slideDown();
  			// 更新日期区间
  			changeBadRoomDate();
  		}
  	} else {
  		//判断是否存在被选中的格
	  	if ($j(curTd).is("[class*=orangeBackground]:not('.orangeBackground')")){
	  		removeSelect(curRow,roomId,curTd);
	  		//如果全部删除没了
	  		if($j("td[class*=orangeBackground]").length == 0){
	  			InsertLeadLst.length = 0;
	  			$j.unblockUI();
	  			isLoadUI = false;
	  		}
	  	} else {
	  		//没有选择的 直接不响应
	  		if((beginIndex == null || beginIndex == undefined) || (endIndex == null || endIndex == undefined)) return;
	  		var tdArray = curRow.attr("assignedcolidx").split(",");
	  		if(checkInRoom(roomId,beginIndex,endIndex)) return;
	  		if(EachRowHadAssign[roomId]) tdArray = tdArray.concat(EachRowHadAssign[roomId]);
	  		//var curBackClass = getCurClass();
	  		if (curBackClass != "") {
		  		for(var i = beginIndex ;i<= endIndex; i++) {
			   		if(checkIndex(i,tdArray)){
			   			$j("." + curBackClass,curRow).each(function(){
			   				var hadAssignArr = EachRowHadAssign[roomId] ;
			   				var roomRow = $j.inArray($j(this).index()+"",hadAssignArr);
			   				EachRowHadAssign[roomId].splice(roomRow,1);
			   				$j(this).removeClass(curBackClass);
			   			});
			   			var key = beginIndex + '_' + endIndex + '_' + roomId;
						if($j("td[class*=orangeBackground]").length == 0){
			    			InsertLeadLst.length = 0;
			    			$j.unblockUI();
			    			isLoadUI = false;
			    		} else {
			    			var idx = InsertMap[key];
							if( idx !== undefined && idx >= 0 ) InsertLeadLst[idx] = undefined;
							setGrowUi(beginIndex,endIndex);
			    		}
						return;
					}
				}
				var selectRows = $j("td",curRow).slice(beginIndex,endIndex+1);
		  			selectRows.addClass(curBackClass);
		        InsertLead(beginIndex,endIndex,roomId);
		        setGrowUi(beginIndex,endIndex);
	        }
  		}
	}
}
// 選択行データ削除
function rmvSelectDate(curRow,that){
	var curIdx = $j(that).index();
   	var roomId = $j(that).closest("tr").attr("roomid");
   	var curDateString = PositionMap[curIdx].Date;
   	var badStarIdx = null;
   	var badEndIdx = null;
   	//var currentClass = getTdClass('badRoomClass',that);
   	$j("#right_body_table col[data-coldate='" + curDateString + "']").each(function(){
   		var idx = $j(this).attr("cycindex");
   		if(badStarIdx > idx || badStarIdx == null) badStarIdx = kendo.parseInt(idx);
   		if(badEndIdx < idx || badEndIdx == null) badEndIdx = kendo.parseInt(idx);
   		var curTd = $j("td:eq(" + idx + ")",curRow);
   		curTd.attr('class').split(/\s+/).filter(function(e){
   			if (e.indexOf("badRoomClass") >= 0 )curTd.removeClass(e);
   		});
   		//$j("td:eq(" + idx + ")",curRow).removeClass(currentClass);
   	});
   	// 2018/02/07 故障時刻登録　by zy BEGIN
   	// delDateByRoomId(roomId,curDateString);
   	// 2018/02/07 故障時刻登録　by zy END
   	//2017/06/06 过滤当日开始结束是否还存在故障数据 by zy BEGIN
   	chkcurDateHadData(badStarIdx,badEndIdx,curDateString);
   	//2017/06/06 过滤当日开始结束是否还存在故障数据 by zy END
   	//warining icon is show or not by zy BEGIN
   	var isHadBadMessage = false;
   	if (badStarIdx == badEndIdx) badEndIdx += 1;
   	//查找是否含有故障数据
   	$j("#right_body_table tr.dragTr").each(function(){
		if(!isHadBadMessage){
			if($j("td",this).slice(badStarIdx , badEndIdx).filter("[class*=badRoomClass]")){
			//if($j("td",this).slice(badStarIdx , badEndIdx).hasClass("badRoomClass")){
				isHadBadMessage = true;
				return false;
			}
		}
	});
	if(!isHadBadMessage){ 
		$j("input[data-date = '" + curDateString + "']").removeClass("hadAssign");
	}
	changeBadRoomDate();
}
function getTdClass(checkClass,curTd){
	var classList = curTd.className.split(/\s+/);
	var curCss = '';
	for (var i = 0 ; i < classList.length; i++) {
	    if(classList[i].indexOf(checkClass) >= 0){
	    	curCss = classList[i];
	    	break;
	    }
	}
	return curCss;
}
//清除画面上的div和内存中的数据
function clearBadRooms(roomArr){
	for (var i = 0; i < roomArr.length ; i++) {
		var roomId = roomArr[i];
		//删除内存中的
		delete badRoomObj[roomId];
		//删除页面里的故障div 
		$j("div.badroom[rid='" + roomId + "'],div.more[rid='" + roomId + "']").remove();
	}
}
// 2017/05/03 badRoom drag 機能追加　by　zy BEGIN
function showBadRoomPanel(){
	changeBadRoomDate();
	//判断是否显示如果未显示则下拉出现
	if (!$j("div.floatBadRoom").is(":visible")) {
		$j("div.floatBadRoom").slideDown();
	}
}
// 2018/02/07 故障時刻登録　by zy BEGIN
/*
function addBadRows(){
	// 2017/03/27 故障部屋一括解除機能対応　by　zy BEGIN 
	var curClass = 	getCurClass();
	$j("tr.dragTr:has(." + curClass +")").filter(function(){ 
		var badCols = $j("td." + curClass,this);
		// 選択故障部屋あり
		if ( badCols.length > 0) {
			var roomId = $j(this).attr("roomid");
			var curDate;
			badCols.each(function(){
				var index = $j(this).index();
				var thDate = getDateByIndex(index,'date');
				if (curDate == undefined || curDate != thDate) {
					curDate = thDate;
					// 故障日付追加
					addDateByRoomId(roomId,curDate,true);
				}
			});
		}
	});
	// 2017/03/27 故障部屋一括解除機能対応　by　zy END 
}
*/
// 2018/02/07 故障時刻登録　by zy END
function chkLeadInCurRow(curRow,begin,end,array){
	/*
	if (pageMode != "badRoomMode") return array;
	var dateSet = {};
	var backArr = [];
	//过滤现在处理行中没有予約データ位置
	$j("col","#right_body_table").slice(begin,end + 1).each(function(idx){
		var curDate = $j(this).data("coldate");
		//判断是否处理过日期
		if ( !(curDate in dateSet)) {
			dateSet [curDate] = !chkCurDateIsHadLead(curRow,curDate);
		}
		if (dateSet[curDate] ) backArr.push(begin + idx);
	});
	for (var i = 0 ; i < backArr.length; i++) {
		var idx = $j.inArray(backArr[i] + "",array);
		if( idx >= 0 ) {
			//删除
			array.splice(idx,1);
		}
	}*/
	return array;
}
//查看判断行是否存在予約データ
function chkCurDateIsHadLead(curRow,curDate){
	//获取传入日期的起始结束位置
	var cur_position = getCurDatePosition(curDate);
	//传入日期所在行列中予約データ
	var dateColumns = $j("td",curRow).slice(cur_position.begin,cur_position.end+1);
	var assignLead = $j("div.isAssignedStatus",dateColumns);
	//判断过的数据直接跳过
	if($j(".badSkipClass",assignLead).length > 0) return true;
	if(assignLead.length > 0){
		//如果是显示的第一天
		//if (cur_position.begin == 0 ) {
			var isEndInDay = false;
			assignLead.each(function(idx){
				var endIdx = $j(this).attr("end");
				//结束位置大于此日期的结束位置
				if (endIdx >= cur_position.end) {
					$j(this).addClass("badSkipClass");
					isEndInDay = true;
					return false;
				}
			});
			return isEndInDay;
		//} 
		//return  true;
	}
	return false;
}
//获取现在日期的开始结束位置
function getCurDatePosition(curDate){
	var beginIdx = kendo.parseInt($j("col[data-coldate='" + curDate + "']:first").attr("cycIndex"));
	var endIdx = kendo.parseInt($j("col[data-coldate='" + curDate + "']:last").attr("cycIndex"));
	return {
		begin:beginIdx,
		end:endIdx
	}
}
// 根据index 获取日期
function getDateByIndex(index,type){
	if (type == 'date') {
		return PositionMap[index] ? PositionMap[index].Date : $j("col[cycIndex='" + index + "']").attr("coldate");
	}
	return new Date(PositionMap[index] ? PositionMap[index].time : $j("col[cycIndex='" + index + "']").attr("coldatetime"));
}
// 清除拖拽相关変数
function clearDragRelateData(){
	beginIndex = undefined;
	endIndex = undefined;
	roomIds = new Array();	
	InsertLeadLst = [];
	InsertMap = {};
}
// 2017/05/03 badRoom drag 機能追加　by　zy END
// 2018/02/07 故障時刻登録　by zy BEGIN
// 故障信息作成
function createBadArr(){
	// 取得含有故障数据行
	var hadBadRow = $j("#right_body_table tr.bodyRow").has("[class*=badRoomClass]");
	var badRoomArr = []
	if (hadBadRow.length > 0 ) {
		var timeMap = {};
		hadBadRow.each(function(){
			var tdCols = $j(this).find("td[class*=badRoomClass]");
			var roomid = $j(this).attr("roomid");
			var badArr = [],lastIndex,lastCss;
			tdCols.each(function(){
				var curCss = getTdClass('badRoomClass',this);
				var curIndex = $j(this).index();
				if (lastCss == undefined ) lastCss = curCss
				// 第一次赋值 或 顺序的情况下
				if (lastCss == curCss || lastIndex == undefined || (lastIndex + 1) == curIndex) {
					lastIndex = curIndex;
					badArr.push(curIndex);
				// 断开的情况
				} else {
					badRoomArr.push(BadObj(roomid,timeObj(badArr,timeMap),'bad'));
					badArr = [curIndex];
					lastCss = curCss;
					lastIndex = curIndex;
				}
			});
			// 最后一次的数据 没有存入时对应
			if ( lastIndex != undefined ) {
				badRoomArr.push(BadObj(roomid,timeObj(badArr,timeMap),'bad'));
				badArr = [];
				lastIndex = undefined;
			}
		});
	}
	return badRoomArr;
}
function timeObj(datas,map){
	// 判断存在数据
	var dataLen = datas.length;
	if ( dataLen > 0 ) {
		// 2019/04/30 JINYABUG-1631 bug fix by zy BEGIN
		var key = '';
		datas.forEach(function(index){
			key += index;
		});
		/*
		var beginIndex = datas[0],endIndex = datas[dataLen - 1];
		var key = beginIndex + '_' + endIndex;
		*/
		// 2019/04/30 JINYABUG-1631 bug fix by zy END
		// 重复跳过
		if ( map != undefined && (key in map)) return map[key];
		// 2019/04/30 JINYABUG-1631 bug fix by zy BEGIN
		//var timeObj = getTimeObj(beginIndex,endIndex);
		var timeObj = getTimeObjs(datas);
		// 2019/04/30 JINYABUG-1631 bug fix by zy END
		map[key] = timeObj;
		return timeObj;
	}
}
// 2019/04/30 JINYABUG-1631 bug fix by zy BEGIN
function getTimeObjs(datas){
	var noShowTime = '00:00';
	var obj = {};
	var curDate,begDt,endDt;
	obj.dataLst = [];
	console.log(datas);
	var oneColLong = parseInt($j('input[id$="hidOneColLong"]').val());
	datas.forEach(function(idx){
		var beginTime =  getDateByIndex(idx);
		if (begDt == undefined || begDt > beginTime) {
			begDt = beginTime;
			var begTimeStr = kendo.toString(beginTime,'HH:mm');
			if (begTimeStr != noShowTime) obj.begin = begTimeStr;
			else delete obj.begin;
		}
		var endTime = getDateByIndex(idx);
		endTime = endTime.addMinutes(oneColLong);
		if (endDt == undefined || endDt < endTime) {
			endDt = endTime;
			var endTimeStr = kendo.toString(endTime,'HH:mm');
			if (endTimeStr != noShowTime) obj.end = endTimeStr;
			else delete obj.end;
		}
		if (idx in PositionMap) {
			var queryDt = PositionMap[idx].Date;
			if (curDate == undefined || curDate != queryDt) {
				curDate = queryDt;
				obj.dataLst.push(curDate);
			}
		}
	});
	return obj;
}
// 2019/04/30 JINYABUG-1631 bug fix by zy END
function getTimeObj(beginIndex,endIndex) {
	var noShowTime = '00:00';
	var obj = {};
	var curDate;
	obj.dataLst = [];
	var beginTime =  getDateByIndex(beginIndex);
	var endTime =  getDateByIndex(endIndex);
	var oneColLong = parseInt($j('input[id$="hidOneColLong"]').val());
	endTime = endTime.addMinutes(oneColLong);
	var begTimeStr = kendo.toString(beginTime,'HH:mm');
	var endTimeStr = kendo.toString(endTime,'HH:mm');
	if (begTimeStr != noShowTime) obj.begin = begTimeStr;
	if (endTimeStr != noShowTime) obj.end = endTimeStr;
	for (var i = beginIndex; i <= endIndex ; i++) {
		if (i in PositionMap) {
			var queryDt = PositionMap[i].Date;
			if (curDate == undefined || curDate != queryDt) {
				curDate = queryDt;
				obj.dataLst.push(curDate);
			}
		}
	}
	return obj;
}
// 靠近开始时间
function getBegNearTime(timestmp,cols){
	var col = cols.filter("[coldatetime='" + timestmp + "']");
	if (col.length > 0 ) return col.first();
	return getNearTime(timestmp,cols);
}
// 靠近结束时间
function getEndNearTime(timestmp,cols){
	var col = cols.filter("[coldatetime='" + timestmp + "']");
	if (col.length > 0 ) return col.first();
	col = getNearTime(timestmp,cols);
	if (col.next().length > 0) return col.next();
	return col;
}
// 最接近时间取得
function getNearTime(timestmp,cols){
	if (cols == undefined) cols = $j("#right_body_table colgroup>col");
	var oneColLong = parseInt($j('input[id$="hidOneColLong"]').val());
	var filterCols = cols.filter(function(){
		var coldatetime = $j(this).attr("coldatetime");
		var begin = kendo.parseFloat(coldatetime);
		var end = new Date(begin).addMinutes(oneColLong).getTime();
		if (begin  <= timestmp && end >= timestmp) return true;
		return false;
	});
	return filterCols.first();
}
// 2018/02/07 故障時刻登録　by zy END
</script>
<!-- 2016/11/16 見積明細設定機能対応 END by zh -->
<!-- 2018/02/22 未割り当て ワィンドウ追加　by　zy　BEGIN -->
<!-- 部屋は未割り当て の予約データ可能 -->
<apex:includeScript value="{!URLFOR($Resource.queryfiles, 'js/dateformat.js')}"/>
<script>
// 当日のシステム日付を設定する
var JS_SYS_TODAY = "{!TODAY()}";
// 過去の未割り当て予約アサインできる制御フラグ
var JS_SYS_SHOW_HIS_FLG = "{!isShowHisAssignWinFlg}".toLowerCase();
// 予約データ（移動元）
var dragLeadElement = null;
// 選択した部屋情報格納(移動先)
var dragTargetElement = null;
var _g_isCanUpdateFlg = {!(isCanUpdateLead)};
// 日付書式化用変数
var dateFormat = new DateFormat(JINYACONNECT.DateFormat);
var JS_SYS_DEVICE_MOBILE_FLG = kendo.support.mobileOS || !_g_isCanUpdateFlg;
// 未割り当てのWindowのTitle自動設定を行う
function refreshWindowTitle(recordsNum) {
	var win = $j("#noAssignLeadListWindow").data("kendoWindow");
	//未割り当予約
	//件
	win.title('{!$Label.MSG_008_0037} 【'+recordsNum+'】{!$Label.MSG_008_0048}');
	// 件数０の場合、Windowは自動MINする、１以上場合、Windowを開く(2014/07/29)
	if (1*recordsNum > 0) {
		// 2014/08/13 自動OPEN機能は外す、０件のみ、WINDOWを自動クロスする
		//win.restore();
	} else {
		win.minimize();
	}
}
// 未割り当てる予約データソース更新
function refreshDS() {
	// 
	var noAssignLeadListWindow = $j("#noAssignLeadListWindow");
	var isHistoryFlg = $j("input[id$=':queryDate']").length;
	var queryDate = isHistoryFlg > 0 ? dateFormat.format(Date.parse($j("input[id$=':queryDate']").val())) :dateFormat.format(Date.parse(JS_SYS_TODAY));
	var jsTodayDt = dateFormat.format(Date.parse(JS_SYS_TODAY));
	// 当日から未来日の場合、自動割り当て画面をOPEN
	if (queryDate >= jsTodayDt || JS_SYS_SHOW_HIS_FLG == "true") {
		if(noAssignLeadListWindow.data("kendoWindow")._closing){
			noAssignLeadListWindow.data("kendoWindow").open();
		}
	} else {
		noAssignLeadListWindow.data("kendoWindow").close();
		return true;
	}
	autoFunExcuteFlag = false; 
	// 未割り当てる画面Refreshする
	noAssingLeadInfoDs.read();
}
function bindAssignLeadWin(){
	// *************************************
	// 未割り当てる顧客情報リスト
	// *************************************
	var wH = $j(window).height();
	var wW = $j(window).width();
    var p = $j("[id$=':actionForm']");
    var position = p.offset();	
	var sumheigh = wH - position.top;
	var noAssignLeadListWindow = $j("#noAssignLeadListWindow");
	if (!noAssignLeadListWindow.data("kendoWindow")) {
		var posTop = $j("#contentsBody").offset().top + 3;
		noAssignLeadListWindow.kendoWindow({
        	width: "320px",
        	// 2016/03/10 高さ自動調整機能対応 BEGIN
        	//height : sumheigh,
			maxHeight: sumheigh,
        	// 2016/03/10 高さ自動調整機能対応　END
            actions: ["Minimize"],
            //未割り当予約
            title: "{!$Label.MSG_008_0037}"
        }).closest(".k-window").css({
			top: posTop,
   			left: wW - 330
		});
		noAssignLeadListWindow.data("kendoWindow").minimize();
	}
    $j("#noAssignLeadListView").kendoTreeView({
         dragAndDrop: false,
         dataSource: noAssingLeadInfoDs,
         template: kendo.template($j("#treeview-template").html()),
     });	
	// 2014/08/19 部屋割り当ての取り消し機能追加
	noAssignLeadListWindow.parent().addClass("noAssignLeadListWindowClass");
    // 2014/08/19 部屋割り当ての取り消し機能追加
	if(!JS_SYS_DEVICE_MOBILE_FLG){
	    $j(".noAssignLeadListWindowClass").kendoDropTarget({
		    dragenter: noAssignDroptargetOnDragEnter,
		    dragleave: noAssignDroptargetOnDragLeave,
		    drop: noAssignDroptargetOnDrop
		});
	}
}
// 2014/08/20 Drop処理
function noAssignDroptargetOnDragEnter(e) {
//console.debug("noAssignDroptargetOnDragEnter");
	// 部屋未割り当てWindow画面から移動する場合、処理中止
	if (dragLeadElement == null) {
		e.preventDefault();
		return;
	}
	// 画面からLOCKされた部屋からDROPする場合、対象外
	if (typeof dragLeadElement.attr("isblocked") != "undefined" && 
		dragLeadElement.attr("isblocked").toLowerCase() == "true") {
		e.preventDefault();
		return;	
	}
	// 未割り当て予約部屋からDropする場合、処理対象外
	if (dragLeadElement.hasClass("noAssignLead")) {
        e.preventDefault();
        return; 
	}
	if (dragType == "moreDayDrag") {
		var orgLeft = $j(".cloneClass").data("orgleft");
		if (orgLeft == undefined) {
			$j(".cloneClass").data("orgleft",$j(".cloneClass").position().left);
			$j(".cloneClass").data("orgtop",$j(".cloneClass").position().top);
			$j(".cloneClass").css({left:e.pageX,top:e.pageY});
		}
	}
	// 処理のステータスCSSを設定する
	e.dropTarget.removeClass("k-state-focused");
	e.dropTarget.addClass("drop-ui-state-hover-noAssignWin");
}
function noAssignDroptargetOnDragLeave(e) {	
//console.debug("noAssignDroptargetOnDragLeave");
	// 処理のステータスCSSを外す
	e.dropTarget.removeClass("drop-ui-state-hover-noAssignWin");
	if (dragType == "moreDayDrag") {
		var orgLeft = $j(".cloneClass").data("orgleft");
		if (orgLeft != undefined) {
			var left = $j(".cloneClass").data("orgleft");
			var top = $j(".cloneClass").data("orgtop");
			$j(".cloneClass").css({left:left,top:top});
			$j(".cloneClass").removeData("orgleft");
			$j(".cloneClass").removeData("orgtop");
		}
	}
}
// 部屋割り当てる済み→未割り当てへ移動処理
function noAssignDroptargetOnDrop(e) {
//console.debug("noAssignDroptargetOnDrop");
	if(!_g_isCanUpdateFlg) return;
    // 割り当て不可の場合、処理中止
    if ( !e.dropTarget.hasClass("drop-ui-state-hover-noAssignWin") ) {
        e.preventDefault();
        return; 
    }

   	// 予約ID情報を格納するf
   	var groupIds = dragLeadElement.attr("leadid") + ",";
   	var dragName = dragLeadElement.attr("name");
   	var entryDt = dragLeadElement.attr("dt");
   	// 通过予約ID
   	var leadId = dragLeadElement.attr("leadid");
   	var bodyRow = $j("#right_body_table tr.bodyRow").has("div[leadid='" + leadId + "']");
   	// 获取当前予約の部屋
   	var toRoomId = bodyRow.attr("roomid");
	// 一括予約IDを取得する
   	var leadIndexId = dragName.replace("lead_","");
   	var leadIdArr = [];
   	// 一括予約のIDが存在する場合、
   	if (leadIndexId != undefined && leadIndexId != "") {
   		// 同じ予約インデクスIDの予約BLOCKリストを取得する
   		var grouprooms = getBlackCreamTeamGroupRooms(leadIndexId,entryDt);
   		var isCheckTeamFlg = {!isShowGroupClConfirm};	// 一括チェツクイン機能起動の場合、一括取り消しも起動する
   		//var isbulkProcFlg = false;
   		
		// 一括チェックイン機能起動 && 団体予約の場合
		if(isCheckTeamFlg && grouprooms.length > 1)
		{	
			//予約の部屋割り当てを一括取り消しよろしいですか
			if(confirm('{!$Label.MSG_008_0079}'))
			{
				groupIds = "";	// 引き渡すの予約ID
	   			// 団体の部屋情報は全部取得、色を設定する
	    		grouprooms.each(function() {
	    			// ロックされる部屋は取り消し対象外する
	    			if ($j(this).attr("isblocked").toLowerCase() != "true") {
	    				groupIds += $j(this).attr('leadid') + ',';
	    				leadIdArr.push($j(this).attr('leadid'));
	    			}
	    		});
	    		//isbulkProcFlg = true;
			}
		}
	}
	var toRooms = {};
	toRooms[toRoomId] = true;
	var refreshRooms = toRoomId;
	$j("#right_body_table tr.bodyRow").has("div.isAssignedStatus[name='lead_"+leadIndexId+"']").each(function(){
		var roomId = $j(this).attr("roomid");
		if (roomId in toRooms) return true;
		toRooms[roomId] = true;
		refreshRooms += ',' + roomId;
	});
	dragLeadElement.attr("_canelRoomLeadIds",groupIds.slice(0, -1));
	dragLeadElement.attr("refreshRoomId",refreshRooms);
   	// 部屋アサイン取り消し処理呼び出し
   	blockUi();
	ajaxSyncCancelAssignInfo(dragLeadElement, e.dropTarget);
	//return false;
}
// 未割り当予約 DataSource
var noAssingLeadInfoDs = new kendo.data.HierarchicalDataSource({
    transport: {
      read: function (options) {
        // 検索条件を設定する 
        var queryDate = getQueryDate();
        var branchCd = $j("select[id$=':branchShopCd']").length > 0 ? $j("select[id$=':branchShopCd']").val() : "";
		// 当日はチェックイン情報・チェックアウト情報表示制御フラグ
		var isShowTodayInfo = getShowTodayFlg();
		var viewMode = $j("select[id$=viewModeSel]").val();
		// 2018/11/08 未割り当てウインドウの予約も該当部屋タイプのみ情報を表示する WGCH BEGIN
		var roomTypeSelectId = $j("select[id$=':roomTypeSelectId']").length > 0 ? $j("select[id$=':roomTypeSelectId']").val() : [];
		// 2018/11/08 未割り当てウインドウの予約も該当部屋タイプのみ情報を表示する WGCH END
		// 2019/01/15 タイムテーブルを開いた際、デフォルトで表示される部屋タイプを指定できるようにする by zy BEGIN
		if (roomTypeSelectId == null) roomTypeSelectId = [];
		// 2019/01/15 タイムテーブルを開いた際、デフォルトで表示される部屋タイプを指定できるようにする by zy END
        // make AJAX request to the remote service
        Visualforce.remoting.Manager.invokeAction(
          // 2018/11/08 未割り当てウインドウの予約も該当部屋タイプのみ情報を表示する WGCH BEGIN
          // "RemoteAction.RoomScheduleReport.noAssingLeadInfoAll}", queryDate,branchCd, isShowTodayInfo,viewMode, function (result, event) {
          "{!$RemoteAction.RoomScheduleReport.noAssingLeadInfoAllNew}", queryDate,branchCd, isShowTodayInfo,viewMode, roomTypeSelectId, function (result, event) {
          // 2018/11/08 未割り当てウインドウの予約も該当部屋タイプのみ情報を表示する WGCH END
            if (event.type == 'exception') {
                alert(event.message);
            } else {
                // 顧客一覧情報を引き渡す
                options.success(result);
                // 2013/10/31 総件数統計を行う
                var maxLen = result.length;
                var totleRs = 0;
                // totalInt
                for (var i=0 ; i<maxLen ; i++){
                	totleRs += result[i].totalInt;
                }
                refreshWindowTitle(totleRs);
                // BIND部屋未割り当ての予約項目情報               
        		bindNoAssignLeadItem();
            } // End else
        }, {escape: true});
      }// read
    },// transport
    schema: {
        model: {
            hasChildren: "isHasChildren",
            id: "id",
            children: "items",
        }
    }
}); 
function explandAll(){
	var treeview = $j("#noAssignLeadListView").data("kendoTreeView");
	// ALLサブ項目を全展開
	treeview.expand(".k-item");
	// 第三层还需要再来一次
	treeview.expand(".k-item");
}
function collapseAll(){	
	var treeview = $j("#noAssignLeadListView").data("kendoTreeView");
	treeview.collapse(".k-item");
}
// 割り当てるできる予約情報BINDする
function bindNoAssignLeadItem() {
	explandAll();
	// Dragできる項目を定義するhttps://c.cs31.visual.force.com/a0op0000002rVsxAAE
	if(!JS_SYS_DEVICE_MOBILE_FLG){
	$j(".noAssignLead").kendoDraggable({
        hint: function(e) {
            // golbal var setup
            dragLeadElement = $j(e).clone();
            return dragLeadElement;
        },
        dragstart:function(e){
        	// 提示框显示
        	dragType = "assignLead";
        	stopRunning();
        	var startTime = dragLeadElement.attr("starttime");
        	if (startTime != undefined) {
	          	var startTm = kendo.parseDate(startTime,'yyyyMMddHH:mm');
	          	var startDt = kendo.toString(startTm,'yyyy/MM/dd');
	          	var dateCols = $j("#right_body_table col[data-coldate='" + startDt + "']");
	          	var rowCols = $j("#right_body_table tr.bodyRow:first>td[cycindex]");
	           	var begIndex = -1,endIndex = -1;
	           	if (dateCols.length > 0) {
	           		begIndex = dateCols.first().index();
	           		endIndex = dateCols.last().index();
	           		var firstCol = rowCols.eq(begIndex).offset();
	           		var lastCol = rowCols.eq(endIndex).offset();
	           		//var tableAllRows = $j("#right_body_table");
	           		var wHt = $j("#right_body_table").height() - 5;
	           		var firstLeft = firstCol.left ;
	           		var lastLeft = lastCol.left + dateCols.last().width() - 4;
	           		var wWd = lastLeft - firstCol.left;
	           		$j("#leftBorder,#rightBorder,#topBorder,#bottomBorder").show();
	           		$j("#leftBorder").offset({left:firstLeft});
	           		$j("#topBorder").offset({left:firstLeft});
	           		$j("#rightBorder").offset({left:lastLeft});
	           		$j("#leftBorder,#rightBorder,#topBorder").css({top:0});
	           		$j("#bottomBorder").offset({left:firstLeft,top:wHt});
	           		$j("#leftBorder,#rightBorder").css({width:0,height:wHt});
	           		$j("#topBorder,#bottomBorder").css({width:wWd,height:0});
	           	}
           	}
        },
        dragend:function(e){
        	startRunning();
        	// 如果存在数据进行保存
        	if (checkRowBackChg()) {
        		var curRow = currentTd.closest("tr.bodyRow");
			    var fromuid = dragLeadElement.attr("roomtypeuid");
			    var formunm = dragLeadElement.attr("roomTypeUnm");
			    if(typeof fromuid == "undefined") {
			        formunm = "";
			    }
			    var fromroomid = dragLeadElement.attr("roomId");
			    var toroomid = curRow.attr("roomid");
			    var dragRoomELement = $j("tr.bodyRow[name='" + toroomid + "']");
			    var touid = dragRoomELement.attr("typeid");
			    var tounm = dragRoomELement.attr("roomtype");
				// 団体・単体のタイトルで、DROPして、自動アサインする場合
				var groupFlg = (typeof(dragLeadElement.attr("groupFlg"))=="undefined") ? "" : dragLeadElement.attr("groupFlg");
			    if (typeof fromroomid == "undefined") fromroomid = "";
				if (groupFlg.toLowerCase() != "true") {
					if (fromuid != touid ) {
					//部屋タイプは        タイプから	タイプへ変更されます、宜しいでしょうか
						var confirmMsg = '{!$Label.MSG_008_0033}'+formunm+'{!$Label.MSG_008_0034}'+tounm+'{!$Label.MSG_008_0035}';
						if (formunm == "") {
						//部屋タイプは		タイプへ変更されます、宜しいでしょうか
							confirmMsg = '{!$Label.MSG_008_0033}'+tounm+'{!$Label.MSG_008_0035}';
						}
						if (!window.confirm(confirmMsg)) {
							//e.dropTarget.removeClass("drop-ui-state-hover");
							e.preventDefault();
							dragType = "";
				        	// 清除选中背景
				        	clearRowBack();
				        	$j("#leftBorder,#rightBorder,#topBorder,#bottomBorder").hide();
			                return false;   
						}
					}
				    // Setup Lead To Room By Memory
				    ajaxSyncNoAssignInfo(dragLeadElement,toroomid);
				} else {
					blockUi();
					// 部屋
					// 一括部屋自動アサイン処理を行う
					ajaxSyncNoAssignInfoByBulk(dragLeadElement, toroomid);
				}
        		
        	}
        	dragType = "";
        	// 清除选中背景
        	clearRowBack();
        	$j("#leftBorder,#rightBorder,#topBorder,#bottomBorder").hide();
        }
	});
	}
}
function checkRowBackChg(){
	if ($j("tr[style*='background: orange']").length > 0) return true;
	return false;
}
function clearRowBack(){
	if (checkRowBackChg()) $j("tr[style*='background: orange']").removeAttr("style");
}
// noAssingLeadInfoDs End
var gobalToElement;
// 予約の部屋は予約に割り当て
function ajaxSyncNoAssignInfo(fromElement, toRoomId) {
	// 検索条件を設定する 
	var fromLeadId = fromElement.attr("leadUid");
	var queryDate = getQueryDate();
	var startTime = fromElement.attr("starttime");
    if (startTime != undefined) {
    	var startTm = kendo.parseDate(startTime,'yyyyMMddHH:mm');
    	queryDate = kendo.toString(startTm,JINYACONNECT.DateFormat);
    }
	// 当日はチェックイン情報・チェックアウト情報表示制御フラグ
	var isShowTodayInfo = getShowTodayFlg();
	$j("input[id$=':dropFromLeadIdHid']").val(fromLeadId);
	$j("input[id$=':dropToRoomIdHid']").val(toRoomId);
	//gobalToElement = toElement;
	
	blockUi();
	// 事前チェックを行う
	Visualforce.remoting.Manager.invokeAction(
	   "{!$RemoteAction.RoomScheduleReport.preUpdateMemoryRoomLeadMap}",fromLeadId,toRoomId,queryDate,null,null,isShowTodayInfo, function(result, event){
        // 異常
     	if(event.type == 'exception') {
            alert(event.message);
            //gobalToElement.removeClass("drop-ui-state-hover");
            unblockUi();
     	} else {
     		if (result.errMsg == "" && result.infMsg == "" ) {
				// Memory更新
				ajaxSyncUpdateLeadInfo(fromLeadId,toRoomId,queryDate,isShowTodayInfo);
     		} else {
     			if (result.errMsg != "" ) {
     				alert(result.errMsg);
     				//gobalToElement.removeClass("drop-ui-state-hover");
					unblockUi();
     			} else {
	     			// 既存の予約が存在する場合
	     			if(window.confirm(result.infMsg)) {
	     				ajaxSyncUpdateLeadInfo(fromLeadId,toRoomId,queryDate,isShowTodayInfo);
	     			} else {
	     				//gobalToElement.removeClass("drop-ui-state-hover");
						unblockUi();
	     			}
     			}
     		}
			
		}
    });

}
// 予約の部屋は予約に割り当て[一括自動部屋アサインを行う]
// 20130619 
function ajaxSyncNoAssignInfoByBulk(fromElement, toRoomId) {
	
	// 処理条件を設定する 
	var fromLeadIdsStr = $j.trim(fromElement.attr("childrenItems"));
	//fromLeadIdsStr = fromLeadIdsStr.substring(0, fromLeadIdsStr.length -1);
	var fromLeadIds = fromLeadIdsStr.split(",");
	var queryDate = getQueryDate();

    // 未清掃部屋でも、割り当てする部屋可能の配列に格納する
    var nocleanRoomOkIds = $j.trim(fromElement.attr("nocleanRoomOkId"));
    var nocleanRoomNgIds = $j.trim(fromElement.attr("nocleanRoomNgId"));
	// 当日はチェックイン情報・チェックアウト情報表示制御フラグ
	var isShowTodayInfo = getShowTodayFlg();
//console.debug(nocleanRoomOkIds);
//console.debug(nocleanRoomNgIds);
//console.debug('fromLeadIds:::' + fromLeadIds);
	// 事前チェックを行う
	Visualforce.remoting.Manager.invokeAction(
	   "{!$RemoteAction.RoomScheduleReport.autoAssignRoomToLead}", 
		fromLeadIds,toRoomId,queryDate,
		nocleanRoomOkIds,nocleanRoomNgIds,isShowTodayInfo,
		function(result, event){
        // 異常
     	if(event.type == 'exception') {
            alert(event.message);
            unblockUi();
     	} else {
//console.debug('result.nextLeadIds:'+result.nextLeadIds);
     		if (result.nextLeadIds.length > 0) {
     			if (result.currRoomId == "") result.currRoomId = toRoomId;
     			// 警告情報を表示する[該当予約データは再割当てする]
     			if (result.message != "") {
     				// 未清掃の部屋でも、該当部屋も割り当てする
     				if (window.confirm(result.message)) {
     					// 未清掃部屋は、該当部屋は割り当てする
					    var nocleanRoomOkIds = $j.trim(fromElement.attr("nocleanRoomOkId"));
					    var tmpRoomIds = nocleanRoomOkIds.split(",");
     					tmpRoomIds.push(result.currRoomId);
     					fromElement.attr("nocleanRoomOkId",tmpRoomIds.join());
//console.debug("--1--" + nocleanRoomOkIds);
//console.debug("--1--" + nocleanRoomNgIds);
     					ajaxSyncNoAssignInfoByBulk(fromElement,result.currRoomId);
     				} else {
     					// 未清掃部屋は、該当部屋はSKIPする
     					var nocleanRoomNgIds = $j.trim(fromElement.attr("nocleanRoomNgId"));
     					var tmpRoomIds = nocleanRoomNgIds.split(",");
     					tmpRoomIds.push(result.currRoomId);
     					fromElement.attr("nocleanRoomNgId",tmpRoomIds.join());
//console.debug("--2--" + nocleanRoomOkIds);
//console.debug("--2--" + nocleanRoomNgIds);
     					ajaxSyncNoAssignInfoByBulk(fromElement,result.currRoomId);
     				}
     			} else {
//console.debug("--3--" + result.nextLeadIds);
					var hadAssignRoomId = $j.trim(fromElement.attr("hadAssignRoomId"));
	     			var hadAssign = hadAssignRoomId.split(",");
	     			if (hadAssignRoomId == undefined || hadAssignRoomId == "") hadAssign = [];
	     			if (result.currRoomId != "") hadAssign.push(result.currRoomId);
	     			fromElement.attr("hadAssignRoomId",hadAssign.join());
	     			// 次の処理を行う
	     			fromElement.attr("childrenItems",result.nextLeadIds.join());
	     			ajaxSyncNoAssignInfoByBulk(fromElement,result.currRoomId);
     			}
     		} else {
     			var hadAssignRoomId = $j.trim(fromElement.attr("hadAssignRoomId"));
     			var hadAssign = hadAssignRoomId.split(",");
     			hadAssign.push(result.currRoomId);
     			// 処理完了
				refreshRoom(hadAssign.toString());
     			refreshDS();
     		}
		}
    });


}
// 部屋アサイン取り消し
function ajaxSyncCancelAssignInfo(fromElement, toElement) {
	
	var fromLeadIdsStr = $j.trim(fromElement.attr("_canelRoomLeadIds"));	// 割り当て取消の予約ID機能
	var fromLeadIds = fromLeadIdsStr.split(",");
//console.debug("fromLeadIds::" + fromLeadIds);
	// 画面の指定日
    var queryDate = fromElement.attr("dt");
	
    // 当日はチェックイン情報・チェックアウト情報表示制御フラグ
    var isShowTodayInfo = getShowTodayFlg();
    // DropTarget情報記録
    gobalToElement = toElement;
    // 部屋アサイン取り消し処理を呼び出し
    Visualforce.remoting.Manager.invokeAction(
		"{!$RemoteAction.RoomScheduleReport.autoCancelAssignRoomToLead}", 
        fromLeadIds,queryDate,isShowTodayInfo,
		function(result, event){
	        // 異常
	     	if(event.type == 'exception') {
	            alert(event.message);
	            // 処理中色外す
				gobalToElement.removeClass("drop-ui-state-hover-noAssignWin");
	            unblockUi();
	     	} else {
				// 全部取消処理完了
	     		if (result.nextLeadIds.length == 0) {
					// 処理完了
					refreshRoom(fromElement.attr("refreshRoomId"));
					refreshDS();
					// 処理中色外す
					gobalToElement.removeClass("drop-ui-state-hover-noAssignWin");
	     		} else { // 処理対象有り場合
	     			// 次の処理を行う
	     			fromElement.attr("_canelRoomLeadIds",result.nextLeadIds.join());
	     			ajaxSyncCancelAssignInfo(fromElement,toElement);
				}
		    }
		},
   		{escape: true}
    );
}
// 部屋アサイン取り消し
function ajaxSyncUpdateLeadInfo(fromLeadId,toRoomId,queryDate,isShowTodayInfo) {
    // 部屋アサイン取り消し処理を呼び出し
    Visualforce.remoting.Manager.invokeAction(
		"{!$RemoteAction.RoomScheduleReport.updateLeadMap}", 
        fromLeadId,toRoomId,isShowTodayInfo,queryDate,
		function(result, event){
	        // 異常
	     	if(event.type == 'exception') {
	            alert(event.message);
	            // 処理中色外す
				//gobalToElement.removeClass("drop-ui-state-hover-noAssignWin");
	            unblockUi();
	     	} else {
				if (result != "") alert(result);
				refreshRoom(toRoomId);
				refreshDS();
		    }
		},
   		{escape: true}
    );
}
// 画面の指定日情報を取得する
function getQueryDate() {
	// 指定日取得
	return $j("input[id$=':queryDate']").length > 0 ? $j("input[id$=':queryDate']").val() : kendo.toString(new Date(), JINYACONNECT.DateFormat );
}
// 当日チェックイン・チェックアウト制御フラグ値を取得する
// 2018/07/03　予約割り当て機能エラー修正　JINYABUG-672　by zy BEGIN
function getShowTodayFlg() {return true; }
// 2018/07/03　予約割り当て機能エラー修正　JINYABUG-672　by zy END
function getBlackCreamTeamGroupRooms (leadIndexId,entryDt) {
	return $j("#right_body_table div.isAssignedStatus[name='lead_"+leadIndexId+"'][dt='" + entryDt + "']");
}
function refreshRoomByLeadId(leadid) {
	// 2018/03/07 Security Check BEGIN
	var branchShopnm = "{!JSENCODE(branchShopNm)}";
	// 2018/03/07 Security Check END
	var queryDate = $j("[id$=queryDate]").val(),
		viewMode = $j("select[id$=viewModeSel]").val(),
		colSize = $j("#hidColSize").val(),
		curStatus = $j("select[id$=statusSelect]").val();
	// 既に定義する売価はプランカラ取得、画面に設定する
    Visualforce.remoting.Manager.invokeAction(
    "{!$RemoteAction.RoomScheduleReport.refreshRoomByLeadId}", leadid,branchShopnm,queryDate,viewMode,colSize,curStatus ,  function(result, event){
	       if(event.type == 'exception') {
	       	   //エラーの場合下
	           //setTimeout(function(){ initRoomMap(); },5000);
	       } else {
				if (result.errorMsg != '') alert(result.errorMsg);
	        	else {
	        		var tdLst = result.tdInf;
	        		if (tdLst.length > 0) refreshRow(tdLst);
	        	}
	       }
	       unblockUi();
     });
}
// 2018/07/27 宿泊税計算 WGCH BEGIN
var thisRoomSpcd = "";
var planItemPriceMap = new Map();
var planItemTypeMap = new Map();
var hotelTaxDefineInfoData = {!hotelTaxDefineInfoJson};
function getPlanKeyFun(rowIndex){
	var _productId = $j("input:hidden[id$=':" + rowIndex + ":hidProductId']");
	return _productId.val() + '_' + _productId.attr('rowNo');
}
// 2018/07/27 宿泊税計算 WGCH END
// 2019/07/30 軽減税率機能対応 WGCH BEGIN
var isReducedTaxFlg = {!isReducedTaxFlg}, // 軽減税率機能FLG
	_planItemMap = new Map(), // 选中所有PLAN对应的PLAN明细MAP
	CUST_TABLE = "table[id$=':BookEstTable']", // 明细行TableID
	ACTTYPE_PLAN = "{!JSENCODE(ACTTYPE_PLAN)}"; // プラン
/*
* 获取カスタムメタデータ型:宿泊税定义信息
*/
function getHotelTaxInfoFun(){
	var _hotelTaxData = hotelTaxDefineInfoData[thisRoomSpcd];
	return {
		data : _hotelTaxData, // 宿泊税定义信息
		isEffectiveFlg : _hotelTaxData != undefined // 判断是否有效的宿泊税数据集
		// 2019/10/02 PlanHeader算法切换对应 WGCH BEGIN
		,planBrkToHeaderCalFlg : {!planBrkToHeaderCalFlg}
		// 2019/10/02 PlanHeader算法切换对应 WGCH END
	}
}
/*
* 获取当前行数据集
*/
function getRowInfoFun(rowIndex){
	// 单价
	var unitPrice = kendo.parseFloat($j("input:text[id$=':" + rowIndex + ":price']").val());
	if (unitPrice == null) unitPrice = 0;
	// 消費税率
	var tax = kendo.parseFloat($j("input:hidden[id$=':" + rowIndex + ":hidTaxRateType']").val());
	if (tax == null) tax = 0;
	// サビース料率
	var service = kendo.parseFloat($j("input:hidden[id$=':" + rowIndex + ":hidServiceRate']").val());
	if (service == null) service = 0;
	// 数量
	var nums = kendo.parseFloat($j("input:text[id$=':" + rowIndex + ":orderNums']").val());
	if (nums == null) nums = 0;
	// 特別税
	var numSepcTax = kendo.parseFloat($j("input[id$=':" + rowIndex + ":hidSpecialTax']").val());
	if (numSepcTax == null) numSepcTax = 0;
	// 単価定義区分
	var unitPriceKbn = $j("input:hidden[id$=':" + rowIndex + ":hidUnitPriceKbn']").val();
	// 商品ID
	var productId = $j("input:hidden[id$=':" + rowIndex + ":hidProductId']").val();
	// 商品処理種別
	var actionType = $j("input:hidden[id$=':" + rowIndex + ":hidActionType']").val();
	// 支付种别
	var payType = $j("input:hidden[id$=':" + rowIndex + ":hidPaymentType']").val();
	// プラン明細課税、非課税混在合計金額計算
	var hidPlandetail = kendo.parseFloat($j("input:hidden[id$=':" + rowIndex + ":hidPlandetail']").val());
	if (hidPlandetail == null) hidPlandetail = 0;
	// 金額（税抜き）
	var amountExcTax = kendo.parseFloat($j("input:hidden[id$=':" + rowIndex + ":hidAmoutPriceExcTax']").val());
	if (amountExcTax == null) amountExcTax = 0;
	// 金額（税込み） 
	var amoutPriceIncTax = kendo.parseFloat($j("input:hidden[id$=':" + rowIndex + ":hidAmoutPriceIncTax']").val());
	if (amoutPriceIncTax == null) amoutPriceIncTax = 0;
	return commUtils.setData(rowIndex, unitPrice, tax, service, nums, numSepcTax, unitPriceKbn, productId, actionType, false, payType, hidPlandetail, amountExcTax, amoutPriceIncTax);
}
/*
* 初期重置RES处理
*/
function getResInfoFun(rowIndex, res){
	var hasNumSepcTaxSum = 0, // 合計金額(税抜) 列 含有的宿泊税
		newNumSepcTaxSum = 0, // 特別税        列 显示的宿泊税
		_newRes = $j.extend(true, {}, res), // 防止地址共存
		_row = getRowInfoFun(rowIndex), // 获取当前行数据集
		_hotelTax = getHotelTaxInfoFun(); // 获取カスタムメタデータ型:宿泊税定义信息
	// 宿泊税有效, 处理种别是室料
	if(_hotelTax.isEffectiveFlg && _row.actionType == _CONST_PRICE_ROOM_TYPE){
		// 获取宿泊税计算后数据集
		var _res = commUtils.getSepcTaxInfoFun(res, _row, _hotelTax.data);
		_newRes = _res.res; // 最终的RES「置换」
		hasNumSepcTaxSum = _res.hasNumSepcTaxSum; // 合計金額(税抜) 列 含有的宿泊税「赋值」
		newNumSepcTaxSum = _res.newNumSepcTaxSum; // 特別税        列 显示的宿泊税「赋值」
	// 处理种别是PLAN
	} else if(_row.actionType == ACTTYPE_PLAN){
		var _data = commUtils.getPlanResInfoFun(_planItemMap.get(getPlanKeyFun(rowIndex)), _row, _hotelTax, isReducedTaxFlg);
		// TODO: 目前之后处理只用的这里个变量「只置换了这两个变量」* 进来了就说明功能已经打开的
		_newRes.priceIncTax = _data.priceIncTaxSum; // 最新值设定「合計金額」
		_newRes.priceExcTax = _data.priceExcTaxSum; // 最新值设定「合計金額(税抜)」
		hasNumSepcTaxSum = _data.hasNumSepcTaxSum; // 合計金額(税抜) 列 含有的宿泊税「赋值」
		newNumSepcTaxSum = _data.newNumSepcTaxSum; // 特別税        列 显示的宿泊税「赋值」
	}
	// 设置特别税列数据
	if(_hotelTax.isEffectiveFlg){
		$j("input[id$=':" + rowIndex + ":hidSpecialTax']").val(newNumSepcTaxSum); // 最新的特别税「隐藏域赋值」
		$j("span[id$=':" + rowIndex + ":specialTax']").text(newNumSepcTaxSum); // 最新的特别税「显示域赋值」
		_row.specialTax = newNumSepcTaxSum; // 最新的特别税「赋值」
	}
	return {
		res : _newRes,
		numSepcTax : _row.specialTax
	};
}
/*
* PLAN明细数据更新处理
*/
function updatePlanItemMapFun(rowIndex){
	var _row = getRowInfoFun(rowIndex); // 获取当前PLAN行数据集
	if(_row.actionType != ACTTYPE_PLAN) return;
	var planKey = getPlanKeyFun(rowIndex), // 获取当前PLAN的KEY
		_planItemLst = _planItemMap.get(planKey); // 当前PLAN明细ARR
	if(commUtils.isUndefined(_planItemLst)) return;
	var wkLen = _planItemLst.length; // PLAN明细数量
	if(wkLen == 0) return;
	// 最新的当前PLAN明细ARR
	var newPlanItemLst = new Array();
	for(var i = 0; i < wkLen; i++){
		// 当前明细数据集
		var _data, // 当前行的数据集
			_pd = $j.extend(true, {}, _planItemLst[i]);
		// 当前明细的会計商品ID「最新的防止变更会计商品，不能直接用_pd.productId」
		var $productId = $j("#"+rowIndex+"_prodid_"+i);
		if($productId.length > 0){
			productId = $productId.val();
			// 单价
			var unitPrice = kendo.parseFloat($j("#"+rowIndex+"_prodPrice_"+i).val());
			if(unitPrice == null) unitPrice = 0;
			// 消费税
			var tax = kendo.parseFloat($j("#"+rowIndex+"_workHidTaxRate_"+i).val());
			if(tax == null) tax = 0;
			// サビース料
			var serviceRate = kendo.parseFloat($j("#"+rowIndex+"_workHidServiceTaxRate_"+i).val());
			if(serviceRate == null) serviceRate = 0;
			// 商品処理種別
			var actionType = $j("#"+rowIndex+"_workHidActType_"+i).val();
			// 当前行设置最新的数据集
			_data = commUtils.setData(_row.rowIndex, unitPrice, tax, serviceRate, _row.nums, _pd.specialTax, _row.unitPriceKbn, productId, actionType, true);
		} else{
			_data = commUtils.setData(_row.rowIndex, _pd.unitPrice, _pd.tax, _pd.serviceRate, _row.nums, _pd.specialTax, _row.unitPriceKbn, _pd.productId, _pd.actionType, true);
		}
		// PUSH最新的数据集
		newPlanItemLst.push(_data);
	}
	// 更新最新的PLAN明细数据集
	_planItemMap.set(planKey, newPlanItemLst);
}
// 2019/07/30 軽減税率機能対応 WGCH END
// 2019/09/15 指定日自动记忆機能対応 WGCH BEGIN
var isChkInDayFlg = {!isChkInDayFlg};
var userId = "{!JSENCODE(userId)}";
function setCheckInDayCookieFun(){
	if(!isChkInDayFlg) return;
	var cookVal = getQueryDate();
	// DBへ情報格納
	JINYACONNECT.CONFIG.saveKrepConfig('CHECKINDAY', cookVal, userId, '');
}
// 2019/09/15 指定日自动记忆機能対応 WGCH END
// 2019/01/15 タイムテーブルを開いた際、デフォルトで表示される部屋タイプを指定できるようにする by zy BEGIN
function initDepartmentSel(muliteSel,values){
	// ツール　と　選択部署　あり
	if (muliteSel && values) {
		var departArr = values.split(',');
		if (departArr.length > 0) {
			var selector = [];
			departArr.forEach(function(depart){
				if (depart != "") selector.push("option[value='" + depart + "']");
			});
			if (selector.length > 0) { 
				muliteSel.find(selector.join(',')).prop("selected",true);
				muliteSel.multiselect('refresh');
			}
		}
	}
}
// 2019/01/15 タイムテーブルを開いた際、デフォルトで表示される部屋タイプを指定できるようにする by zy END
// 2019/02/15 複数部屋でなくても）泊数の変更ができなくなってしまいます。 by zy BEGIN
// 複数部屋泊数変更対応
function daysChange(){
	// 該当入力対象
	var current = $j(event.currentTarget);
	var daysInt = kendo.parseInt(current.val());
	var orgValue = current.attr("orgvalue");
	// 泊数入力正常
	if (daysInt != null) {
		// 変更泊数計算
		var curRow = current.closest("tr");
		var uid = curRow.attr("id");
		var entryDate = $j(".entryDate",curRow).text();
		var entryDt = kendo.parseDate(entryDate,JINYACONNECT.DateFormat);
		var departDt = entryDt.addDays(daysInt);
		var departDtStr = kendo.toString(departDt,JINYACONNECT.DateFormat);
		var departDtime = kendo.parseDate(departDtStr + ' ' + guidMap[uid].departTime, JINYACONNECT.DateTmFormat);
		// 変更値設定
		$j(".departDate",curRow).text(departDtStr);
		guidMap[uid].departDate = departDtStr;
		guidMap[uid].departDt = departDtime;
		current.attr("orgvalue",daysInt);
	} else {
		current.val(orgValue);
	}
}
// 2019/02/15 複数部屋でなくても）泊数の変更ができなくなってしまいます。 by zy END
// 2019/02/15 入力指定日チェック追加　by zy BEGIN
// 入力日付保持
function saveInputDate(){
	var target = $j(event.currentTarget);
	var inputDate = kendo.parseDate(target.val());
	if (inputDate != null) target.attr("orgValue", kendo.toString(inputDate,JINYACONNECT.DateFormat));
}
// チェック入力日付
function checkInputDate(){
	var target = $j("input[id$=queryDate]");
	var inputDate = kendo.parseDate(target.val());
	if (inputDate == null) inputDate = target.attr("orgValue");
	var dateStr = kendo.toString(inputDate,JINYACONNECT.DateFormat);
	target.val(dateStr);
}
// 2019/02/15 入力指定日チェック追加　by zy END
// 2019/04/15 ベネフィットホテル様より改善要望 by zy BEGIN
function initProductWin(){
  // 2019/09/19 Security Check BY zyz BEGIN
  var bookingEstFlag = "{!JSENCODE(TEXT($Setup.CommDefine__c.ps__ProductSearchLayoutKbn__c))}";
  // 2019/09/19 Security Check BY zyz END
  if (bookingEstFlag != "1") return;
  // 既存会計商品画面
  var searchWin = $j("#producdSearchWindow");
  // 新規会計商品画面
  if (searchWin.length == 0) {
    searchWin = $j("<div id='producdSearchWindow' / >");
    $j("body").append(searchWin);
  }
  // KENDOUI初期化
  if (searchWin.data("kendoWindow") == undefined) {
    window.setFocusOnLoad = function (){};
    var src = '/apex/AccountMasterInput?spcd={!JSENCODE(branchShopNm)}&callback=window.parent.ProdcutSet';
    var orgWd = window.localStorage.J_SEARCH_WIN_WD;
    var orgHt = window.localStorage.J_SEARCH_WIN_HT;
    var posTop = window.localStorage.J_SEARCH_WIN_TOP;
    var posLeft = window.localStorage.J_SEARCH_WIN_LEFT;
    if (orgWd == undefined) orgWd = 540;
    if (orgHt == undefined) orgHt = 550;
    searchWin.kendoWindow({
        visible: false,
        content: src,
        iframe: true,
        width: orgWd,
        height : orgHt,
        title : '商品選択',
        actions: ["close"],
        autoFocus: false,
        dragstart:function(){
          var off = this.wrapper.offset();
          this.wrapper.css("position","absolute");
          this.wrapper.offset(off);
        },
        // 画面位置保持
        dragend:function(){
          var offset = this.wrapper.offset();
          this.wrapper.css("position","fixed");
          this.wrapper.offset(offset);
          var pos = this.wrapper.get(0).getClientRects()[0];
          window.localStorage.J_SEARCH_WIN_TOP = pos.top;
          window.localStorage.J_SEARCH_WIN_LEFT = pos.left;
        },
        // 画面サイズ保持
        resize:function(){
          window.localStorage.J_SEARCH_WIN_WD = this.wrapper.width();
          window.localStorage.J_SEARCH_WIN_HT = this.wrapper.height();
        }
    });
    searchWin.data("kendoWindow")._shouldFocus = function(){};
    var wrapWindow = $j("#producdSearchWindow").closest("div.k-window");
    wrapWindow.find(".k-i-close").bind("click",function(){
      closeProductWin();
    });
    $j("#producdSearchWindow").data("kendoWindow").center();
    var cssObj = {"position":"fixed","left":"60%"};
    if(posTop != undefined) cssObj.top = kendo.parseFloat(posTop);
    if(posLeft != undefined) cssObj.left = kendo.parseFloat(posLeft);
    // 画面様式設定
    wrapWindow.css(cssObj);
  }
}
function clearProdWin(){
  if ("lastIndex" in window) delete window.lastIndex;
  if ("productId" in window) delete window.productId;
  closeProductWin();
}
function closeProductWin(){
  var bookingEstFlag = "{!$Setup.CommDefine__c.ps__ProductSearchLayoutKbn__c}";
  if (bookingEstFlag != "1") return;
  $j("#producdSearchWindow").data("kendoWindow").close();
}
function openProductWin(index){
  var kendoWin = $j("#producdSearchWindow").data("kendoWindow");
  // kendoWin.index = index;
  kendoWin.open();
}
// 選択会計CALLBACK
function ProdcutSet(rest) {
  var data = $j.extend({},rest);
  if (data.rowIndex != undefined) {
  	// 設定内容一時保持
    window.productId = data.productId;
    window.lastIndex = data.rowIndex;
    // 商品自動情報計算
    autoGetProductInfo(data);
    // 2020/07/30 入湯税の自動入力機能について改善 zyz BEGIN
    // 触发追加入汤税行
    ACTCUSTOM.BATHTAXAUTOSETFUN(data.rowIndex, data.bTaxAccMstItem);
    // 2020/07/30 入湯税の自動入力機能について改善 zyz END
    // 選中入力行
    $j("tr.tranDetailRow").has(".pointIndex[rowindex='" + data.rowIndex + "']").focus();
  } else {
    getNextRow(data);
  }
}
// 会計設定行取得
function getNextRow(data){
  // 処理行
  var dataRows = $j("tr.tranDetailRow");
  // 非空行
  var noBlankRows = dataRows.has("[id$=hidProductId][value][value!='']");
  // 空行
  var blankRows = dataRows.not(noBlankRows);
  // 行追加
  if (blankRows.length == 0) {
    // 行追加後処理
    return addRowCallBack = function(){
      // 既存処理削除
      delete window.addRowCallBack;
      // 会計商品再処理
      ProdcutSet(data);
    },checkAddTranItem();
  }
  // 前回設定会計商品
  var preProdId,preProdIdx;
  if ("productId" in window) preProdId = window.productId;
  if ("lastIndex" in window) preProdIdx = window.lastIndex;
  // 2020/04/30 複数のプランとそれぞれのプランの人数を選択し機能対応 WGCH BEGIN
  // 同じ会計商品数量追加
  // if ( preProdId == data.productId) {
  if ( preProdId == data.productId && !orderNumsFlg) {
  // 2020/04/30 複数のプランとそれぞれのプランの人数を選択し機能対応 WGCH END
    var prodNums = $j("input:text[id$=':" + window.lastIndex + ":orderNums']");
    // 数量
    var nums = kendo.parseFloat(prodNums.val());
    // 初期化
    if (nums == null) nums = 0;
    nums++;
    prodNums.val(nums);
    return prodNums.change.call(prodNums);
  }
  // 空白行会計設定
  if (blankRows.length > 0) {
    data.rowIndex = blankRows.first().find(".pointIndex ").attr("rowindex");
    return ProdcutSet(data);
  }
}
// 2019/04/15 ベネフィットホテル様より改善要望 by zy END
// 2019/04/30 増税仮対応 WGCH BEGIN
// 标识符-不自动进入増税处理函数
var CUST_AUTOGETPRODUCTMODE_RETURN = 'RETUEN';
// 标识符-clearOnclick
var CUST_CLICKMODE_CLEAR = 'CLEAR';
// 增税商品数据集
var taxIncInfo = '{!taxIncMstItemJson}';
// 増税处理函数
function autoSetTaxIncProductFun(click_mode, productId){
	// 增税商品数据集转成sobj
	var taxIncMstDs = $j.parseJSON(taxIncInfo);
	if(taxIncMstDs == undefined) return;
	// 不存在有效的增税商品 跳出处理
	if(taxIncMstDs.taxIncMst  == undefined || taxIncMstDs.taxIncMstId == "") return;
	// clear 增税商品时跳出处理
	if(click_mode == CUST_CLICKMODE_CLEAR && productId == taxIncMstDs.taxIncMstId) return;
	// 获取当前到着日
	var queryDate = kendo.toString(pEntryTime, JINYACONNECT.DateFormat);
	// 当前指定日 < 定义開始日 || 当前指定日 > 終了日 跳出处理
	if(queryDate < taxIncMstDs.startDate || queryDate > taxIncMstDs.endDate) return;
	// 获取指定的增税商品Input
	var $taxIncMstInput = $j("[id$=hidProductId][value][value = '" + taxIncMstDs.taxIncMstId  + "']");
	// 有效处理行Array(消费税 > 0)
	var nowProdArr = new Array();
	// 获取明细所有行
	var $trRowAll = $j("[id$=BookEstTable] tbody tr.tranDetailRow");
	$trRowAll.each(function(){
		var $hidProductId = $j(this).find('[id$=hidProductId]');
		if($hidProductId.val() !=''){
			// 当前行-RowNo
			var rowIndex = $hidProductId.attr("rowindex") * 1;
			// 2019/05/31 消費税の端数計算は見積書と一致しなかった、対応 WGCH BEGIN
			var hidProductId = $j("[id$=':" + rowIndex + ":hidProductId']").val();
			if(taxIncMstDs.filterMstIdSet.indexOf(hidProductId) >= 0 ) return true;
			// 数量
			var nums = kendo.parseFloat($j("input:text[id$=':" + rowIndex + ":orderNums']").val());
			if (nums == null) nums = 0;
			if(nums <= 0) return true;
			// 2019/05/31 消費税の端数計算は見積書と一致しなかった、対応 WGCH END
			// 当前行-消費税率
			var tax = kendo.parseFloat($j("input:hidden[id$=':" + rowIndex + ":hidTaxRateType']").val());
			if (tax == null) tax = 0;
			// 集计消费税 > 0 的Tr
			if(tax > 0) nowProdArr.push(this);
		}
	});
	// 处理有效行
	if(nowProdArr.length > 0){
		var wkRowIndex, // 最终增税商品RowNo
			wkPriceTax = 0; // 最终增税商品单价(数量固定1)
		for (var i = 0; i < nowProdArr.length;i++) {
			// 当前行-RowNo
			var rowIndex = $j(nowProdArr[i]).find('[id$=hidProductId]').attr("rowindex") * 1;
			// 当前行-消費税率
			var tax = kendo.parseFloat($j("input:hidden[id$=':" + rowIndex + ":hidTaxRateType']").val());
			if (tax == null) tax = 0;
			// 当前行-金額（税込み）
			var amountIncTax = kendo.parseFloat($j("input[id$=':" + rowIndex + ":hidAmoutPriceIncTax']").val());
			if (amountIncTax == null) amountIncTax = 0;
			// 当前行-金額（税抜き）
			var amountExcTax = kendo.parseFloat($j("input[id$=':" + rowIndex + ":hidAmoutPriceExcTax']").val());
			if (amountExcTax == null) amountExcTax = 0;
			// 当前行-特別税
			var numSepcTax = kendo.parseFloat($j("input[id$=':" + rowIndex + ":hidSpecialTax']").val());
			if (numSepcTax == null) numSepcTax = 0;
			/*
			* commUtils.mathNumSub(A, B) => A - B
			* commUtils.mathNumAdd(A, B) => A + B
			* commUtils.mathNumDiv(A, B) => A / B
			* commUtils.mathNumMulti(A, B) => A * B
			算法公式:
				增税金额 = 增税率 / 商品-消费税率 * 商品-消费税金额
			*/
			// 当前行-商品-消费税金额 => 当前行-金額（税込み）-(减) 当前行-金額（税抜き）-(减) 当前行-特別税
			var priceTax = commUtils.mathNumSub( commUtils.mathNumSub(amountIncTax, amountExcTax), numSepcTax);
			// 增税金额 = 增税率 / 商品-消费税率 * 商品-消费税金额
			if(tax > 0){ // 虽然此tax一定大于0，防御处理
				// taxIncMstDs.taxIncRate => 增税率
				wkPriceTax = commUtils.mathNumAdd( wkPriceTax, commUtils.mathNumMulti( commUtils.mathNumDiv(taxIncMstDs.taxIncRate, tax), priceTax));
			} 
		}
		// 如果已存在增税商品, 把新的增税商品-RowNo 替换成 当前存在的增税商品-RowNo*防止多笔增税商品
		if( $taxIncMstInput.length > 0) wkRowIndex = $taxIncMstInput.eq(0).attr("rowindex");
		else{
			// 処理行
			var dataRows = $j("tr.tranDetailRow");
			// 非空行
			var noBlankRows = dataRows.has("[id$=hidProductId][value][value!='']");
			// 空行
			var blankRows = dataRows.not(noBlankRows);
			if(blankRows.length > 0) wkRowIndex = blankRows.eq(0).find('[id$=hidProductId]').attr("rowindex") * 1;
			else {
				// 行号处理
				refreshOrder(true);
				checkAddTranItem();
				return;
			}
		}
		// 最终增税商品单价(数量固定1) 小数点处理
		// 2019/05/31 消費税の端数計算は見積書と一致しなかった、対応 WGCH BEGIN
		// wkPriceTax = commUtils.mathRound(wkPriceTax, JINYACONNECT.PRODUCT.CAL.POINT_LEN, JINYACONNECT.PRODUCT.CAL.ROUND_MODE);
		wkPriceTax = commUtils.mathRound(wkPriceTax, JINYACONNECT.PRODUCT.CAL.POINT_LEN, taxIncMstDs.pointRoundModeStr);
		// 2019/05/31 消費税の端数計算は見積書と一致しなかった、対応 WGCH END
		// 数据集-克隆处理-防止地址共存【true: 深度克隆; false: 浅度克隆(def) 】
		_thisTaxIncMstDs = $j.extend(true, {}, taxIncMstDs);
		// 最终增税商品RowNo赋值
		_thisTaxIncMstDs.taxIncMst.rowIndex = wkRowIndex;
		// 最终增税商品单价(数量固定1)赋值
		_thisTaxIncMstDs.taxIncMst.unitPrice = wkPriceTax;
		// 最终增税商品单价 > 0 时再处理追加或更新 增税商品
		if(wkPriceTax > 0) autoGetProductInfo(_thisTaxIncMstDs.taxIncMst, CUST_AUTOGETPRODUCTMODE_RETURN);
		// 如果当前行存在增税商品数据=>clear当前行数据
		else if($j("[id$='" + wkRowIndex + ":hidProductId'][value][value = '" + _thisTaxIncMstDs.taxIncMstId  + "']").length > 0){
			// 当前没增税金额时, 清空增税商品行
			$j("[id$='clearProduct'][rowindex='" + wkRowIndex +"']").click();
		}
	} else if( $taxIncMstInput.length > 0){
		// 当前没有处理行时, 清空增税商品行
		var wkRowIndex =  $taxIncMstInput.eq(0).attr("rowindex");
		$j("[id$='clearProduct'][rowindex='" + wkRowIndex +"']").click();
	}
}
// 2019/04/30 増税仮対応 WGCH END
// 2019/05/30 タイムテーブルの部屋移動場合、確認メッセージを表示機能が必要 by zy BEGIN
function firmMessage(roomId,orgRoomId,currentIdx,orgIdx){
	var message = 'ご予約情報を下記ように変更される、よろしいですか\n';
	var ohterMsg = '';
	if (roomId != orgRoomId) {
		ohterMsg += '部屋：' + getRoomNmById(orgRoomId) + ' -> ' + getRoomNmById(roomId) ;
	}
	if (currentIdx != orgIdx) {
		if (ohterMsg != '') ohterMsg += '\n';
		ohterMsg += '到着日時：' + kendo.toString(getDateByIndex(orgIdx),JINYACONNECT.DateTmFormat) + ' -> ' + kendo.toString(getDateByIndex(currentIdx),JINYACONNECT.DateTmFormat);
	}
	return message + ohterMsg;
}
function getRoomNmById(roomId){
	var name = $j("tr[name='" + roomId + "']").attr("roomname");
	if (name == undefined) name = "";
	return name;
}
// 2019/05/30 タイムテーブルの部屋移動場合、確認メッセージを表示機能が必要 by zy END
// 2020/04/30 複数のプランとそれぞれのプランの人数を選択し機能対応 WGCH BEGIN
function getQueryEntryDate(){
	var entryDt = $j("[id$=entryDate]");
	return entryDt[0].tagName == "SPAN" ? entryDt.text() : entryDt.val();
}
function getRoomTypeId(){
	// 部屋Id
	var roomTypeId = '';
	var checkRoomIdELement = $j("input[name=parentRoom]:checked");
	if (checkRoomIdELement.length > 0) {
		var roomId = checkRoomIdELement.val();
		roomTypeId = Room_Map[roomId].typeId;
	} else {
		var roomStr = $j("input[id$=hidRoomMsg]").val();
		var	roomIds = roomStr.split(",");
		if(roomIds.length > 0){
			var roomId = roomIds[0].split("_");
			if(roomId.length > 1) roomTypeId = roomId[1];
		}
	}
	return roomTypeId;
}
function openPlanWinFun(){
	if (!JINYACONNECT.CUSTOM.checkIfHadRequiredItem()) return false;
	// 既存会計商品画面
	var searchWin = $j("#openPlanWindow");
	// 新規会計商品画面
	if (searchWin.length == 0) {
		searchWin = $j("<div id='openPlanWindow' / >");
		$j("body").append(searchWin);
	}
	var roomTypeId = getRoomTypeId();
	var queryDate = getQueryEntryDate();
	var src = '/apex/BasePlanSetupView?callback=window.parent.ProdcutPlanSet&roomType=' + roomTypeId + '&queryDate=' + queryDate;
	// KENDOUI初期化
	if (searchWin.data("kendoWindow") == undefined) {
		window.setFocusOnLoad = function (){};
		var orgWd = window.localStorage.J_SEARCH_WIN_WD;
		var orgHt = window.localStorage.J_SEARCH_WIN_HT;
		var posTop = window.localStorage.J_SEARCH_WIN_TOP;
		var posLeft = window.localStorage.J_SEARCH_WIN_LEFT;
		if (orgWd == undefined) orgWd = 540;
		if (orgHt == undefined) orgHt = 550;
		searchWin.kendoWindow({
			visible: false,
			content: src,
			iframe: true,
			width: 760,
			height : 550,
			title : 'ベースプラン商品選択',
			actions: ["close"],
			autoFocus: false,
			dragstart:function(){
				var off = this.wrapper.offset();
				this.wrapper.css("position","absolute");
				this.wrapper.offset(off);
			},
			// 画面位置保持
			dragend:function(){
				var offset = this.wrapper.offset();
				this.wrapper.css("position","fixed");
				this.wrapper.offset(offset);
				var pos = this.wrapper.get(0).getClientRects()[0];
				window.localStorage.J_SEARCH_WIN_TOP = pos.top;
				window.localStorage.J_SEARCH_WIN_LEFT = pos.left;
			},
			// 画面サイズ保持
			resize:function(){
				window.localStorage.J_SEARCH_WIN_WD = this.wrapper.width();
				window.localStorage.J_SEARCH_WIN_HT = this.wrapper.height();
			}
		});
		searchWin.data("kendoWindow")._shouldFocus = function(){};
		var wrapWindow = searchWin.closest("div.k-window");
		wrapWindow.find(".k-i-close").bind("click",function(){
			closeProductWin();
		});
		searchWin.data("kendoWindow").center();
		var cssObj = {"position":"fixed","left":"35%"};
		cssObj.top = kendo.parseFloat("80");
		// 画面様式設定
		wrapWindow.css(cssObj);
	} else {
		var openPlan = $j("#openPlanWindow").getKendoWindow();
		openPlan.element.children().remove();
		openPlan.options.content.url = src;
		openPlan.refresh();
	}
	var kendoWin = searchWin.data("kendoWindow");
	kendoWin.open();
}
var orderNumsFlg = false;
// 選択会計CALLBACK
function ProdcutPlanSet(restLst) {
	orderNumsFlg = true;
	// 空白行数取得
	var blankRows = getBlankRows();
	// 2020/06/01 bug fix BY zyz BEGIN
	var serachWin = $j("#openPlanWindow").data("kendoWindow");
	serachWin.close();
	// 2020/06/01 bug fix BY zyz END
	// 行追加の場合
	if (blankRows.length < restLst.length) {
		if (!JINYACONNECT.CUSTOM.checkIfHadRequiredItem()){
			//第一个项目选中
			$j("input:not(:hidden),select,textarea","[id$=createPageBlock] .dataCol.first:first").focus();
			return false;
		}
		// 関数クリア
		if ("addRowCallBack" in window) delete window.addRowCallBack;
		// 行追加後、処理対応
		window.addRowCallBack = function(){
			ProdcutPlanSet(restLst);
			delete window.addRowCallBack;
		}
		$j("input[id$=hidaddRowsMan]").val(restLst.length);
		// 行追加開始
		addTranItemFun();
		return;
	}
	for (var i=0; i < restLst.length;i++) {
		var rest = restLst[i];
		var data = $j.extend({},rest);
		if (data.rowIndex != undefined) {
			window.productId = data.productId;
			window.lastIndex = data.rowIndex;
			autoGetProductInfo(data);
			$j("input[id$=productName]").eq(data.rowIndex).focus();
		} else {
			getNextRow(data);
		}
	}
	orderNumsFlg = false;
}
// 空行取得
function getBlankRows(dataRows){
	// 処理行
	if (dataRows == undefined) dataRows = $j("tr.tranDetailRow");
	// 非空行
	var noBlankRows = dataRows.has("[id$=hidProductId][value][value!='']");
	// 空行
	var blankRows = dataRows.not(noBlankRows);
	return blankRows;
}
// 2020/04/30 複数のプランとそれぞれのプランの人数を選択し機能対応 WGCH END
</script>
<style>
.border{
	border:2px dotted red;
	position: absolute;
	display: none;
}
/* Drop範囲入る表示用 */
.drop-ui-state-hover {
	color : #ffa500
}
.drop-ui-state-hover-noAssignWin {
	border: 2px dashed #ffa500;
}
</style>
<div id="noAssignLeadListWindow" >
	<div id="noAssignLeadListView"></div>
</div>
<!-- 2017/03/29 レジカード一括印刷対応 END -->
<script id="treeview-template" type="text/x-kendo-tmpl">
<span class="#: item.cssClass #" 
	childrenItems="#:item.subdataid#"
	groupflg="#:item.isHasChildren#" 
	leadUid="#:item.id#" 
	roomTypeUnm="#=item.roomTypeName#" 
	roomTypeUid="#:item.roomTypeId#" 
    starttime="#:item.startDateTime#"
    endtime="#:item.endDateTime#"
	dataid="#:item.id#" >
	# if (! item.isHasChildren ) { #	
		# if (item.statusIcon != "" ) { #
		<img src="#= item.statusIcon #" style="width:18px;height:18px;vertical-align: middle;" />			
		# }	#
		<a href="/#=item.id #" target="_blank">#=item.text #</a>
	# } else { #
		#=item.text #
	# }	#
	</span>
</script>
<c:LeadDetailWinComp shopCode="{!branchShopNm}" containerId="detailWindow" callbackFun="refreshRoomByLeadId"/>
<!-- 2018/02/22 未割り当て ワィンドウ追加　by　zy　END -->
<!-- 2019/04/30 タイムテーブルを開き、スクロール by zy BEGIN -->
<span id="camera" class="k-button editIcon" onclick="mobileActionChg()">
    <span class="k-icon k-i-edit" style="font-size: 60px;"></span>
    <span class="k-icon k-i-move" style="font-size: 60px;display: none"></span>
</span>
<!-- 2019/04/30 タイムテーブルを開き、スクロール by zy END -->
<!-- 2019/09/19 Security Check BY zyz BEGIN -->
<input type="hidden" value="{!$Setup.CommDefine__c.ps__TimeTableConfirmFlg__c}" id="hidTimeTableConfirmFlg" />
<!-- 2019/09/19 Security Check BY zyz END -->
<!-- 2021/03/31 予約ポップやルームインジケータから予約作成する際に郵便番号検索が使えるようにして欲しい by zy BEGIN -->
<c:ZipCodeSearchComp />
<!-- 2021/03/31 予約ポップやルームインジケータから予約作成する際に郵便番号検索が使えるようにして欲しい by zy END -->
</apex:page>