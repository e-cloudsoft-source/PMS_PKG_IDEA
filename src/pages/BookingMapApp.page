<apex:page showHeader="false" sidebar="false" controller="BookingMapApp">
 <html>
  <head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
	<!-- Load Css Style --> 
	<apex:stylesheet value="{!URLFOR($Resource.yahooFiles, 'css/skin.css')}"/>
	<apex:stylesheet value="{!URLFOR($Resource.kendoFiles, 'styles/kendo.common.min.css')}"/>
	<apex:stylesheet value="{!URLFOR($Resource.kendoFiles, 'styles/kendo.default.min.css')}"/>
	
	<!-- Load Js Core Lib -->
	<apex:includeScript value="{!URLFOR($Resource.kendoFiles, 'js/jquery.min.js')}"/>
	<apex:includeScript value="{!URLFOR($Resource.kendoFiles, 'js/jquery-ui-1.10.2.custom.min.js')}"/>
	<apex:includeScript value="{!URLFOR($Resource.kendoFiles, 'js/kendo.web.min.js')}"/>
	
	<apex:includeScript value="{!URLFOR($Resource.queryfiles, 'js/jquery.blockUI.js')}"/>
	
	<!-- Load YUI -->
	<apex:includeScript value="{!URLFOR($Resource.yahooFiles, 'js/yahoo-dom-event.js')}"/>
	<apex:includeScript value="{!URLFOR($Resource.yahooFiles, 'js/container-min.js')}"/>
	<apex:includeScript value="{!URLFOR($Resource.yahooFiles, 'js/animation-min.js')}"/>
	<apex:includeScript value="{!URLFOR($Resource.yahooFiles, 'js/dragdrop-min.js')}"/>
	
	<!-- 2014/11/27 CKEDITOR追加 -->
	<apex:includeScript value="{!URLFOR($Resource.ckeditor, 'ckeditor.js')}" />
	<apex:includeScript value="{!URLFOR($Resource.ckeditor, 'util.js')}" />
	
	<!-- Load CommJsLib -->
	<apex:includeScript value="{!$Resource.CommJs}"/>
	<apex:includeScript value="{!URLFOR($Resource.mapFile, 'js/wheater.js')}" />
	<apex:includeScript value="{!$Resource.planExtendPlug}"/>
	<!-- Warning Message Push -->
	<apex:includeScript value="{!URLFOR($Resource.CommetD, 'js/cometd.js')}" />
	<apex:includeScript value="{!URLFOR($Resource.CommetD, 'js/json2.js')}" />
	<apex:includeScript value="{!URLFOR($Resource.CommetD, 'js/jquery.cometd.js')}" />
    <!--<script type="text/javascript" src="https://maps.google.com/maps/api/js?sensor=false&"></script>
    <apex:includeScript value="{!URLFOR($Resource.mapFile, 'js/mapApi.js')}" />-->
    <script type="text/javascript" src="https://maps.google.com/maps/api/js?sensor=false&key=AIzaSyCh8UX6dPCW6YOW8e2wSf3v-7_Bvo5bdy4"></script>
    <script type="text/javascript" src="https://cdn.rawgit.com/googlemaps/v3-utility-library/master/infobox/src/infobox_packed.js"></script>
    <!---->
    <apex:includeScript value="{!URLFOR($Resource.mapFile, 'js/infobox_packed.js')}" />
    <script type="text/javascript" src="/soap/ajax/20.0/connection.js"></script>
    <script type="text/javascript" src="/soap/ajax/20.0/apex.js"></script>
    
    <style type="text/css">
    	span.dateInput span.dateFormat{
		   display:none;
		}
		div#functionWindow{
			position: fixed;
			height:800px;
		}
		.customBox {
	      background: yellow;
	      border: 1px solid black;
	      position: absolute;
	    }
    </style>
    <script type="text/javascript">
    //<![CDATA[
    var $j = jQuery.noConflict();
    var JS_APPNS = "{!JSENCODE($Setup.CommDefine__c.ps__AppNS__c)}";
                                                                        /****** Global Variables ******/
    var centreLat=0.0;
    var centreLon=0.0;
    var initialZoom=3;                                                  //Initial Zoom Level
    var imageWraps=false;                                               //SET THIS TO false TO PREVENT THE IMAGE WRAPPING AROUND

    var map;                                                            //the GMap3 itself
    var gmicMapType;
	var emptyRoomCount = 0;
	var leadRoomCount = 0;
	var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
	var JS_SYS_DEVICE_MOBILE_FLG = kendo.support.mobileOS;
	var roomMessages = new Object();
	var JsonStr = $j("input[id$=hidRoomMessageJson]").val();
	var roomMsgJson = JSON.parse('{!JSENCODE(roomMessageJson)}');
	//JSON.parse(JsonStr);
	var roomMarkObj = new Object();
	var roomLst = new Array();
	var mapSource = "{!URLFOR($Resource[mapTilesRootPath],mapTilesSubPath+'/')}";
	var pinColor = "7CCD7C";
    //var pinImage = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|" + pinColor,
    var pinImage = new google.maps.MarkerImage("{!URLFOR($Resource.mapFile, 'image/chart2.png')}",
        new google.maps.Size(21, 34),
        new google.maps.Point(0,0),
        new google.maps.Point(10, 34));
    //var pinShadow = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_shadow",
    var pinShadow = new google.maps.MarkerImage("{!URLFOR($Resource.mapFile, 'image/chart.png')}",
        new google.maps.Size(40, 37),
        new google.maps.Point(0, 0),
        new google.maps.Point(12, 35));
    pinColor = "FF3030";
    //var pinLeadImage = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|" + pinColor,
    var pinLeadImage = new google.maps.MarkerImage("{!URLFOR($Resource.mapFile, 'image/chart3.png')}",
        new google.maps.Size(21, 34),
        new google.maps.Point(0,0),
        new google.maps.Point(10, 34));
    //var pinLeadShadow = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_shadow",
    var pinLeadShadow = new google.maps.MarkerImage("{!URLFOR($Resource.mapFile, 'image/chart.png')}",
        new google.maps.Size(40, 37),
        new google.maps.Point(0, 0),
        new google.maps.Point(12, 35));
    var pinFireImage = new google.maps.MarkerImage("{!URLFOR($Resource.mapFile, 'image/1.gif')} ",
    	 new google.maps.Size(21, 34),
        new google.maps.Point(0,0),
        new google.maps.Point(10, 34));
   	var pinWarnImage = new google.maps.MarkerImage("{!URLFOR($Resource.mapFile, 'image/2.gif')} ",
    	new google.maps.Size(60, 60),
        new google.maps.Point(0,0),
        new google.maps.Point(10, 34));
    var pinErrorImage = new google.maps.MarkerImage("{!URLFOR($Resource.mapFile, 'image/1.gif')} ",
    	new google.maps.Size(60, 60),
        new google.maps.Point(0,0),
        new google.maps.Point(10, 34));
    var pinInfoImage = new google.maps.MarkerImage("{!URLFOR($Resource.mapFile, 'image/White.png')} ",
    	new google.maps.Size(60, 60),
        new google.maps.Point(0,0),
        new google.maps.Point(10, 34));
    //チェックアウト完
	var JS_LEADSTATUS_CHECKOUT='{!JSENCODE(mulitiCheckoutLabel)}';
    //adapded from this example http://code.google.com/apis/maps/documentation/javascript/overlays.html#CustomOverlays
     //text overlays
    function TxtOverlay(pos, txt, cls, map) {

      // Now initialize all properties.
      this.pos = pos;
      this.txt_ = txt;
      this.cls_ = cls;
      this.map_ = map;

      // We define a property to hold the image's
      // div. We'll actually create this div
      // upon receipt of the add() method so we'll
      // leave it null for now.
      this.div_ = null;

      // Explicitly call setMap() on this overlay
      this.setMap(map);
    }

    TxtOverlay.prototype = new google.maps.OverlayView();



    TxtOverlay.prototype.onAdd = function() {

      // Note: an overlay's receipt of onAdd() indicates that
      // the map's panes are now available for attaching
      // the overlay to the map via the DOM.

      // Create the DIV and set some basic attributes.
      var div = document.createElement('DIV');
      div.className = this.cls_;

      div.innerHTML = this.txt_;

      // Set the overlay's div_ property to this DIV
      this.div_ = div;
      var overlayProjection = this.getProjection();
      var position = overlayProjection.fromLatLngToDivPixel(this.pos);
      div.style.left = position.x + 'px';
      div.style.top = position.y + 'px';
      // We add an overlay to a map via one of the map's panes.

      var panes = this.getPanes();
      panes.floatPane.appendChild(div);
    }
    TxtOverlay.prototype.draw = function() {


        var overlayProjection = this.getProjection();

        // Retrieve the southwest and northeast coordinates of this overlay
        // in latlngs and convert them to pixels coordinates.
        // We'll use these coordinates to resize the DIV.
        var position = overlayProjection.fromLatLngToDivPixel(this.pos);


        var div = this.div_;
        div.style.left = position.x + 'px';
        div.style.top = position.y + 'px';



      }
      //Optional: helper methods for removing and toggling the text overlay.  
    TxtOverlay.prototype.onRemove = function() {
      this.div_.parentNode.removeChild(this.div_);
      this.div_ = null;
    }
    TxtOverlay.prototype.hide = function() {
      if (this.div_) {
        this.div_.style.visibility = "hidden";
      }
    }

    TxtOverlay.prototype.show = function() {
      if (this.div_) {
        this.div_.style.visibility = "visible";
      }
    }

    TxtOverlay.prototype.toggle = function() {
      if (this.div_) {
        if (this.div_.style.visibility == "hidden") {
          this.show();
        } else {
          this.hide();
        }
      }
    }

    TxtOverlay.prototype.toggleDOM = function() {
      if (this.getMap()) {
        this.setMap(null);
      } else {
        this.setMap(this.map_);
      }
    }

    
	$j(document).ready(function() {
		
	    // キャンセル
	    $j("#cancelBtn").click(function(e){
	       	// Error Message Panel Clear[Attention: Error Class IDはSF設定依存]
	       	$j("span[id$=':inputFormMsg']").hide();
	        YAHOO.force.com.hideMe();
	    });
		YAHOO.force.com.init();
		// Dragできる項目を定義する
		/*
		if(!JS_SYS_DEVICE_MOBILE_FLG){
			$j(".noAssignLead").kendoDraggable({
		        hint: function(e) {
		            // golbal var setup
		            dragLeadElement = $j(e).clone();
		            var marker = new google.maps.Marker({
					    position: roomMark.position,
					    map: map,
					    draggable:true,
					    animation: google.maps.Animation.DROP,
					    shadow: pinLeadShadow
					 });
		            return marker;
		        },
			});
		}*/
		// 2015/10/30 DatePicker Event Remove
		$j("input[id$=':gotoDate']").each(function(i, e){
		    $j(e).attr('onFocus',null);
		});
		// 2015/10/30 DatePicker Position Fix
		$j("input[id$=':gotoDate']").focus(function (e) {
		    DatePicker.pickDate(true, $j(e.target).attr('id'), false);
		    var datePickerTop = parseInt($j('.datePicker').css('top'),10);
		    if(!isNaN(datePickerTop)){
		        $j('.datePicker').css('top', (datePickerTop + $j(window).scrollTop()) + 'px');
		    }
		});
		$j("td.pbTitle").css("width","500px");
	});
	var noAssingLeadInfoDs;
	var leadLst; 
	var labelIndex = 0;
                                                                     /*===== JSON data =====*/
    var recordid ={
        id: {!RecordId},                                                // Get Current Record Id
        getid: function() { 
            return this.id; 
        }
    };
    var ACdata ={
        list: {!BookingData},                                           // Get All Booking data for one day
        getAll: function() { 
            return this.list; 
        }
    };
    var Roomdata ={
        list: {!RoomData},                                              // Get All Room data for one day
        getAll: function() { 
            return this.list; 
        }
    };
    var acsize = ACdata.getAll().length;                                // Booking data Size
    var rdsize = Roomdata.getAll().length;                              // Room data Size
    
    var arrmessage= new Array(rdsize);                                  // Popup Message Array
    
    var rwidth  = Number(63.45703125);                                          // Room Area Width
    var nacllatt = Number(3.5134210456400443);                                  // Not Assigned List & Cancel List Lat Top
    var nacllatb = Number(-74.68325030051861);                                  // Not Assigned List & Cancel List Lat Bottom
    var nalng1l = Number(-148.359375);                                          // Not Assigned List 1 Lng Left
    var nalng1r = Number(-85.25390625);                                         // Not Assigned List 1 Lng Right
    var nalng2l = Number(-65.91796875);                                         // Not Assigned List 2 Lng Left
    var nalng2r = Number(-2.63671875);                                          // Not Assigned List 2 Lng Right
    var cllng1l = Number(16.69921875);                                          // Cancel List Lng 1 Left
    var cllng1r = Number(80.15625);                                             // Cancel List Lng 1 Right
    var cllng2l = Number(99.4921875);                                           // Cancel List Lng 2 Left
    var cllng2r = Number(162.7734375);                                          // Cancel List Lng 2 Right
    
    var molng = Number(2.63671875);                                             // Marker Offset List Lng
    
    var namno = 0;                                                              // Not Assigned List Marker No.
    var narow = 0;                                                              // Not Assigned Row
    var clmno = 0;                                                              // Cancel List Marker No.
    var clrow = 0;                                                              // Cancel List Row
    
    function GMICMapType() {
        this.Cache = Array();
        this.opacity = 1.0;
    }
    
    GMICMapType.prototype.tileSize = new google.maps.Size(256, 256);
    GMICMapType.prototype.maxZoom = 19;
    GMICMapType.prototype.getTile = function(coord, zoom, ownerDocument) {
        var c = Math.pow(2, zoom);
        var tilex=coord.x,tiley=coord.y;
        if (imageWraps) {
        if (tilex<0) tilex=c+tilex%c;
            if (tilex>=c) tilex=tilex%c;
            if (tiley<0) tiley=c+tiley%c;
            if (tiley>=c) tiley=tiley%c;
        }else{
	        if ((tilex<0)||(tilex>=c)||(tiley<0)||(tiley>=c))
	        {
	            var blank = ownerDocument.createElement('DIV');
	            blank.style.width = this.tileSize.width + 'px';
	            blank.style.height = this.tileSize.height + 'px';
	            return blank;
	        }
	    }
    	var img = ownerDocument.createElement('IMG');
        var d = tilex;
        var e = tiley;
        var f = "t";
        for (var g = 0; g < zoom; g++) {
            c /= 2;
            if (e < c) {
                if (d < c) { f += "q" }
                else { f += "r"; d -= c }
            }
            else {
                if (d < c) { f += "t"; e -= c }
                else { f += "s"; d -= c; e -= c }
            }
        }
        img.id = "t_" + f;
        img.style.width = this.tileSize.width + 'px';
        img.style.height = this.tileSize.height + 'px';
		img.src = mapSource + f +".jpg";    // Map Tiles
        this.Cache.push(img);
        return img;
    }
    GMICMapType.prototype.realeaseTile = function(tile) {
        var idx = this.Cache.indexOf(tile);
        if(idx!=-1) this.Cache.splice(idx, 1);
        tile=null;
    }
    GMICMapType.prototype.name = "JINYA Connect";
    GMICMapType.prototype.alt = "";
    GMICMapType.prototype.setOpacity = function(newOpacity) {
        this.opacity = newOpacity;
        for (var i = 0; i < this.Cache.length; i++) {
            this.Cache[i].style.opacity = newOpacity; //mozilla
            this.Cache[i].style.filter = "alpha(opacity=" + newOpacity * 100 + ")"; //ie
        }
    }

    function getWindowHeight() {
        if (window.self&&self.innerHeight) {
            return self.innerHeight;
        }
        if (document.documentElement&&document.documentElement.clientHeight) {
            return document.documentElement.clientHeight;
        }
        return 0;
    }

    function resizeMapDiv() {
        //Resize the height of the div containing the map.

        //Do not call any map methods here as the resize is called before the map is created.
        var d=document.getElementById("map");

        var offsetTop=0;
        for (var elem=d; elem!=null; elem=elem.offsetParent) {
            offsetTop+=elem.offsetTop;

        }
        var height=getWindowHeight()-offsetTop-16;

        if (height>=0) {
        	var mode = $j("input[id$=hideMode]").val();
        	if(mode == "futu")d.style.height= 6*256 +"px";
            else d.style.height= 8*256 +"px";
            //height+"px";
        }
    }
    
    function load() {                                                                                                       /*###### Onload function start ######*/
        resizeMapDiv();
        var latlng = new google.maps.LatLng(centreLat, centreLon);
        var myOptions = {                                                                                                   //Map Options
            zoom: 3,
            center: latlng,
            draggable: false,
            disableDoubleClickZoom: true,
            panControl: false,
            zoomControl: true,
            scaleControl: false,
            streetViewControl: false,
            scrollwheel: false,
            overviewMapControl: true,
            backgroundColor:"white",
            keyboardShortcuts: false,
            mapTypeControl: false,
            mapTypeControlOptions:{
                mapTypeIds: ["Arimoto"],
                style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
            },
            mapTypeId: "Arimoto"
        }
        map = new google.maps.Map(document.getElementById("map"), myOptions);
        gmicMapType = new GMICMapType();
        map.mapTypes.set("Arimoto",gmicMapType);

		// This event listener calls addMarker() when the map is clicked.
		google.maps.event.addListener(map, 'click', function(event) {
		  //addMarker(event.latLng, map);
		  console.debug('---------------');
		  console.debug(event.latLng.lat() + ':' + event.latLng.lng());
		});
			
		//覆盖区域画线
		// Define the LatLng coordinates for the polygon's path.
		/*
		var triangleCoords = [
			{lat: 55.774, lng: -60.190},
		    {lat: 48.466, lng: -46.118},
		    {lat: 62.321, lng: -44.757},
		    {lat: 55.774, lng: -60.190}
		];
	  	// Construct the polygon.
	  	var bermudaTriangle = new google.maps.Polygon({
	    	paths: triangleCoords,
	    	strokeColor: '#FF0000',
	    	strokeOpacity: 0.8,
	    	strokeWeight: 2,
	    	fillColor: '#FF0000',
	    	fillOpacity: 0.35
	  	});
	  	bermudaTriangle.setMap(map);*/
	  	var contentString = '<div id="content">'+
	      '<div id="siteNotice">'+
	      '</div>'+
	      '<h1 id="firstHeading" class="firstHeading">Uluru</h1>'+
	      '<div id="bodyContent">'+
	      '<p><b>Uluru</b>, also referred to as <b>Ayers Rock</b>, is a large ' +
	      'sandstone rock formation in the southern part of the '+
	      'Northern Territory, central Australia. It lies 335&#160;km (208&#160;mi) '+
	      'south west of the nearest large town, Alice Springs; 450&#160;km '+
	      '(280&#160;mi) by road. Kata Tjuta and Uluru are the two major '+
	      'features of the Uluru - Kata Tjuta National Park. Uluru is '+
	      'sacred to the Pitjantjatjara and Yankunytjatjara, the '+
	      'Aboriginal people of the area. It has many springs, waterholes, '+
	      'rock caves and ancient paintings. Uluru is listed as a World '+
	      'Heritage Site.</p>'+
	      '<p>Attribution: Uluru, <a href="https://en.wikipedia.org/w/index.php?title=Uluru&oldid=297882194">'+
	      'https://en.wikipedia.org/w/index.php?title=Uluru</a> '+
	      '(last visited June 22, 2009).</p>'+
	      '</div>'+
	      '</div>';
	
	  var infowindow = new google.maps.InfoWindow({
	    content: contentString
	  });
	    var leadLstJson = $j("input[id$='leadJsonHid']").val();
	    var titlJson = $j("input[id$='titleJsonHid']").val();
	    leadLst = JSON.parse(leadLstJson);
	    var titleMap = new Object();
	    var titleLst = JSON.parse(titlJson);
	    for(var i = 0 ; i < titleLst.length ; i++){
	    	var titleObj = titleLst[i];
	    	titleMap[titleObj.leadId] = titleObj.titleStr;
	    }
	    for(var i = 0; i < leadLst.length ; i++){
	    	var lead = leadLst[i];
	    	var roomIdKey = JS_APPNS + 'Rroom__c';
	    	var roomIdVal = lead[roomIdKey];
	    	if(roomIdVal && roomMarkObj[roomIdVal]){
	    		var roomMark = roomMarkObj[roomIdVal];
	    		roomMark.setMap[null];
	    		var titleStr = titleMap[lead.Id];
	    		if(!titleStr) titleStr = '';
	    		var marker = new google.maps.Marker({
				    position: roomMark.position,
				    map: map,
				    icon:pinLeadImage,
				    shadow: pinLeadShadow,
				    optimized: false,
				    title: titleStr
				 });
				 marker.addListener('click', function() {
				 	//remoteaction 数据无法传入undefined by zy BEGIN
				 	var beforePix = "{!JSENCODE($Setup.CommDefine__c.ps__AppNS__c)}";
				 	var forigenKey = beforePix + "Rroom__c";
				 	var p1 = "Rroom__c" in lead ? lead.Rroom__c : forigenKey in lead ? lead[forigenKey] : "";
				 	//var p1 = lead.Rroom__c;
				 	//remoteaction 数据无法传入undefined by zy END
				 	var p2 = lead.Id;
				    // 未清掃の部屋を表示する、清掃処理する画面を開く
                	ajaxGetRoomInfo(p1, p2, true);
				 });
				 marker.addListener('focus', function() {
				 	//var p1 = lead.Rroom__c;
				 	//var p2 = lead.Id;
				    // 未清掃の部屋を表示する、清掃処理する画面を開く
                	//ajaxGetRoomInfo(p1, p2, true)
                	customTxt = "<div>Blah blah sdfsddddddddddddddd ddddddddddddddddddddd<ul><li>Blah 1<li>blah 2 </ul></div>";
      				txt = new TxtOverlay(latlng, customTxt, "customBox", map);
				 });
				 roomMarkObj[lead.Rroom__c]	= marker;
				 addOneRoomMessage(map,roomMark.position,lead,titleMap);
				 emptyRoomCount --;
				 leadRoomCount ++;
	    	}
	    }
	    
	    // マーカーのドロップ（ドラッグ終了）時のイベント
		google.maps.event.addListener( $j(".noAssignLead"), 'dragend', function(ev){
			// イベントの引数evの、プロパティ.latLngが緯度経度。
			console.log(ev.latLng.lat());
			console.log(ev.latLng.lng());
		});
	    $j("#emptyRoom").text(emptyRoomCount);
	    $j("#leadRoom").text(leadRoomCount);
	    setMapOnAll(map);
	    /*
	  	var myLatLng = {lat: -25.363, lng: -60.044};
		var marker = new google.maps.Marker({
		    position: myLatLng,
		    map: map,
		    icon:pinImage,
		    shadow: pinShadow,
		    title: 'Hello World!'
		  });
		 marker.addListener('click', function() {
		    infowindow.open(map, marker);
		  });
		*/
        $j.each(ACdata.getAll(), function(i, ACdata) {                                                                  /****** START ACdata jQuery.each loop ******/
            
                                                                                                                            /*===== Create Marker=====*/
            latlng = new google.maps.LatLng(ACdata.cLat, ACdata.cLng);
            var micon = '{!$Resource.Human}';                                                                               // Marker Icon
            var marker = new google.maps.Marker({                                                                           // Create markers
                //map:map,                                                                                                    // Map on which to display Marker.
                position: latlng,                                                                                           // Set position of assigned room or room type
                draggable: true,                                                                                            // If true, the marker can be dragged
                clickable: true,                                                                                            // If true, the marker receives mouse and touch events
                raiseOnDrag: false,                                                                                         // Which animation to play when marker is added to a map.
                visible: true,                                                                                              // If true, the marker is visible
                icon:{                                                                                                      // Icon Setting
                    url: micon,                                                                                             // Set icon image
                    anchor: new google.maps.Point(14,14)                                                                    // The position of anchor
                }
            });
                                                                                                                          /*===== Change Marker Icon for Grouping(Shift+MouseClick)=====*/
            /*  
            var flag=0;
            google.maps.event.addListener(marker, "click", function () {                                                
                infobox.open(map, marker);
                if(keyCode[16]&&flag==0){
                    marker.setIcon({url:'{!$Resource.SelectedHuman}',anchor:new google.maps.Point(14,14)});
                    flag=1;
                }else if(keyCode[16]&&flag==1){
                    marker.setIcon({url:'{!$Resource.Human}',anchor:new google.maps.Point(14,14)});
                    flag=0;
                }else{
                }
            });
            */
                                                                                                                        /*===== InfoBox Setting=====*/
            var boxText = document.createElement("div");
            var boxwidth = 330;                                                                                         // Infobox Width
            
            boxText.style.cssText ="position: absolute; top:0px;left:0px; width: 312px;background:white;border:1px solid #777777;font:normal 14px sans-serif;overflow:hidden;height:24px;";     // Arimoto ---> 'position: absolute; top:0px;left:0px; width: 312px;' isn't exist
            var infoboxOptions = {
                 content: boxText
                ,maxWidth: 0
                ,pixelOffset: new google.maps.Size(14, -12)                                                             //InfoBox Offset
                ,zIndex: null
                ,boxStyle: { 
                  //background: "url('http://google-maps-utility-library-v3.googlecode.com/svn/trunk/infobox/examples/tipbox.gif') no-repeat"
                  opacity: 0.70
                  ,width: boxwidth+"px"
                  ,background: "#FFF"                                                       // Arimoto ---> ',background: "#FFF"' isn't exist
                 }
                ,closeBoxMargin: "-14px 0px 0px 0px"                                       // Arimoto ---> closeBoxMargin: "1px"
                //,closeBoxURL: "http://www.google.com/intl/en_us/mapFiles/close.gif"
                ,closeBoxURL: "{!URLFOR($Resource.mapFile, 'image/close.gif')}"
                ,infoBoxClearance: new google.maps.Size(1, 1)
                ,isHidden: false
                ,pane: "overlayMouseTarget"
                ,enableEventPropagation: true
                ,disableAutoPan: true
            };
            
                                                                                                                        // InfoBox Text
            boxText.innerHTML =   '<div style="width:140px;height:20px;position:absolute;top:5px;left:3px;overflow:hidden;">'
                                    + '<a target=\"_top\" href=\"/' + ACdata.id + '\">' + ACdata.name + '</a>'
                                + '</div>'
                                + '<div style="width:32px;height:20px;position:absolute;top:5px;left:148px;overflow:hidden;">'
                                    + ACdata.persons + ((ACdata.persons != '')? '名' : '')
                                + '</div>'
                                + '<div style="width:130px;height:20px;position:absolute;top:5px;left:185px;overflow:hidden;">'
                                    + ACdata.roomType + ((ACdata.roomType != '')? 'タイプ' : '')
                                + '</div>'
                                /*+ '<div style="width:130px;height:20px;position:absolute;top:5px;left:320px;overflow:hidden;">'
                                    + '<form><input type="text" name="name" ></form>'
                                + '</div>'
                                */
                                /*+ '<div style="width:120px;height:20px;position:absolute;top:5px;left:320px;overflow:hidden;">'
                                    + ACdata.segment + 'から'
                                + '</div>'
                                + '<div style="width:95px;height:20px;position:absolute;top:5px;left:445px;overflow:hidden;">'
                                    + ACdata.plan
                                + '</div>'*/;
            
            //var infobox = new InfoBox(infoboxOptions);
            //infobox.open(map, marker);
            
                                                                                                                        /*===== Get Marker Positions=====*/
            var mpos = marker.getPosition();                                                                            // Get Marker Position at first
            
            ACdata.cLat = mpos.lat();
            ACdata.cLng = mpos.lng();
            
                                                                                                                        /****************************************
                                                                                                                        *  ACdata.flag in 32bit                 *
                                                                                                                        *              /On the Cancel List ?    *
                                                                                                                        *  0 0 0 0|0 0 1 0                      *
                                                                                                                        *                 \Assigned to Room ?   *
                                                                                                                        ****************************************/
            
            if(ACdata.status == "キャンセルまち"){                                                                         // On the Cancel List ?
                ACdata.flag &= ~1;
                ACdata.roomid = null;
                ACdata.flag |= 2;
                    if(clmno%2 == 0){
                        marker.setPosition(new google.maps.LatLng(0.7031073524364909-clrow, cllng1l+molng));
                    }else{
                        marker.setPosition(new google.maps.LatLng(0.7031073524364909-clrow, cllng2l+molng));
                        clrow +=5;
                    }
                clmno++;                                                                                                // Increase Cancel List Marker NO.
            }else{
                if((ACdata.roomid != "null")&&(ACdata.cLat != 0)&&(ACdata.cLng != 0)){                                                                                // Assigned to Room ?
                    ACdata.flag |= 1;
                }else{
                    ACdata.flag &= ~1;
                        if(namno%2 == 0){
                            marker.setPosition(new google.maps.LatLng(0.7031073524364909-narow, nalng1l+molng));
                        }else{
                            marker.setPosition(new google.maps.LatLng(0.7031073524364909-narow, nalng2l+molng));
                            narow +=5;
                        }
                    namno++;                                                                                                // Increase Not Assigned Marker NO.
                }
                ACdata.flag &= ~2;
            }
            
                                                                                                                        /****************************************
                                                                                                                        *  Roomdata.flag in 32bit               *
                                                                                                                        *                                       *
                                                                                                                        *  0 0 0 0|0 0 0 1                      *
                                                                                                                        *                 \Assigned to Room ?   *
                                                                                                                        ****************************************/
            
            $j.each(Roomdata.getAll(), function(j, Roomdata) {                                                          /*===== Room Assign =====*/
                if((Roomdata.flag & 1) != 1){
                    Roomdata.flag &=~1;
                }else{
                }
                if(ACdata.roomid == Roomdata.id){                                                                       // Assigned to Room ?
                    Roomdata.flag |=1;
                }else{
                }
                //arrmessage[j] = "name:" + Roomdata.name + "  flag: "+Roomdata.flag+"\n";                              // Update message
            });
            
            var preroomid = null;                                                                                       // Room id when drag started
            var preroom = null;                                                                                         // Room name when drag started
            
            google.maps.event.addListener(marker, "dragstart", function () {                                            /*===== Get Marker Position when drag started =====*/
                mpos = marker.getPosition();
                prelat = mpos.lat();                                                                                    // Marker Lat when drag started
                prelng = mpos.lng();                                                                                    // Marker Lng when drag started
                
                $j.each(Roomdata.getAll(), function(j, Roomdata) {
                    if((mpos.lat() >= Roomdata.cLat1) && (mpos.lat() < Roomdata.cLat2) && (mpos.lng() > Roomdata.cLng1) && (mpos.lng() < Number(Roomdata.cLng1)+Number(rwidth))){
                        Roomdata.flag &= ~1;
                        ACdata.flag &= ~1;
                        ACdata.roomid = null;
                        ACdata.room = null;
                        
                        preroomid = Roomdata.id;
                        preroom = Roomdata.name;
                    }else{
                        preroomid = null;
                        preroom = null;
                    }
                });
            });
            
            google.maps.event.addListener(marker, "dragend", function () {                                                  /*===== Get Marker Position when drag is end =====*/
                mpos = marker.getPosition();
                $j.each(Roomdata.getAll(), function(j, Roomdata) {                                                          /*===== Check Room Assign =====*/
                                                                                                                            // In Room Area ?
                    if((mpos.lat() >= Roomdata.cLat1) && (mpos.lat() < Roomdata.cLat2) && (mpos.lng() > Roomdata.cLng1) && (mpos.lng() < Number(Roomdata.cLng1)+Number(rwidth))){
                                                                                                                            
                        if((Roomdata.flag & 1) !=1){
                            ACdata.roomid = Roomdata.id;                                                                    // Assign to Room
                            ACdata.room = Roomdata.name;
                            Roomdata.flag |= 1;
                            ACdata.flag |= 1;
                            marker.setPosition(new google.maps.LatLng(Roomdata.cCentreLat,Roomdata.cCentreLng));
                            
                        }else{
                            
                            marker.setPosition(new google.maps.LatLng(prelat,prelng));
                            if(preroomid != null){
                                ACdata.roomid = preroomid;
                                ACdata.room = preroom;
                                ACdata.flag |= 1;
                            }else{
                                ACdata.roomid = null;
                                ACdata.room = null;
                                ACdata.flag &= ~1;
                            }
                        }
                        
                    }else{
                        
                        if(ACdata.roomid == Roomdata.id){
                            ACdata.roomid = null;
                            ACdata.room = null;
                            Roomdata.flag &= ~1;
                            ACdata.flag &= ~1;
                        }else{
                        }
                        
                    }
                    mpos = marker.getPosition();
                    if((mpos.lat() >= Roomdata.cLat1) && (mpos.lat() < Roomdata.cLat2) && (mpos.lng() > Roomdata.cLng1) && (mpos.lng() < Number(Roomdata.cLng1)+Number(rwidth))){
                        ACdata.roomid = Roomdata.id;                                                                    // Assign to Room
                        ACdata.room = Roomdata.name;
                        Roomdata.flag |= 1;
                        ACdata.flag |= 1;
                    }else{
                    }
                    
                    arrmessage[j] = "*name:" + Roomdata.name + " flag: "+Roomdata.flag+"\n";
                });
                
                if((mpos.lat() < nacllatt) && (mpos.lat() > nacllatb)){                                                             // Auto Move
                    if((mpos.lng() > nalng1l) && (mpos.lng() < nalng1r)){                                                           // Not Assigned Area 1
                        marker.setPosition(new google.maps.LatLng(mpos.lat() ,nalng1l+molng));
                    }else{
                    }
                    if((mpos.lng() > nalng2l) && (mpos.lng() < nalng2r)){                                                           // Not Assigned Area 2
                        marker.setPosition(new google.maps.LatLng(mpos.lat() ,nalng2l+molng));
                    }else{
                    }
                    if((mpos.lng() > cllng1l) && (mpos.lng() < cllng1r)){                                                           // Cancel List Area 1
                        marker.setPosition(new google.maps.LatLng(mpos.lat() ,cllng1l+molng));
                        ACdata.status = "キャンセルまち";
                        ACdata.flag |= 2;
                    }else if((mpos.lng() > cllng2l) && (mpos.lng() < cllng2r)){                                                     // Cancel List Area 2
                        marker.setPosition(new google.maps.LatLng(mpos.lat() ,cllng2l+molng));
                        ACdata.status = "キャンセルまち";
                        ACdata.flag |= 2;
                    }else{
                    }
                }else{
                }
                
                if(!((mpos.lat() < nacllatt) && (mpos.lat() > nacllatb) && ((mpos.lng() > cllng1l) && (mpos.lng() < cllng1r)) || ((mpos.lng() > cllng2l) && (mpos.lng() < cllng2r)))){
                    ACdata.status = null;
                    ACdata.flag &= ~2;
                }else{
                }
                
                ACdata.cLat = mpos.lat();
                ACdata.cLng = mpos.lng();
                //arrmessage[i] = ACdata.name+"様 flag: "+ACdata.flag+"\n";
                //arrmessage[i] = "flag: "+Room.flag+"\n";
                //alert(arrmessage[i]);
                //infoWindow.setContent(ACdata.flag+","+ACdata.roomid);
            });
        });                                                                                                         /****** END of Marker jQuery.each loop******/
        
                                                                                                                    /*=====Make TestMarker(Show Position on the balloon)=====*/
      /*  var testmarker = new google.maps.Marker({
            map:map,
            position: new google.maps.LatLng(0,0),
            draggable: true,
            clickable: true,
            raiseOnDrag: false,
            visible: true
        });
        var infoWindow = new google.maps.InfoWindow({
            content: "<div style='width:300px;'>Lat:"+testmarker.getPosition().lat() + "<br>Lng:" + testmarker.getPosition().lng() + "</div>"
            ,disableAutoPan: true
            ,pixelOffset: new google.maps.Size(150,130)
        });
        infoWindow.open(map,testmarker);
        google.maps.event.addListener(testmarker, 'click', function(){
            infoWindow.open(map,testmarker);
        });
        google.maps.event.addListener(testmarker, "dragend", function () {
            infoWindow.setContent("<div style='widt:300px;'>Lat:"+testmarker.getPosition().lat() + "<br>Lng:" + testmarker.getPosition().lng() + "</div>");
        });
*//*
        $j.each(Roomdata.getAll(), function(j, Roomdata) {
            var roomrect = new google.maps.Rectangle({
                //bounds:new google.maps.LatLngBounds(new google.maps.LatLng(Roomdata.cLat1,Roomdata.cLng1),new google.maps.LatLng(Roomdata.cLat2,Number(Roomdata.cLng1)+Number(rwidth))),
                bounds:new google.maps.LatLngBounds(new google.maps.LatLng(Roomdata.cLat1,Roomdata.cLng1),new google.maps.LatLng(Roomdata.cLat2,Roomdata.cLng2)),
                clickable: false,
                fillColor: "#00f",
                fillOpacity: 0.3,
                map: map,
                strokeWeight: 1,
                strokeOpacity: 0.3,
                strokeColor: "#007"
            });
        });*/
        // *****************************
	    // 予約新規登録機能起動（2014/04/15)
	    // *****************************
	    $j("img[name='accountPopup']").unbind("click");
	     // お客様情報を選択する
	    $j("img[name='accountPopup']").click(function() {
	          var lkfmVal = $j("form[id$=':createForm']").attr("id");
	          var lknmVal= $j("input[id$=':relcontact']").attr("id");
	          var lktpVal ="003";
	          var lksrchVal =  encodeURIComponent($j("input[id$=':relcontact']").val());
	          var url = "/_ui/common/data/LookupPage?lkfm=" + lkfmVal + "&lknm=" +lknmVal + "&lktp=" + lktpVal;
	          openLookup(url, 670, '1', "&lksrch=" + lksrchVal);
	    });
            // お客名にて、自動予約名に設定を行う
	    $j("input[id$=':leadName']").focus(function() {
	        autoSetupLeadName();
	    });
		$j("#tabstrip").kendoTabStrip({
            animation:  {
                open: {
                    effects: "fadeIn"
                }
            }
        });
        // 未割り当予約 DataSource
		noAssingLeadInfoDs = new kendo.data.HierarchicalDataSource({
		    transport: {
		      read: function (options) {
		        // 検索条件を設定する
		        var queryDate = getQueryDate(); //$j("input[id$=':gotoDate']").length > 0 ? $j("input[id$=':gotoDate']").val() : "";
		        var branchCd = $j("select[id$=':branchShopCd']").length > 0 ? $j("select[id$=':branchShopCd']").val() : "";
				// 当日はチェックイン情報・チェックアウト情報表示制御フラグ
				//var isShowTodayInfo = getShowTodayFlg();
		        // make AJAX request to the remote service
		        Visualforce.remoting.Manager.invokeAction(
		          "{!$RemoteAction.BookingMapApp.noAssingLeadInfoAll}", queryDate,branchCd, true, function (result, event) {
		            if (event.type == 'exception') {
		                alert(event.message);
		            } else {
		//console.log(result);
		                // 顧客一覧情報を引き渡す
		                options.success(result);
		                // 2013/10/31 総件数統計を行う
		                var maxLen = result.length;
		                var totleRs = 0;
		                for (var i=0 ; i<maxLen ; i++){
		                	totleRs += result[i].items.length;
		                }
		                refreshWindowTitle(totleRs);
		                // BIND部屋未割り当ての予約項目情報
		                bindNoAssignLeadItem();
		            } // End else
		        }, {escape: true});
		      }// read
		    },// transport
		    schema: {
		        model: {
		            hasChildren: "isHasChildren",
		            id: "id",
		            children: "items",
		        }
		    }
		});
		$j(".noAssignLeadListView").kendoTreeView({
	         dragAndDrop: false,
	         //drag: treeviewDrop,
	         dataSource: noAssingLeadInfoDs,
	         //dataTextField: ["roomTypeName", "nodeInfo"],
	         template: kendo.template($j("#treeview-template").html()),
	         //collapse : resizeTabs,
	     });
	     $j.simpleWeather({
		    //初期設定
		    location: 'Tokyo, JP',
		    unit: 'c',
		
		    //正常に実行された時の処理
		    success: function(weather) {
		    	
		        //地名の表示
		        html = '<div style="text-align:center"><span>'+weather.city+'</span>';
				console.debug(weather);
		        //気温の表示
		        html += '<span>  '+weather.temp+'℃'+'</span></div>'; 
		 		
		        //画面に表示
		        $j("[id$=cloudArea]>.pbBody").html(html);
		    }
		  });
		// IOTの既存最新情報を取得する　
    	initIotMessaget();
    }                                                                                                               /*###### END of onLoad function ######*/
    
                                                                                                                    /*=====Key code setting=====*/
    var keyCode = new Array(256);
    for(i=0;i<256;i++){
        keyCode[i]=0
    }
    function keydown(){
        keyCode[event.keyCode] = 1;
    }
    function keyup(){
        keyCode[event.keyCode] = 0;
    }
    document.onkeydown=keydown;
    document.onkeyup=keyup;
    
                                                                                                                    /*=====Update Button Function=====*/
    function assign(){
        /*var message="";
        for(var k=0; k < rdsize; k++){
            message += arrmessage[k];
        }
        alert(message);
        */
        //alert( removeBackSlash(JSON.stringify( ACdata.getAll())));
        var result = sforce.apex.execute('BookingPlus','setRoomAssign',{                                            //Call Webservice Method
            recid: recordid.getid().id,
            acdata: removeBackSlash(JSON.stringify( ACdata.getAll()))                                               // JSON data
        });
        if(result==1){
            alert("{!fixedday}の予約データを更新しました");
        }else{
            alert("更新エラーが発生しました");
        }
    }
    
    function removeBackSlash(strTemp) { 
        strTemp = strTemp.replace(/\\/g,"");                // ' \  ' -> ''
        strTemp = strTemp.replace(/\"\[/g,"\[");            // ' "[ ' -> '['
        strTemp = strTemp.replace(/\]\"/g,"\]");            // ' ]" ' -> ']'
        return strTemp;
    }
/*
// Adds a marker to the map.
function addMarker(location, map) {
  // Add the marker at the clicked location, and add the next-available label
  // from the array of alphabetical characters.
  var marker = new google.maps.Marker({
    position: location,
    label: labels[labelIndex++ % labels.length],
    map: map
  });
}*/
    //]]>
	// 割り当てるできる予約情報BINDする
	function bindNoAssignLeadItem() {
		var treeview = $j(".noAssignLeadListView").data("kendoTreeView");
		// ALLサブ項目を全展開
		treeview.expand(".k-item");
		// Dragできる項目を定義する
		if(!JS_SYS_DEVICE_MOBILE_FLG){
			$j(".noAssignLead").kendoDraggable({
		        hint: function(e) {
		            // golbal var setup
		            dragLeadElement = $j(e).clone();
		            return dragLeadElement;
		        },
		        dragstart:function(e){
		        	$j(".gmnoprint[title='leadFun']:not([data-role])").kendoDropTarget({
		                 dragenter: droptargetOnDragEnter
		            });
		        }
			});
		}
	}
	function droptargetOnDragEnter(e){
		alert("nice baby");
	}
	// 未割り当てのWindowのTitle自動設定を行う
	function refreshWindowTitle(recordsNum) {
		//$j("li.noAssignTitle a").text('未割り当予約 【'+recordsNum+'】件');
	}
	// 画面の指定日情報を取得する
	function getQueryDate() {
		// 指定日取得
		return $j("input[id$=':gotoDate']").length > 0 ? $j("input[id$=':gotoDate']").val() : kendo.toString(new Date(), "yyyy/MM/dd" );
	}
	// Sets the map on all markers in the array.
	function setMapOnAll(map) {
		for(var i = 0 ; i < roomLst.length ; i++){
			if(!roomLst[i].isEmptyNoShow)
			roomMarkObj[roomLst[i].roomId].setMap(map);
		}
	}
	// 該当部屋にアサインされた予約明細情報を取得、表示を行う
	function ajaxGetRoomInfo(roomId, leadId, isCleanFlg) {
		//remoteaction 数据无法传入undefined by zy BEGIN
		if (roomId == undefined) roomId = "";
		if (leadId == undefined) leadId = "";
		//remoteaction 数据无法传入undefined by zy END
		Visualforce.remoting.Manager.invokeAction(
		    '{!$RemoteAction.BookingMapApp.getRoomInfo}',
		    roomId,leadId,
		    function(result, event){
		        if (event.status) {
		            if(result== null || result.length == 0){
		                alert("データ詳細がありません。");
		            }else{
		            	// 清掃ステータスは設定を行う
		            	result._isCleanFlg = roomMessages[roomId].isUnClean;
	                    YAHOO.force.com.showMe(result);
		            }
	
		        } else if (event.type === 'exception') {
		            alert("error データ詳細がありません。");
		        } else {
		            alert(" noknown error データ詳細がありません。");
		        }
		    },
		    {escape: true}
		);
	}
	// 有効性チェック
	function isInvalid(val) {
		return (val == null || val == undefined);
	}
	function popWindowBtnFun() {
		// お客様ステータス
		var leadStatus = $j("input[id$=':leadStatusHidden']").val();
	    // チェックインとチェックアウトボタン切り替えする
	    if (leadStatus == "") {
	    	// 未チェックイン
	    	$j("[id$=':leadCheckInBtn']").show();
	    	$j("[id$=':leadCheckOutBtn']").hide();
	
	    } else if (leadStatus == JS_LEADSTATUS_CHECKOUT) {
	    	// チェックアウト済み
	    	$j("[id$=':leadCheckInBtn']").hide();
	    	$j("[id$=':leadCheckOutBtn']").hide();
	    } else {
	    	// チェックイン済み、泊まる中
	    	$j("[id$=':leadCheckInBtn']").hide();
	    	$j("[id$=':leadCheckOutBtn']").show();
	    }
	}
// ******************************************
// YAHOO UI BLOCK
// ******************************************
// Create a namespace for our custom functions
YAHOO.namespace("force.com");
YAHOO.force.com.showMe = function(result) {
	// 予約データがない場合
//	if(result.leadId == null){return;}

    document.getElementById("myPanel").style.display = "block";
    // 予約番号
	if(isInvalid(result.leadIndexNo)){
		$j("span[id$=':bLeadIndexNo']").html("");
	} else {
		var leadIndexId = result.leadIndexId;
		var leadIndexNm = result.leadIndexNo;
		var leadLink = "<a href='javascript:void(0);' onclick='window.open(\"/"+ leadIndexId +"/e\")' >" + leadIndexNm + "</a>" ;
		$j("span[id$=':bLeadIndexNo']").html(leadLink);
	}
	// 予約リンク
	if(isInvalid(result.leadName)){
		$j("span[id$=':bname']").html("");
	} else {
		var leadId = result.leadId;
		var leadNm = result.leadName;
		var leadLink = "<a href='javascript:void(0);'  id='detailwindow_lead_"+ leadId +"' onclick='window.open(\"/"+ leadId +"\")' onblur='LookupHoverDetail.getHover(\"detailwindow_lead_"+ leadId +"\").hide();' onfocus='LookupHoverDetail.getHover(\"detailwindow_lead_"+ leadId +"\", \"/"+ leadId +"/m?retURL=%2F"+ leadId + "&isAjaxRequest=1\").show();' onmouseover='LookupHoverDetail.getHover(\"detailwindow_lead_"+ leadId +"\", \"/"+ leadId +"/m?retURL=%2F"+ leadId + "&isAjaxRequest=1\").show();' onmouseout='LookupHoverDetail.getHover(\"detailwindow_lead_"+ leadId +"\").hide();'>" + leadNm + "</a>" ;
		$j("span[id$=':bname']").html(leadLink);
	}
    // 顧客存在する場合:顧客情報を表示する
    if(isInvalid(result.customId)){
        $j("span[id$=':bContactRef']").html("");
    } else {
        var contactId = result.customId;
        var contactNm = result.customName;
        var contactLink = "<a href='javascript:void(0);' id='detail_"+ contactId +"' onclick='window.open(\"/"+ contactId +"\")'  onblur='LookupHoverDetail.getHover(\"detail_"+ contactId +"\").hide();' onfocus='LookupHoverDetail.getHover(\"detail_"+ contactId +"\", \"/"+ contactId +"/m?retURL=%2F"+ contactId + "&isAjaxRequest=1\").show();' onmouseover='LookupHoverDetail.getHover(\"detail_"+ contactId +"\", \"/"+ contactId +"/m?retURL=%2F"+ contactId + "&isAjaxRequest=1\").show();' onmouseout='LookupHoverDetail.getHover(\"detail_"+ contactId +"\").hide();'>" + contactNm + "</a>" ;

        $j("span[id$=':bContactRef']").html(contactLink);
    }
	//お客ステータス
	if(isInvalid(result.customStatus)){
		$j("span[id$=':bField298__c']").text("");
		$j("input[id$=':leadStatusHidden']").val("");
	} else {
		$j("span[id$=':bField298__c']").text(result.customStatus);
		$j("input[id$=':leadStatusHidden']").val(result.customStatus);
	}
    // 予約インデックス情報
    // 到着日
	if(isInvalid(result.entryDate)){
		$j("span[id$=':bEntryTime__c']").text("");
	} else {
		//var EntryDate__cFromLong = new Date(result.entryDate);
		//$j("span[id$=':bEntryTime__c']").text(dateFormat.format(EntryDate__cFromLong));
		$j("span[id$=':bEntryTime__c']").text(result.entryDate);
	}
	// 到着時刻
	if (isInvalid(result.entryTime)) {
		$j("span[id$=':bField4__c']").text("");
		$j("select[id$=':bInputField4__c']").val("");
	} else {
		$j("span[id$=':bField4__c']").text(result.entryTime);
		$j("select[id$=':bInputField4__c']").val(result.entryTime);
		$j("input[id$=':bHidEntryTime']").val(result.entryTime);
	}
    // 出発日
	if(isInvalid(result.departureDate)){
		$j("span[id$=':bDepartureDate__c']").text("");
	} else {
		//var DepartureDate__cFromLong = new Date(result.departureDate);
		//$j("span[id$=':bDepartureDate__c']").text(dateFormat.format(DepartureDate__cFromLong));
		$j("span[id$=':bDepartureDate__c']").text(result.departureDate);
	}
    // 出発時刻
    if (isInvalid(result.departureTime)) {
    	$j("span[id$=':bDepartureTime__c']").text("");
    	$j("select[id$=':bInputField3__c']").val("");
    } else {
		$j("span[id$=':bDepartureTime__c']").text(result.departureTime);
		$j("select[id$=':bInputField3__c']").val(result.departureTime);
		$j("input[id$=':bHidDepartureTime']").val(result.departureTime);
	}
	// 泊数
	if (isInvalid(result.nights)) {
		$j("span[id$=':bNights']").text("");
		$j("input[id$=':bInputNights']").val("");
		$j("input[id$=':bHidNightId']").val("");

	} else {
		$j("span[id$=':bNights']").text(result.nights);
		$j("input[id$=':bInputNights']").val(result.nights);
		$j("input[id$=':bHidNightId']").val(result.nights);
	}
    // 人数
    if (isInvalid(result.leadPeopleNum)) {
        $j("span[id$=':bStayPersons__c']").text("");
        $j("input[id$=':bInputStayPersons']").val("");
        $j("input[id$=':bHidPeopleNumId']").val("");
    } else {
        $j("span[id$=':bStayPersons__c']").text(result.leadPeopleNum);
        $j("input[id$=':bInputStayPersons']").val(result.leadPeopleNum);
        $j("input[id$=':bHidPeopleNumId']").val(result.leadPeopleNum);

    }
    // 予約チャネル
    if (isInvalid(result.leadChannel)) {
        $j("span[id$=':bField2__c']").text("");
    } else {
        $j("span[id$=':bField2__c']").text(result.leadChannel);
    }
    // プラン
	if(isInvalid(result.leadPlan)){
		$j("span[id$=':bplaninfo']").text("");
	} else {
		$j("span[id$=':bplaninfo']").text(result.leadPlan);
	}
	// 部屋
	if(isInvalid(result.leadRoom)){
		$j("span[id$=':bRroom__c']").text("");
		$j("input[id$=':bHidRoomId']").val("");
	} else {
		$j("span[id$=':bRroom__c']").text(result.leadRoom);
		$j("input[id$=':bHidRoomId']").val(result.leadRoomId);
	}
	// 特記事項
	if(isInvalid(result.leadMemo)){
		$j("span[id$=':bComment3__c']").html("");
	}else{
	   // Html <br> -> <br></br> Replace
	   //var comment = (result.leadMemo).replace(new RegExp("&\lt;br&\gt;", "g"), "<br>");
	   var comment = (result.leadMemo).replace(new RegExp("&\lt;", "g"), "<").replace(new RegExp("&\gt;", "g"), ">").replace(new RegExp("&\quot;", "g"), '"');
       $j("span[id$=':bComment3__c']").html(comment);
	}
	// 予約ID
    $j("input[id$=':leadIdHidden']").val(result.leadId);
    // 会計ID
    if(isInvalid(result.accountId)){
    	$j("#accBtn").hide();
    	$j("input[id$=':accIdHidden']").val("");
    } else {
    	$j("#accBtn").show();
    	$j("input[id$=':accIdHidden']").val(result.accountId);
    }
    // 会計済みの場合、印刷ボタンを表示する
    $j("#pdfurlHid").val("");
	if(isInvalid(result.isAccountedFlg)){
    	$j("#prtBtn").hide();
	} else {
		var flg = result.isAccountedFlg.toString().toLowerCase();
		if (flg == "true") {
			$j("#prtBtn").show();
			$j("#pdfurlHid").val(result.openAccPdfUrl);
		} else {
			$j("#prtBtn").hide();
		}
	}
	// 該当予約の予約インデックスIDを設定する
	$j('input[id$="bHidLeadIndexId"]').val(result.leadIndexId);
	// 予約データはチェックインありのデータが存在する場合、泊数変更ボタンを表示する、チェックインなし場合、
	// 泊数変更は行わない
	if (result.checkInFlg) {
		// チェックインありの予約データが存在する場合
		$j("#chgNightsBtn").show();
		$j("#chgNightsSaveBtn").hide();
	} else {
		// チェックインなしの予約データが未存在する場合
		$j("#chgNightsBtn").hide();
		$j("#chgNightsSaveBtn").hide();
	}
	// 泊数変更項目非表示にする
	$j(".roomChangeTd").hide();
	// 時刻変更項目非表示にする
	$j(".timeChangeTd").hide();
	// お客様のステータスにより、ボタン制御呼び出し
	popWindowBtnFun();

	// ボタン表示制御を行う
	if (result._isCleanFlg) {
		// 部屋清掃機能を処理するため、該当Windowを表示する
		// ボタンは：部屋清掃とキャンセルので
		$j("[id$=':leadCheckInBtn']").hide();
		$j("#cleanRoomBtn").show();
	} else {
		$j("#cleanRoomBtn").hide();
	}
	//stopRunning();
    // Window Show
    YAHOO.force.com.myDialog.show();
}
// Function called when we want to hide the dialog
YAHOO.force.com.hideMe = function() {
	//startRunning();
    YAHOO.force.com.myDialog.hide();
}
// Function called when the DOM is ready to create the dialog,
// render the dialog into the document body, add our dialog skin
// css to the body tag, and wire up the buttons on our dialog
YAHOO.force.com.init = function() {
    document.body.className = document.body.className + " yui-skin-sam";
	YAHOO.force.com.myDialog = new YAHOO.widget.Panel(
        "myPanel",  // The id of our dialog container
        {
                width           :   600,    // You can play with this until it's right
                visible         :   false,  // Should be invisible when rendered
                draggable       :   true,   // Make the dialog draggable
                close           :   false,  // Don't include a close title button
                modal           :   true,   // Make it modal
                fixedCenter     :   true,   // Keep centered if window is scrolled
                zindex          :   4,     // Make sure it's on top of everything

                // This line adds the appear/vanish fade effect
                effect          :   {
                                      effect:YAHOO.widget.ContainerEffect.FADE,
                                      duration:0.35
                                    }
        }
     );

    // Render the dialog to the document.body level of the DOM
    YAHOO.force.com.myDialog.render(document.body);
}
function reload(){
	setMapOnAll(null);
	initFreshMessage();
	for(var i = 0; i < roomMsgJson.length ; i++){
		var roomInf = roomMsgJson[i];
		roomMessages[roomInf.roomId] = roomInf;
		if(!roomInf.isEmptyNoShow){
			roomMarkObj[roomInf.roomId] = new Object();
			roomLst.push(roomInf);
		}
	}
	emptyRoomCount = roomLst.length;  
    
    for(var i = 0 ; i < roomLst.length ; i++){
    	//if(roomLst[i].isEmptyNoShow) continue;
    	var marker = new google.maps.Marker({
		    position: roomLst[i].myLatLng,
		    icon:pinImage,
		    //visible: true,
		    //clickable: true,                                                                                           
            //raiseOnDrag: false, 
		    shadow: pinShadow,
		    title: i + ""
		 });

    	roomMarkObj[roomLst[i].roomId] = marker;
    }
	load();
	noAssingLeadInfoDs.read();
}
function initFreshMessage(){
	var hidRoom = $j("#hidRoomMessageJson").val();
	roomMsgJson = JSON.parse(hidRoom);
	roomMessages = new Object();
	roomMarkObj = new Object();
	roomLst = new Array();
}
function backToMain(){
	$j("[id$=hideMode]").val("main");
	window.location.href = '/apex/BookingMapApp';
}
function addOneRoomMessage(map,latlng,leadObj,titleMap){
         var micon = '{!$Resource.Human}';                                                                               // Marker Icon
         var marker = new google.maps.Marker({                                                                           // Create markers
             map:map,                                                                                                    // Map on which to display Marker.
             position: latlng,                                                                                           // Set position of assigned room or room type
             draggable: true,                                                                                            // If true, the marker can be dragged
             clickable: true,                                                                                            // If true, the marker receives mouse and touch events
             raiseOnDrag: false,                                                                                         // Which animation to play when marker is added to a map.
             visible: true,                                                                                              // If true, the marker is visible
             icon:{                                                                                                      // Icon Setting
                 url: micon,                                                                                             // Set icon image
                 anchor: new google.maps.Point(14,14)                                                                    // The position of anchor
             }
         });
                                                                                                                         /*===== Change Marker Icon for Grouping(Shift+MouseClick)=====*/
         var flag=0;
         google.maps.event.addListener(marker, "click", function () {                                                
             infobox.open(map, marker);
             if(keyCode[16]&&flag==0){
                 marker.setIcon({url:'{!$Resource.SelectedHuman}',anchor:new google.maps.Point(14,14)});
                 flag=1;
             }else if(keyCode[16]&&flag==1){
                 marker.setIcon({url:'{!$Resource.Human}',anchor:new google.maps.Point(14,14)});
                 flag=0;
             }else{
             }
         });
         
         //border:1px solid #777777; 																				/*===== InfoBox Setting=====*/
         var boxText = document.createElement("div");
         var boxwidth = 190;                                                                                         // Infobox Width
         //position: absolute;height:24px;
         boxText.style.cssText =" top:0px;left:0px; width: 180px;background:white;font:normal 14px sans-serif;overflow:hidden;";     // Arimoto ---> 'position: absolute; top:0px;left:0px; width: 312px;' isn't exist
         var infoboxOptions = {
              content: boxText
             ,maxWidth: 0
             ,pixelOffset: new google.maps.Size(14, -12)                                                             //InfoBox Offset
             ,zIndex: null
             ,boxStyle: { 
               //background: "url('http://google-maps-utility-library-v3.googlecode.com/svn/trunk/infobox/examples/tipbox.gif') no-repeat"
               opacity: 0.80
               ,width: boxwidth+"px"
               ,background: "#FFF"
               ,height:"24px"                                                       // Arimoto ---> ',background: "#FFF"' isn't exist
              }
             ,closeBoxMargin: "-14px 0px 0px 0px"                                       // Arimoto ---> closeBoxMargin: "1px"
             ,closeBoxURL: "/img/permissions_deny16.gif"								//http://www.google.com/intl/en_us/mapFiles/close.gif
             ,infoBoxClearance: new google.maps.Size(1, 1)
             ,isHidden: false
             ,pane: "overlayMouseTarget"
             ,enableEventPropagation: true
             ,disableAutoPan: true
         };
         
         //left:148px;                                                                                                           
         // InfoBox Text
         boxText.innerHTML =   '<div style="width:140px;height:20px;position:absolute;top:0px;left:3px;overflow:hidden;">'
                                 + '<a target=\"_top\" href=\"/' + leadObj.Id + '\">' + leadObj.Name + '</a>'
                             + '</div>'
                             + '<div style="height:20px;position:absolute;top:15px;overflow:hidden;">'
                                 + titleMap[leadObj.Id]
                             + '</div>'
                             //+ '<div style="width:130px;height:20px;position:absolute;top:5px;left:185px;overflow:hidden;">'
                               //  + ACdata.roomType + ((ACdata.roomType != '')? 'タイプ' : '')
                             //+ '</div>'
                             ;
         
         var infobox = new InfoBox(infoboxOptions);
         infobox.open(map, marker);
}
	// 予約名自動設定機能
function autoSetupLeadName() {
    var contactName = $j("input[id$=':relcontact']").val();
    var leadName = $j("input[id$=':leadName']").val();
    if (leadName == "" && contactName != "") {
        $j("input[id$=':leadName']").val(contactName);
    }
}
 
// AutoComplete項目選べるリストクリックする処理
function clearAutoCompletePanel() {
	$j(".ui-autocomplete").hide();
	$j(".ui-autocomplete").empty();
 }
 // 予約新規作成後のスケータすチェツク

// 出発日計算
function setDepartureDateAuto(){
    var starts = $j("span[id$=':bEntryTime__c']").text();
    var stays = $j("input[id$=':bInputNights']");
    if (!commUtils.isInteger(stays.val())) {
    //有効な数字を入力してください。［0－9］
    	alert("{!$Label.MSG_008_0082}");
    	stays.val($j("input[id$=':bHidNightId']").val());
    	return false;
    }
    var endDts = dateFormat.format(new Date((new Date(starts)).getTime() + stays.val()*24*60*60*1000));
    var sysDate = dateFormat.format(Date.parse(JS_SYS_TODAY));
    if (endDts < sysDate) {
    //出発日は過去の日付に変更することができません。
    	alert('{!$Label.MSG_008_0083}');
    	stays.val($j("input[id$=':bHidNightId']").val());
    	return false;
    }
    $j("span[id$=':bDepartureDate__c']").text(endDts);
    return true;
}
function setDepartureDateAuto_1(){
    var starts = $j('div#createLeadPanel').find("[id$='entryDate']").html();
    var stays = $j('div#createLeadPanel').find("[id$='staysNums']").val();
    $j('div#createLeadPanel').find("[id$='departureDate']").html(kendo.toString(new Date(new Date(starts).getTime() + stays*24*60*60*1000),'yyyy/MM/dd'));
}
var windowMessage = new Object();
var windowMarkeMap = new Object();
function addWarningToMark(Message){
	console.log(Message);
	var callSubRoomId = JS_APPNS + "MessageSub1__c";
	var callMessage = JS_APPNS + "Message__c";
	var callType = JS_APPNS + "MessageType__c";
	var callLevel = JS_APPNS + "MessageLevel__c";
    var dataMessageTyoe = Message.data.sobject[callType];
    if(dataMessageTyoe != "IOT") return;
    var roomSub = Message.data.sobject[callSubRoomId];
    for (var roomId in roomMessages) {
    	if(typeof(roomId) === "string"){
    		var roomM = roomMessages[roomId];
    		if(roomM.filterMessage != null && roomM.filterMessage.indexOf(roomSub) >= 0){
    			var subStatus = Message.data.sobject[callLevel];
				// 2016/12/29 old version no level skip by zy BEGIN
				if (subStatus == "" || subStatus == undefined) continue;
				var infoStatus_Icon = pinErrorImage;
				if (subStatus.toLocaleUpperCase().indexOf('info'.toLocaleUpperCase()) >= 0) {
					infoStatus_Icon = pinInfoImage;
				} else if (subStatus.toLocaleUpperCase().indexOf('Warn'.toLocaleUpperCase()) >= 0 ) {
					infoStatus_Icon = pinWarnImage;
				}
				// 2016/12/29 old version no level skip by zy END
				
    			var marker = roomMarkObj[roomId];
    			var infowindow = windowMessage[roomId];
    			if(infowindow) {
    				windowMessage[roomId].setContent(Message.data.sobject[callMessage]);
    			} else {
	    			infowindow = new google.maps.InfoWindow({
					   content: Message.data.sobject[callMessage]
					});
					windowMessage[roomId] = infowindow;
				}
				
				//2016/12/28 info marke not create by zy BEGIN
				if ( marker == undefined && subStatus.toLocaleUpperCase() == 'info'.toLocaleUpperCase()) continue;
				//2016/12/28 by zy END
    			if(!marker){
	   				marker = new google.maps.Marker({
					    position: roomM.myLatLng,
					    map: map,
					    icon:infoStatus_Icon,
					    shadow: pinLeadShadow,
					    optimized: false,
					    roomId:roomId,
					    errorLevel:Message.data.sobject[callLevel]
					   //title: titleStr
					 });
					 // This event listener calls addMarker() when the map is clicked.
					google.maps.event.addListener(marker, 'click', function(event) {
						windowMessage[marker.roomId].open(map, marker);
					});
					roomMarkObj[roomId] = marker;
				} else {
					if (subStatus.toLocaleUpperCase() == 'info'.toLocaleUpperCase()){
						windowMessage[marker.roomId].close();
						marker.setMap(null);
						continue;
					}
					marker.icon = infoStatus_Icon;
					marker.setMap(map)
				}
				
				infowindow.open(map, marker);
				/*
				google.maps.event.addListener(infowindow,'closeclick',function(){
				   marker.setMap(null); //removes the marker
				});
				*/
    		}
    	}
    	
    }
}

$j(document).ready(function() {
    initCometd();
});
function initIotMessaget() {
	var iotMsgData = JSON.parse("{!JSENCODE(initIotMessage)}");
	for (i = 0; i < iotMsgData.length; i++) {
		var msgObj = {};
		msgObj.data = {};
		msgObj.data.sobject = iotMsgData[i];
		addWarningToMark(msgObj);
	}
}

//Function to initialize comet D
function initCometd(){
    try{
        disconnect();
        //console.log('in init commetd function');
        // Connect to the CometD endpoint
        $j.cometd.init({
            url: window.location.protocol+'//'+window.location.hostname+'/cometd/27.0/',
            requestHeaders: { Authorization: 'OAuth {!$Api.Session_ID}'}
        });
        
       $j.cometd.addListener('/meta/handshake', function(message){ 
            console.log("--handshake status: " + JSON.stringify(message));
            if(message.successful){
                callInfoSubscription();
                $j("#errorDiv").html('');
            }else if(!message.successful && message.error != undefined){
                $j("#errorDiv").html('<span style="color: RED;">' + message.error + '</span><br>');
            }
        });
        
        $j.cometd.addListener('/meta/connect', function(message){
            if(!message.successful){
                console.log('--Connection not successful. Trying to handshake.')
                var topicToUnsubscribe = pushTopicSubscription;
                $j.cometd.unsubscribe(topicToUnsubscribe);
                pushTopicSubscription = null;
                $j.cometd.handshake();
                //Retry for 3 time
            }else{
                console.log('--Got Connected');
                //refreshCallTable();
            }
        });
        
        $j.cometd.addListener('/meta/disconnect', function(message){
            console.log('--Got Disconnected');
            $j.cometd.handshake();
        });   
    }catch(exception){
        console.log('--Exception: ' + exception);
    }
}
function callInfoSubscription(){
	try{
		console.log('--in call info subscription function');
		// Subscribe to a topic. JSON-encoded update will be returned in the callback
		pushTopicSubscription = $j.cometd.subscribe('/topic/MessageInformation', function(message) {
           	addWarningToMark(message);
		}); 
	}
	catch(exception){
          console.log('--Exception: ' + exception);
	}
}
function disconnect() {
    $j.cometd.disconnect();
}
window.onbeforeunload = disconnect;
 </script>
 <script id="treeview-template" type="text/x-kendo-tmpl">

	<span class="noAssignLead"
		childrenItems="#:item.subdataid#"
		groupflg="#:item.isHasChildren#"
		leadUid="#:item.id#"
		roomTypeUnm="#=item.roomTypeName#"
		roomTypeUid="#:item.roomTypeId#"
    	starttime="#:item.startDateTime#"	
    	endtime="#:item.endDateTime#"
		dataid="#:item.id#" >
		# if (! item.isHasChildren ) { #
			# if (item.statusIcon != "" ) { #
			<img src="#= item.statusIcon #" style="width:18px;height:18px;vertical-align: middle;" />
			# }	#
			<a href="/#=item.id #" target="_blank">#=item.text #</a>
		# } else { #
			#=item.text #
		# }	#
	</span>
</script>
 
</head>

<body onresize="resizeMapDiv()">
 <div id="map" style="overflow:auto;"></div>
 <apex:actionStatus id="refStatusBlock"	onstart="javascript:blockUi();" onstop="unblockUi();" />	<!-- 処理中場合、画面BLOCK処理 -->
 <apex:form id="actionForm" >
 	<apex:inputHidden value="{!leadJson}" id="leadJsonHid"/>
 	<apex:inputHidden value="{!titleInfoLstJson}" id="titleJsonHid"/>
 	<input type="hidden" value="{!roomMessageJson}" id="hidRoomMessageJson"/>
 	<apex:inputHidden value="{!refreshMode}" id="hideMode"/>
	 <script>
	 	
	 	$j(document).ready(function() {
	 		//機能ワインド
	        $j("#functionWindow").show();
	        $j("#functionWindow").css({
				top: 10,
				width:380,
	   			left: $j(window).width() - 380
			});
			reload();
			$j(".gmnoprint[title='leadFun']").kendoDropTarget({
                 dragenter: droptargetOnDragEnter
            });
            /**/
	 	});
	 	function minOrMax(that){
	 		var minOrMax = $j(that).val();
	 		if(minOrMax == "minsize"){
	 			$j("#functionWindow").height(100);
	 			$j("#functionWindow div.k-content").height(0);
	 			$j(that).val("maxsize");
	 			//$j(that).parents("#functionWindow").find("#basicDiv").height(50);
	 		}else{
	 			$j(that).val("minsize");
	 			$j("#functionWindow").height(600);
	 			$j("#functionWindow div.k-content").height(500);
	 		}
	 	}
	 </script>
	 <div style="width:60px;background:black;-moz-opacity:0.5; -khtml-opacity: 0.5; opacity: 0.5;position: fixed;top:100px;left:10px; display:{!if(refreshMode !='futu', 'none','block')}" onclick="backToMain();">
	 	<span style="color:white"><apex:image value="/img/arrow2_picklist_left.gif" />戻り</span>
	 </div>
 	 <div id="functionWindow" style="display:none;">
 	 	<div style="position: absolute; top: 10px; left: 300px; height: 30px; width: 30px;">
	 		<span class="k-font-icon k-i-minimize"></span>
	 		<span class="k-font-icon k-i-copy"></span>
	 		<input type="button" onclick="minOrMax(this)" value="minsize"/>
		 </div>
 		<div id="tabstrip">
	 		<ul>
	 			<li class="k-state-active">基本情報</li>
	 			<!-- <li class="noAssignTitle">未割り当予約</li> -->
	 			<!-- 
	 			<li>部屋情報</li> -->
	 		</ul>
	 	
			<div id="basicDiv" style="height: 500px; overflow: auto;">
				<apex:pageBlock id="basicArea" title="条件エリア">
					<apex:outputLabel >
					    <apex:selectList size="1" value="{!branchShopNm}" rendered="{!branchShopLst.size > 0}" id="branchShopCd">
					        <apex:selectOption itemValue="" itemLabel="All"/>
					        <apex:selectOptions value="{!branchShopLst}" />
					        <apex:actionSupport event="onchange" action="{!refreshBranShop}" rendered="false"/>
					    </apex:selectList>
					    <apex:selectList size="1" value="{!roomTypeNm}" rendered="{!roomTypeLst.size > 0}" id="roomTypeSelectId">
					        <apex:selectOption itemValue="" itemLabel="All"/>
					        <apex:selectOptions value="{!roomTypeLst}" /> 
					    </apex:selectList>
					</apex:outputLabel>
				</apex:pageBlock>
				<apex:pageBlock id="dateArea" title="日付エリア">
					<apex:outputText value="{!strToday}" />
					<apex:outputPanel id="calendarPanel" style="display:-moz-inline-box; display:inline-block; width:180px;">
				   	 	<apex:outputLabel value="指定日" for="gotoDate" styleClass="label" style="font-weight: bold;" />&nbsp;
				    	<apex:inputField value="{!selectDate.Checkinday__c}" id="gotoDate" style="font-size: 1.2em; width:120px">
				    	 	<apex:actionSupport event="onchange" action="{!gotoDate}" rerender="actionForm" status="refStatusBlock"  oncomplete="javascript:syncNoAssignLeadInfo();" />
				    	</apex:inputField>
				    </apex:outputPanel>
				</apex:pageBlock>
				<apex:pageBlock id="cloudArea" title="天気予報エリア">
				</apex:pageBlock>
				<apex:pageBlock id="totalArea" title="統計情報エリア">
					お客様ステータス
						<apex:pageBlockSection columns="1" id="createPageBlockSection">
							<!-- お客様ステータス -->
							<apex:pageBlockSectionItem id="relcontactItem" helpText="空室">
							<!--空室 [<span id="emptyRoom">0</span>] <img src="http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|7CCD7C"/>-->
							空室 [<span id="emptyRoom">0</span>] <img src="{!URLFOR($Resource.mapFile, 'image/chart2.png')}"/>
							</apex:pageBlockSectionItem>
							<!-- お客様ステータス -->
							<apex:pageBlockSectionItem helpText="空室">
							<!--割当済 [<span id="leadRoom">0</span>]  <img src="http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FF3030"/>-->
							割当済 [<span id="leadRoom">0</span>]  <img src="{!URLFOR($Resource.mapFile, 'image/chart3.png')}"/>
							</apex:pageBlockSectionItem>
							<!-- お客様ステータス 
							<apex:pageBlockSectionItem helpText="空室">
								滞在 [0] <img src="http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FF3030"/>
							</apex:pageBlockSectionItem>-->
							<!-- お客様ステータス 
							<apex:pageBlockSectionItem helpText="空室">
								出発予定 [0]<img src="http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FF3030"/>
							</apex:pageBlockSectionItem>-->
							<!-- お客様ステータス 
							<apex:pageBlockSectionItem helpText="空室">
								出発 [0]<img src="http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FF3030"/>
							</apex:pageBlockSectionItem>-->
						</apex:pageBlockSection>
						<!-- 
					部屋ステータス
					<apex:outputPanel >
						<div>
							<ul>
								<li>
									未清掃 [0]
								</li>
								<li>
									故障 [0]
								</li>
							</ul>
						</div>
					</apex:outputPanel> -->
				</apex:pageBlock>
				<!-- 
				<apex:pageBlock id="clearArea" title="清掃機能エリア">
				</apex:pageBlock> -->
			</div>
			<div class="noAssignLeadListView" style="height:200px;"></div>
			<div style="height:200px;">
			</div>
		</div>
	 </div>
 </apex:form>

<apex:form >
	<!--
	<apex:actionFunction name="changeRoomFun" oncomplete="roomChangeAfterAct();"
	action="{!changeRoom}" rerender="roomIndicator" status="refStatusBlock"/> onbeforedomupdate="refreshDS()"
	 -->
	<apex:inputHidden id="chgRoomLeadIdHid" value="{!strLeadId}"/>
	<apex:inputHidden id="chgRoomIdHid" value="{!strNewRoomId}" />
	<apex:inputHidden id="chgRoomNmHid" value="{!strNewRoomNo}" />
</apex:form>

<div id="myPanel" style="display: none; width: 550px; " >
  <div class="hd">
    <apex:outputText value="部屋詳細情報" />
  </div>

	<apex:outputPanel layout="block" styleClass="bd" >
		<apex:form > 
			<div style="overflow: auto;height:400px;"> 
		<!-- ORG VALUE HIDDEN SAVE -->
		<apex:inputHidden value="{!leadInfo.orgLeadPeopleNum}" id="bHidPeopleNumId"/>
		<apex:inputHidden value="{!leadInfo.orgNights}" id="bHidNightId"/>
		<apex:inputHidden value="{!leadInfo.leadRoomId}" id="bHidRoomId"/>
		<apex:inputHidden value="{!leadInfo.entryTime}" id="bHidEntryTime" />
		<apex:inputHidden value="{!leadInfo.departureTime}" id="bHidDepartureTime" />

		<apex:inputHidden id="leadIdHidden" value="{!strLeadId}" />
		<apex:inputHidden id="accIdHidden"  /> 
		<apex:inputHidden id="leadStatusHidden" value="{!RoomDetail.leadDetail.Field298__c}" />

		<apex:inputHidden id="bHidGroupLeadId" value="{!groupLeadIds}"  />
		<apex:inputHidden id="bHidLeadIndexId" />
		<apex:inputHidden id="bHidGroupFlg" value="{!isGroupFlg}" /> 
		<!-- 泊数変更機能(ActionFunction) -->
		<!-- 2019/02/15 マップ機能無効ソース処理　by zy BEGIN -->
		<!-- 
		<apex:actionFunction name="chgSaveNightsInfoFun" rerender="roomIndicator,leadDetailWinMsgPanel"
			action="{!chgSaveNightsInfo}"
			oncomplete="bookingCreateCallBack();unblockUi();" />
 		 -->
 		 <!-- 2019/02/15 マップ機能無効ソース処理　by zy END -->
		<apex:pageBlock id="dblock">

		<!-- Message Panel Block -->
		<apex:outputPanel id="leadDetailWinMsgPanel">
		  <apex:pageMessages id="inputFormMsg"/>
		  <apex:inputHidden value="{!bookingCreateOK}" id="hidDataCreateOK"/><!-- Hidden:Data Create IS OK -->
		</apex:outputPanel>

          <apex:pageBlockSection columns="1" id="dsec">
			<apex:pageBlockSectionItem >
				<apex:outputLabel value="予約番号" />
				<apex:outputText id="bLeadIndexNo" />
			</apex:pageBlockSectionItem>
			<apex:pageBlockSectionItem >
				<apex:outputLabel value="予約名" />
		       	<apex:outputText id="bname" value="{!RoomDetail.leadDetail.name}" />
          	</apex:pageBlockSectionItem>
			<apex:pageBlockSectionItem >
				<apex:outputLabel value="お客様" />
				<apex:outputText id="bContactRef" />
			</apex:pageBlockSectionItem>
          	<apex:outputField id="bField298__c"    value="{!RoomDetail.leadDetail.Field298__c}"/>

          	<apex:pageBlockSectionItem >
          		<apex:outputLabel value="{!$ObjectType.Lead__c.Fields.EntryTime__c.Label}" />
          		<apex:outputPanel >
	           	<table >
            	<tr >
                    <td style="vertical-align: middle">
                    <apex:outputText id="bEntryTime__c" />&nbsp;&nbsp;<apex:outputText id="bField4__c" />
					</td>
                    <td style="vertical-align: middle" class="timeChangeTd">→</td>
                    <td style="vertical-align: middle" class="timeChangeTd">
                        <apex:inputField id="bInputField4__c" value="{!RoomDetail.leadDetail.Field4__c}" />
                    </td>
                </tr>
                </table>
	          	</apex:outputPanel>
			</apex:pageBlockSectionItem>
			<apex:pageBlockSectionItem >
				<apex:outputLabel value="{!$ObjectType.Lead__c.Fields.Departure__c.Label}" />
				<apex:outputPanel >
	           	<table >
            	<tr >
                    <td style="vertical-align: middle">
                    <apex:outputText id="bDepartureDate__c" />&nbsp;&nbsp;<apex:outputText id="bDepartureTime__c" />
					</td>
                    <td style="vertical-align: middle" class="timeChangeTd">→</td>
                    <td style="vertical-align: middle" class="timeChangeTd">
                        <apex:inputField id="bInputField3__c" value="{!RoomDetail.leadDetail.Field3__c}"/>
                    </td>
                </tr>
                </table>
            	</apex:outputPanel>
            </apex:pageBlockSectionItem>
			<apex:pageBlockSectionItem >
				<apex:outputLabel value="泊数" />
				<apex:outputLabel >
	           	<table >
            	<tr >
                    <td style="vertical-align: middle"><apex:outputText id="bNights" /></td>
                    <td style="vertical-align: middle" class="roomChangeTd">→</td>
                    <td style="vertical-align: middle" class="roomChangeTd">
                        <apex:inputText value="{!leadInfo.nights}" id="bInputNights"
                        				style="width:40px;font-size: 14px;"
                        				onchange="setDepartureDateAuto()"/>
                    </td>
                </tr>
                </table>
				</apex:outputLabel>
			</apex:pageBlockSectionItem>

			<apex:pageBlockSectionItem >
				<apex:outputLabel value="{!$ObjectType.Lead__c.Fields.StayPersons__c.Label}" />
				<apex:outputLabel >
	           	<table >
            	<tr >
                    <td style="vertical-align: middle"><apex:outputText id="bStayPersons__c" /></td>
                    <td style="vertical-align: middle" class="roomChangeTd">→</td>
                    <td style="vertical-align: middle" class="roomChangeTd">
                        <apex:inputText value="{!leadInfo.leadPeopleNum}" id="bInputStayPersons"
                        				style="width:40px;font-size: 14px;"
                        				onchange="chkStayPersons()"/>
                    </td>
                </tr>
                </table>
				</apex:outputLabel>
			</apex:pageBlockSectionItem>

            <apex:pageBlockSectionItem >
            	<apex:outputLabel value="予約チャネル" />
            	<apex:outputField id="bField2__c" value="{!RoomDetail.leadDetail.Field2__c}" />
            </apex:pageBlockSectionItem>

            <apex:outputField id="bplaninfo"    value="{!RoomDetail.leadDetail.Field310__c}" />
            <apex:pageBlockSectionItem labelStyle="vertical-align: middle;">
				<apex:outputLabel value="部屋" />
				<!-- ルーム・チェンジ -->
				<apex:outputText id="bRroom__c" />
            </apex:pageBlockSectionItem>
            <apex:outputField id="bComment3__c"  value="{!RoomDetail.leadDetail.Comment3__c}" />

          </apex:pageBlockSection> 

        </apex:pageBlock> 
		      </div>
			  <div style="text-align: right;margin-top: 5px" >
        <!-- 2018/03/11 ボタン削除
	  	<input type="button" value="清掃済" id="cleanRoomBtn" style="width: 100px" class="btn" onclick="roomCleanAct(this,{!isShowGroupConfirm})"/>
	    <input type="button" value="変更" id="chgNightsBtn" style="width: 100px" class="btn"/>
	    <input type="button" value="保存" id="chgNightsSaveBtn" style="width: 100px" class="btn"/>
	    -->
	    <!--
	    <input type="button" value="キャンセル" id="chgNightsCanelBtn" style="width: 100px" class="btn"/>
	    <apex:commandButton value="チェックイン" onclick="teamConfig(this,{!isShowGroupConfirm})"
            oncomplete="bookingCreateCallBack();" action="{!checkInByRoom}" id="leadCheckInBtn"
            reRender="roomIndicator,messagePanel"  status="refStatusBlock"  style="width: 100px" />
	     -->
	    <!-- 2018/03/11 ボタン削除
	    <input type="button" value="チェックイン" id=":leadCheckInBtn" actKbn="checkin" onclick="teamConfig(this,{!isShowGroupConfirm})" style="width: 100px" class="btn"/>
	    <apex:actionFunction name="checkInByRoom" oncomplete="bookingCreateCallBack();" action="{!checkInByRoom}"
           	reRender="roomIndicator,leadDetailWinMsgPanel"  status="refStatusBlock" />
        -->
	    <!--
	    <apex:commandButton value="チェックアウト"
	        oncomplete="bookingCreateCallBack();" action="{!checkOutByRoom}" id="leadCheckOutBtn"
	        reRender="roomIndicator,leadDetailWinMsgPanel"  status="refStatusBlock"  style="width: 100px" />
	     -->
	    <!-- 2018/03/11 ボタン削除
	    <input type="button" value="チェックアウト" id=":leadCheckOutBtn" actKbn="checkout" onclick="teamConfig(this,{!isShowGroupConfirm})" style="width: 100px" class="btn"/>
		<apex:actionFunction name="checkOutByRoom" oncomplete="bookingCreateCallBack();" action="{!checkOutByRoom}"
           	reRender="roomIndicator,leadDetailWinMsgPanel"  status="refStatusBlock" />

	    <input type="button" value="会計" id="accBtn" class="btn" style="width: 100px" onclick="javascript:openAccWindos()"/>
	    <input type="button" value="印刷" id="prtBtn" class="btn" style="width: 100px" onclick="javascript:openAccPdfs()"/>
	    -->
	    <input type="button" value="キャンセル" id="cancelBtn" class="btn" style="width: 100px" />
	  </div>
	</apex:form>

	</apex:outputPanel>
</div>
 
</body>
</html>

<apex:pageMessages showDetail="true" />
</apex:page>