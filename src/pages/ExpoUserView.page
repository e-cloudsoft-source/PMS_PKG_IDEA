<apex:page controller="ExpoUserViewCtrl" action="{!initAct}" showHeader="false" standardStylesheets="false" title="ユーザ一覧" cache="false" >
<!-- css -->
<apex:stylesheet value="{!URLFOR($Resource.Expo, 'css/kendo.common.min.css')}"/>
<apex:stylesheet value="{!URLFOR($Resource.Expo, 'css/kendo.default.min.css')}"/>
<!-- js -->
<apex:includeScript value="{!URLFOR($Resource.Expo, 'js/jquery.min.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.Expo, 'js/kendo.all.min.js')}"/>
<style type="text/css">
.k-pager-wrap>.k-link>.k-icon{
	margin-top: 4px;
}
.k-active-filter, .k-state-active, .k-state-active:hover {
	border-color: #e45200;
	background-color: #ff6b18;
}
#buttonBar{
	position: relative;
}
.icon-status{
	width: 14px;
	margin-left: 5px;
	display:none;
}
.boxDiv{
	border: 3px solid #e3e3e3;
	border-radius: 4px;
	margin-bottom: 10px;
}

.k-checkbox-label{
	height: 16px;
}
</style>
<apex:form >
	<input type="hidden" value="{!colnumJson}" id="hidColumns" /> 
</apex:form>
<header id="header">
	<c:ExpoHeaderComp curUser="{!currentUser}"  sid="{!sessionId}"/>
</header>
<div id="bodyDiv">
	<div class="boxDiv">
		<div id="grid" style="margin: 5px;"></div>
	</div>
</div>
<footer id="footer">
	<c:ExpoFooterComp />
</footer>
<script>

// 获取所有选择项的id
function getSelectIds(){
	var selectIds = [];
	$(".row-checkbox").each(function(index, element){
		var isCheck = element.checked;
		if(isCheck && element.id != "") selectIds.push(element.id);
	});
	return selectIds
}

// 更改密码,批量
function passwordChange(ids){
	if(ids.length == 0){
		alert("一件以上選択してください。");
		return;
	}
	startLoading();
	invokeAction("passwordChange", JSON.stringify(ids), function(result){
		stopLoading();
		if(result == 'error'){
			alert("ERROR");
			return;
		}
	});
}

/*function isactiveChange(ids){
	if(ids.length == 0){
		alert("未選択");
		return;
	}
	startLoading();
	invokeAction("isactiveChange", JSON.stringify(ids), function(result){
		if(result == 'error'){
			alert("ERROR");
			return;
		}
		location.reload(false);
	});
}*/

// 发送信息到后台
function invokeAction(invokeMethod, jsonData, callback){
	if(!invokeMethod) return;
	Visualforce.remoting.Manager.invokeAction(
		"{!$RemoteAction.ExpoUserViewCtrl.invokeAction}",invokeMethod, jsonData || "", function (result, event) {
			if (event.type == 'exception') {
				alert(event.message);
			} else {
				callback && callback(result);
			}
	});
}


$(document).ready(function() {
	kendo.culture("ja-JP");
	var wH = $(window).height();
	var grid = $("#grid");
	var position = grid.offset();
	var columnsSetting = customColumnsSetting();
	headerTemplate: '<input type="checkbox" class="allcheck" name="printCheck" onclick="chgAllCheck(this)" />'
	// Grid Table Size AutoSetup
	grid.css('height', (wH - position.top - 55) + 'px').kendoGrid({
		toolbar: [{
				template: '<a href="{!URLFOR($Page.ExpoUserEdit)}?sid={!sessionId}" class="btn bc-bl" style="margin: 5px 0;padding: 4px 0;display: inline-block;">新規ユーザ</a>'
			},{
				template: '<a class="btn bc-bl" style="margin: 5px 5px;padding: 4px 0;display: inline-block;" onclick="passwordChange(getSelectIds());">ﾊﾟｽﾜｰﾄﾞﾘｯｾﾄ</a>'
			}],
		dataSource: getGridsDs(fieldsTyp),
		height: (wH - position.top - 41),
		serverPaging: true,
		sortable: true, // 排序Flg
		columnMenu: {
			messages: {
				// 昇順
				sortAscending: "{!$Label.MSG_041_0051}",
				// 降順
				sortDescending: "{!$Label.MSG_041_0052}",
				// 列
				columns: "{!$Label.MSG_041_0053}",
				// フィルター	
				filter: "{!$Label.MSG_041_0041}",
			},
			columns: false,
		},
		filterable: {
			operators: {
				number: {
					// 指定の値に等しい
					eq: "{!$Label.MSG_041_0033}",
					// 指定の値に等しくない
					neq: "{!$Label.MSG_041_0034}",
					// 指定の値より以上
					gte: "{!$Label.MSG_041_0043}",
					// 指定の値より大きい
					gt: "{!$Label.MSG_041_0044}",
					// 指定の値より以下
					lte: "{!$Label.MSG_041_0045}",
					// 指定の値より小さい
					lt: "{!$Label.MSG_041_0046}",
				},
				string: {
					// 指定の値に等しい
					eq: "{!$Label.MSG_041_0033}",
					// 指定の値に等しくない
					neq: "{!$Label.MSG_041_0034}",
					// 指定の値で始まる
					startswith: "{!$Label.MSG_041_0035}",
					// 指定の値を含む
					Contains: "{!$Label.MSG_041_0036}",
					// 指定の値を含まない
					doesnotcontain: "{!$Label.MSG_041_0037}",
					// 指定の値で終わる
					endswith: "{!$Label.MSG_041_0038}",
				}
			},
			messages: {
				// フィルター:
				info: "{!$Label.MSG_041_0032}",
				// および
				and: "{!$Label.MSG_041_0039}",
				// または
				or: "{!$Label.MSG_041_0040}",
				search: "{!$Label.MSG_040_0058}", 
				checkAll: "{!$Label.MSG_040_0095}",
				selectedItemsFormat: "{0} {!$Label.MSG_040_0096}",
				// フィルター
				filter: "{!$Label.MSG_040_0103}",
				// クリア
				clear: "{!$Label.MSG_040_0106}",
				// 昇順
				sortAscending: "{!$Label.MSG_041_0051}",
				// 降順
				sortDescending: "{!$Label.MSG_041_0052}",
				// 列
				columns: "{!$Label.MSG_041_0053}",
			}
		}, // 筛选Flg
		resizable: true,
		groupable: false, // 自定义分组Flg
		pageable:{ // 分页Flg
			refresh: true,
			//pageSizes: true,
			buttonCount: 5
		},
		// 对应上面的显示，并且显示对应的名头
		columns: columnsSetting,
	});
	
	grid.data("kendoGrid").table.on("click", ".row-checkbox", function(){
		var checked = this.checked;
		var checkAll = true;
		$(".row-checkbox").each(function(index, element){
			var isCheck = element.checked;
			if(!isCheck){
				checkAll = false;
				return false;
			}
		});
		if($("#header-chb").prop('checked') != checkAll) $("#header-chb").prop('checked', checkAll);	
	});
	
	$("#header-chb").change(function(ev){
		var checked = ev.target.checked;
		$(".row-checkbox").each(function(index, element){
			var isCheck = element.checked;
			if(checked){
				if(!isCheck) element.checked = true;
			}else{
				if(isCheck) element.checked = false;
			}
		});
	});
});
fieldsTyp = {};
// 自定义内容
function customColumnsSetting(columns){
	var columnStr = $("#hidColumns").val();
	var columns = [];
	if (columnStr != undefined && columnStr != "") {
		columns = JSON.parse(columnStr);
		for (var i = 0 ; i < columns.length ; i++) {
			if(columns[i].field == '') columns[i].width = '34px';
			if(!kendo.support.mobileOS){
				if(columns[i].field == 'name') columns[i].width = '130px';
				else if(columns[i].field == 'phone__c') columns[i].width = '150px';
				else if(columns[i].field == 'fax__c') columns[i].width = '150px';
				else if(columns[i].field == 'email__c') columns[i].width = '230px';
				else if(columns[i].field == 'isactive__c') columns[i].width = '80px';
				else if(columns[i].field == 'username__c') columns[i].width = '200px';
			}
			if (columns[i].typ == 'DOUBLE' || columns[i].typ == 'INTEGER' || columns[i].typ == 'PERCENT' || columns[i].typ == 'CURRENCY') {
				fieldsTyp[columns[i].field] = {type : "number"};
				columns[i].attributes = {style: "text-align: right!important;"};
				if(columns[i].typ == 'CURRENCY') columns[i].template = "#= kendo.toString(Number(" + columns[i].field + "), 'c') || ''#";
				if(columns[i].typ == 'PERCENT') columns[i].template = "#= kendo.toString(Number(" + columns[i].field + "), 'p') || ''#";
			}else if (columns[i].typ == 'DATE') {
				// columns[i].template = "#= kendo.toString(kendo.parseDate(" + columns[i].field + ", 'yyyy-MM-dd HH:mm:ss'), 'yyyy-MM-dd') || ''#";
			}else if (columns[i].typ == 'TIME') {
				columns[i].template = "#= kendo.toString(kendo.parseDate(" + columns[i].field + ", 'yyyy-MM-dd HH:mm:ss'), 'HH:mm:ss') || ''#";
			}
		}
	}
	return columns;
}
function getGridsDs(fieldsType){
	return new kendo.data.DataSource({
				transport: {
					read: function (options) {
						Visualforce.remoting.Manager.invokeAction(
							// 2019/09/15 Security Check BY zyz BEGIN
							"{!$RemoteAction.ExpoUserViewCtrl.getModel}", "{!JSENCODE(currentUser.ShopCode__c)}", "{!currentUser.ExpoOrgInfoRef__c}", function (result, event) {
							// 2019/09/15 Security Check BY zyz END
								if (event.type == 'exception') {
									alert(event.message);
								} else {
									options.success(result);
								}
						}, {escape: false});
					}
				},
				pageSize: 100,
				schema:{
					model:{
						fields: fieldsType
					}
				}
			});
}
</script>
</apex:page>